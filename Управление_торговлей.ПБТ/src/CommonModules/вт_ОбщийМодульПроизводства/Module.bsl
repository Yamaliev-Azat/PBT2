
&НаСервере
Функция ПолучитьМинМаксОстаток(СсылкаНоменклатура, ИмяРеквизита)   Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НоменклатураДополнительныеРеквизиты.Значение КАК Значение
	                      |ИЗ
	                      |	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	                      |ГДЕ
	                      |	НоменклатураДополнительныеРеквизиты.Ссылка = &Ссылка
	                      |	И НоменклатураДополнительныеРеквизиты.Свойство.Заголовок = &Заголовок");
	Запрос.УстановитьПараметр("Ссылка",СсылкаНоменклатура);
	Запрос.УстановитьПараметр("Заголовок",ИмяРеквизита);
	
	ЗначРеквизита = 0;
	выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		  ЗначРеквизита = Выборка.Значение;
	КонецЕсли;
	
	Возврат ЗначРеквизита;
КонецФункции

&НаСервере
Функция ПолучитьВариантПроизводстваПродукции(пГотоваяПродукция, пХарактеристикаПродукции=Неопределено) Экспорт
	пВариантПроизводства = Новый Структура("Ссылка,Время",Справочники.вт_ВариантыПроизводстваПоТехКартам.ПустаяСсылка(),0);	
	ОтборПоХарактеристике = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	Если  пХарактеристикаПродукции<>Неопределено ТОгда
		ОтборПоХарактеристике =   пХарактеристикаПродукции;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вт_ВариантыПроизводстваПоТехКартам.ВремяПроизводстваСек КАК ВремяПроизводстваСек,
		|	вт_ВариантыПроизводстваПоТехКартам.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.вт_ВариантыПроизводстваПоТехКартам КАК вт_ВариантыПроизводстваПоТехКартам
		|ГДЕ
		|	вт_ВариантыПроизводстваПоТехКартам.Владелец = &Владелец
		|	И вт_ВариантыПроизводстваПоТехКартам.Основной = ИСТИНА
		|	И вт_ВариантыПроизводстваПоТехКартам.Характеристика = &Характеристика
		//|	И вт_ВариантыПроизводстваПоТехКартам.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРецептов.Стандартный)
		|	И вт_ВариантыПроизводстваПоТехКартам.Основной
		|
		|УПОРЯДОЧИТЬ ПО
		|	вт_ВариантыПроизводстваПоТехКартам.Основной"; 	
	Запрос.УстановитьПараметр("Владелец", пГотоваяПродукция);	
	Запрос.УстановитьПараметр("Характеристика", ОтборПоХарактеристике);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		ВыборкаДетальныеЗаписи.Следующий();
		Если ВыборкаДетальныеЗаписи.Ссылка <> Неопределено Тогда
			пВариантПроизводства.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
			пВариантПроизводства.Время = ВыборкаДетальныеЗаписи.ВремяПроизводстваСек;
		КонецЕсли;	
	КонецЕсли;
	Возврат пВариантПроизводства;
КонецФункции

&НаСервере
Функция ПолучитьВариантКомплектации(пНоменклатура) Экспорт
	пВариантКомплектации = Новый Структура("Ссылка",Справочники.ВариантыКомплектацииНоменклатуры.ПустаяСсылка());	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыКомплектацииНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|ГДЕ
		|	ВариантыКомплектацииНоменклатуры.Основной = ИСТИНА
		|	И ВариантыКомплектацииНоменклатуры.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", пНоменклатура);	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		ВыборкаДетальныеЗаписи.Следующий();
		Если ВыборкаДетальныеЗаписи.Ссылка <> Неопределено Тогда
			пВариантКомплектации.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЕсли;	
	КонецЕсли;
	Возврат пВариантКомплектации;
	
КонецФункции

&НаСервере 
Процедура АвтоСозданиеОтчетовПроизводства() Экспорт
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.вт_АвтоСозданиеОтчетовПроизводства);
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	вт_ГрафикВыполненияПроизводства.Заказ КАК Заказ,
	               |	вт_ГрафикВыполненияПроизводства.ДокументОснование КАК ДокументОснование,
	               |	МАКСИМУМ(вт_ГрафикВыполненияПроизводства.ДатаОкончания) КАК ДатаОкончания
	               |ИЗ
	               |	РегистрСведений.вт_ГрафикВыполненияПроизводства КАК вт_ГрафикВыполненияПроизводства
	               |ГДЕ
	               |	вт_ГрафикВыполненияПроизводства.ОбрабатываетсяРегламентнымЗаданием
	               |	И вт_ГрафикВыполненияПроизводства.ДатаОкончания <= &ТекДата
	               |	И вт_ГрафикВыполненияПроизводства.ОтчетПроизводства = ЗНАЧЕНИЕ(Документ.вт_ОтчетПроизводства.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_ГрафикВыполненияПроизводства.Заказ,
	               |	вт_ГрафикВыполненияПроизводства.ДокументОснование";
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Заказ = Выборка.Заказ;
		ДокОснование = Выборка.ДокументОснование;
		ДатаОкончания = Выборка.ДатаОкончания;
		СформироватьОтчетПроизводства(Заказ,ДокОснование,ДатаОкончания);
	КонецЦикла;	
КонецПроцедуры	

&НаСервере 
Процедура СформироватьОтчетПроизводства(Заказ,ДокОснование,ДатаОкончания)
	НовыйОтчетПроизводства = Документы.вт_ОтчетПроизводства.СоздатьДокумент();
	НовыйОтчетПроизводства.Заполнить(Заказ); 	
	НовыйОтчетПроизводства.Дата = ДатаОкончания;
	НовыйОтчетПроизводства.ОтразитьВРеглУчете = Ложь;
	НовыйОтчетПроизводства.ОтразитьВПроизводственномУчете = Истина;
	СтруктураОтбора = Новый Структура("ДокументОснование",ДокОснование);
	Попытка
		НовыйОтчетПроизводства.Записать();
		
		Выборка = РегистрыСведений.вт_ГрафикВыполненияПроизводства.Выбрать(СтруктураОтбора);
		Пока Выборка.Следующий() Цикл
			ТекЗапись = Выборка.ПолучитьМенеджерЗаписи();
			Если ТекЗапись.Заказ = Заказ Тогда
				ТекЗапись.Прочитать();
				ТекЗапись.ОтчетПроизводства = НовыйОтчетПроизводства.Ссылка;
				ТекЗапись.ОбрабатываетсяРегламентнымЗаданием = Ложь;
				ТекЗапись.Записать(Истина);
			КонецЕсли;	
		КонецЦикла;	
				
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Автоформирование отчетов производства '"+ОписаниеОшибки(), ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Ошибка, , ,
		НСтр("ru = 'Автоформирование отчетов производства'"));   		
	КонецПопытки;
	Попытка
		НовыйОтчетПроизводства.Записать(РежимЗаписиДокумента.Проведение); 		
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Автоформирование отчетов производства '"+ОписаниеОшибки(), ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Ошибка, , ,
		НСтр("ru = 'Автоформирование отчетов производства'"));   		
	КонецПопытки;	
КонецПроцедуры	
