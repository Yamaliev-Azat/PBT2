Функция ПеревестиЯндексом(Знач пИсходныйТекст) Экспорт //brava 0015853
	
	//проверяем не число ли это
	Если ЭтоЧисло(пИсходныйТекст) Тогда  //0019355
	    Возврат пИсходныйТекст;
	КонецЕсли;
	
	//сначала переводим целую фразу
	СпрПер = Справочники.Переводы.НайтиПоНаименованию(пИсходныйТекст);
	Если ЗначениеЗаполнено(СпрПер) Тогда
		Возврат СпрПер.НаАнглийском;
	КонецЕсли; 	
	
	//а потом пословно
	пИсходныйТекст = ПеревестиПословно(пИсходныйТекст); //0022609
	
	Возврат пИсходныйТекст;

	//пИсходныйТекст = СтрЗаменить(пИсходныйТекст, ";", ","); //гг д 0023054
	//
	////гг д Ответ = ОтправитьЗапрос(СокрЛП(пИсходныйТекст),"ru", "eng");
	//Ответ = ОтправитьЗапрос(СокрЛП(пИсходныйТекст),"ru", "en"); //гг д
	//
	//Если Ответ = Неопределено Тогда
	//	Возврат "";
	//КонецЕсли; 
	//
	//Возврат РазобратьОтвет(Ответ);
	
КонецФункции

Функция ЭтоЧисло(Слово) Экспорт
	
	Цифры = "1234567890.,";
	
	Для НомСимвола = 1 По СтрДлина(Слово) Цикл
		
		Если Найти(Цифры, Сред(Слово, НомСимвола, 1)) = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина
	
КонецФункции

Функция ПеревестиПословно(пИсходныйТекст)
	
	Рез = "";
	МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(пИсходныйТекст, " ");
	Для Каждого Строка из Массивстрок Цикл
		Если ЗначениеЗаполнено(Строка) Тогда
			//МассивСтроки = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Строка, ",");
			СпрПер = Справочники.Переводы.НайтиПоНаименованию(Строка);
			Если ЗначениеЗаполнено(СпрПер) Тогда
				Рез = Рез + СпрПер.НаАнглийском+" ";
			Иначе	
				Рез = Рез + Строка+" ";
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат Рез;
	
КонецФункции // ()
 

Функция РазобратьОтвет(XMLОтвет)
	
	//Разбор XML ответа
	StreamXML = New XMLReader;
	StreamXML.SetString(XMLОтвет);		//Чтение XML из строки
	StreamXML.Read();

	//Чтение XML строки
	Пока StreamXML.Read() Цикл
		
		//Не подошли ли к закрытию узла 'response'?
		If StreamXML.NodeType = XMLNodeType.EndElement And StreamXML.Name = "Response" Then
			Return Null;
		EndIf;
		
		//Чтение XML строки и поиск ключа 
		StreamXML.Read();
		If StreamXML.NodeType = XMLNodeType.text And StreamXML.Name = "#text" Тогда	
			Return Строка(StreamXML.Value);
		EndIf;
		
		Продолжить;
	КонецЦикла;
	
	StreamXML.Close();
	
	Return Null
КонецФункции

Функция URLEncode4(Строка="")
	
	Строка = СтрЗаменить(Строка, Символы.ПС, " "); //0016895
	ScrCtrl = Новый COMОбъект("MSScriptControl.ScriptControl");
	ScrCtrl.Language="JScript";
	Сообщение = ScrCtrl.eval("var uri='"+Строка+"'; encodeURI(uri);") ;
	
	Возврат Сообщение;
	
КонецФункции

Функция ОтправитьЗапрос(ТекстПеревода,ЯзыкИсточник,ЯзыкПеревода)
	
	//////////////////////////////
	// Если требуется приобразовать текст в URI
	// используется для передачи параметров - убирает гиперактивные знаки 
	//
	//url_Адрес = URLEncode4(Адрес);
	Текст = URLEncode4(ТекстПеревода);
	api_key = "trnsl.1.1.20130423T082036Z.ab586d0e240ad6db.467989619617d71767718562a9f7f9995bce42b1";	
	
	//Запрос = "https://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q="+Текст+"&langpair="+ЯзыкИсточник+"|"+ЯзыкПеревода;
	Запрос = "https://translate.yandex.net/api/v1.5/tr/translate?key="+api_key+"&lang="+ЯзыкИсточник+"-"+ЯзыкПеревода+"&text="+Текст;

	Попытка
		XMLHttp = GetCOMObject("", "Microsoft.XMLHTTP");
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	
	//Инициируем асинхронный запрос, который вернет управление программе только после получения ответа
	Попытка
		XMLHttp.Open("GET", Запрос, Ложь);
	Исключение
		Ошибка = ОписаниеОшибки();
		Возврат Неопределено;
	КонецПопытки;
	
	//Отправка запроса                                                    
	XMLHttp.Send();
	
	Если XMLHttp.Status = 200 Тогда
		// после возврата ResponseText - можно еще анализировать сам текст ответа приобразованый в ХМЛ структуру
		// использовать при необходимости прочитать результат запроса. 
		// Напр. мы в строке юзаем пхп скрипт и он нам должен отдать результат выполнения... В ResponseText и хранится это значение
		Возврат XMLHttp.ResponseText;		
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
	
КонецФункции

Функция СервисСклонения(СклоняемыйТекст) Экспорт
    
    АдресСервера = "ws3.morpher.ru";
    
    Соединение = Новый HTTPСоединение(АдресСервера,,,,,60, Новый ЗащищенноеСоединениеOpenSSL());
 
    ТекстЗапроса = "/russian/declension?s=" + СклоняемыйТекст;
    
    Заголовки = Новый Соответствие;
    Заголовки.Вставить("User-Agent", "1C Enterprise 8.3");
    Заголовки.Вставить("Accept", "application/json");
    Заголовки.Вставить("charset", "UTF-8");
    
    Запрос = Новый HTTPЗапрос(ТекстЗапроса, Заголовки);
    
    Ответ = Соединение.Получить(Запрос);
        
    Если Ответ.КодСостояния = 200 Тогда
        
        ЧтениеJSON = Новый ЧтениеJSON;
        ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
        СтруктураОтвета = ПрочитатьJSON(ЧтениеJSON);
        ЧтениеJSON.Закрыть();
		
		Возврат СтруктураОтвета;
		//Сообщить(СтруктураОтвета.Р);
		//Сообщить(СтруктураОтвета.Д);
		//Сообщить(СтруктураОтвета.В);
		//Сообщить(СтруктураОтвета.Т);
		//Сообщить(СтруктураОтвета.П);
        
	КонецЕсли;
	
	Возврат Новый Структура;
    
КонецФункции

//перевод гуглом
Функция ПреобразоватьСтрокуОтветаПереводчика (Строка, Ошибка=Ложь, КодОшибки=0, СтрокаОшибки = "") Экспорт
    ТекСтрока     = Строка;
    ТекСтрока     = СтрЗаменить (ТекСтрока, "{""responseData"": {","");
    ТекСтрока     = Лев (ТекСтрока, СтрДлина (ТекСтрока)-1);
    ТекСтроки     = СтрЗаменить (ТекСтрока, ",", Символы.ПС);
    ТекПеревод     = СтрПолучитьСтроку (ТекСтроки, 1);
    ТекПеревод     = СтрЗаменить (ТекПеревод, """translatedText"":""", "");
    ТекПеревод     = Лев (ТекПеревод, СтрДлина (ТекПеревод)-2);
    Возврат ТекПеревод;
КонецФункции

Функция ТекстДляУРЛ (Текст) Экспорт
    хВСХ             = Новый COMОбъект ("MSScriptControl.ScriptControl");
    хВСХ.language     = "javascript";
    Результат         = хВСХ.Eval("escape('"+Текст+"')");
    Возврат Результат;
КонецФункции

Функция ПеревестиТекстГуглом(ИсходныйТекст) Экспорт
	
    Если Не ЗначениеЗаполнено (ИсходныйТекст) Тогда
        Возврат "";
	КонецЕсли;
	
	ЯзыкИсходный = "ru";
	ЯзыкПеревода = "en";
	Ошибка = Ложь;
	КодОшибки = 0;
	ТекстОшибки = "";
	
    Результат = "";
    УРЛСайта = "https://ajax.googleapis.com";

//    УРЛ = "https://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q=<%СЛОВО%>&langpair=<%ЯЗЫКИСТОЧНИК%>|<%ЯЗЫКПЕРЕВОДА%>";
    //УРЛ = "/ajax/services/language/translate?v=1.0&q=<%СЛОВО%>&langpair=<%ЯЗЫКИСТОЧНИК%>|<%ЯЗЫКПЕРЕВОДА%>";
	УРЛ =   "/ajax/services/language/translate?v=1.0&q=<%СЛОВО%>&langpair=<%ЯЗЫКИСТОЧНИК%>|<%ЯЗЫКПЕРЕВОДА%>";
	
    ТекИсходныйТекст = ТекстДляУРЛ (ИсходныйТекст);
    УРЛ = СтрЗаменить (УРЛ, "<%СЛОВО%>", ТекИсходныйТекст);
    УРЛ = СтрЗаменить (УРЛ, "<%ЯЗЫКИСТОЧНИК%>", ЯзыкИсходный);
    УРЛ = СтрЗаменить (УРЛ, "<%ЯЗЫКПЕРЕВОДА%>", ЯзыкПеревода);

    Коннект              = Новый HTTPСоединение(УРЛСайта);
    ЧтениеТекста         = Новый ТекстовыйДокумент;

    СтруктураПараметров = Новый Структура;

    ИмяВременногоФайла=ПолучитьИмяВременногоФайла("txt");
    ФлагОшибкиВеб = Ложь;
    КоличествоПопыток = 3;
    СчПопыток = 1;
    Пока Истина Цикл
        Попытка
            Коннект.Получить(УРЛ,ИмяВременногоФайла);
            Прервать;
        Исключение
            Если СчПопыток >= КоличествоПопыток Тогда
                ФлагОшибкиВеб = Истина;
                Прервать;
            Иначе
                СчПопыток = СчПопыток + 1;
            КонецЕсли;
        КонецПопытки;
    КонецЦикла;

    Если Не ФлагОшибкиВеб Тогда
        ЧтениеТекста.Прочитать(ИмяВременногоФайла, КодировкаТекста.UTF8);
        СтрокаОтвета = ЧтениеТекста.ПолучитьТекст();
        ТекстПеревод = ПреобразоватьСтрокуОтветаПереводчика (СтрокаОтвета);
        Результат = ТекстПеревод;
    Иначе
        Ошибка             = Истина;
        КодОшибки         = 1;
        ТекстОшибки     = "Время ожидания ответа истекло";
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременногоФайла);
	
    Возврат Результат;
	
КонецФункции

//новый яндекс
//Функция получения перевода текста с помощью сервиса Yandex Translate
//https://translate.yandex.net/api/v1.5/tr/translate?key=trnsl.1.1.20181028T164555Z.a9607b69d6eb723d.cfd831d41c39bddeccaf644fed8916778f1ef971&text=people&lang=en-ru
//{key} - ключ со страницы https://translate.yandex.com/developers/keys
//{text} - исходный текст для перевода;
//{lang} - язык исходного текста и язык, в который будет выполнен перевод;
//Ответ приходит в виде строки XML. Пример ответа:
//<?xml version="1.0" encoding="utf-8"?>
//<Translation code="200" lang="en-ru"><text>люди</text></Translation>
Функция ПолучитьПеревод(Знач ИсходноеСлово, ЯзыкИсходногоТекста="ru", ЯзыкДляПеревода="en") Экспорт
	
	Возврат ИсходноеСлово;
	
    Ключ = "trnsl.1.1.20181028T164555Z.a9607b69d6eb723d.cfd831d41c39bddeccaf644fed8916778f1ef971"; 
    
    Соединение = Новый HTTPСоединение(
        "translate.yandex.net", // сервер (хост)
        443, // порт, по умолчанию для http используется 80, для https 443
        , // пользователь для доступа к серверу (если он есть)
        , // пароль для доступа к серверу (если он есть)
        , // здесь указывается прокси, если он есть
        , 60);// таймаут в секундах, 0 или пусто - не устанавливать
	//    Новый ЗащищенноеСоединениеOpenSSL(),  // защищенное соединение, если используется https
	//    Ложь
	//);
    
    ИсходноеСлово = КодироватьСтроку(ИсходноеСлово,СпособКодированияСтроки.КодировкаURL);
    Запрос = Новый HTTPЗапрос("/api/v1.5/tr/translate?key="+Ключ+"&text="+ИсходноеСлово+"&lang="+ЯзыкИсходногоТекста+"-"+ЯзыкДляПеревода);
    Результат = Соединение.Получить(Запрос);
    ТекстXML = Результат.ПолучитьТелоКакСтроку();
    ЧтениеXML = Новый ЧтениеXML();
    ЧтениеXML.УстановитьСтроку(ТекстXML);
    ПостроительДОМ = Новый ПостроительDOM;
    ДокументДОМ = ПостроительДОМ.Прочитать(ЧтениеXML);
    ВеткаTranslation = ДокументДОМ.ДочерниеУзлы[0];    
    
    Возврат ВеткаTranslation.ТекстовоеСодержимое;
    
КонецФункции // ПолучитьПеревод()

