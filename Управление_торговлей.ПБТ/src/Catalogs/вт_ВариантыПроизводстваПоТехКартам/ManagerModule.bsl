Функция ПолучитьЗапасДляДерева(АдресВХран, Товар, КоличествоТовара)
	ТЗОстатки = ПолучитьИзВременногоХранилища(АдресВХран);
	Если ТЗОстатки=Неопределено ТОгда
		ТЗОстатки = Новый ТаблицаЗначений;
		ТЗОстатки.Колонки.Добавить("Номенклатура");
		ТЗОстатки.Колонки.Добавить("Запас");
		ТЗОстатки.Колонки.Добавить("НеРаспределено");
	КонецЕсли;
	
	МассивСтрок = ТЗОстатки.НайтиСтроки(Новый Структура("Номенклатура",Товар ));
	РезультатКоличество = 0;
	Если МассивСтрок.Количество()=0 Тогда
		ТЗРег = РегистрыНакопления.ТоварыНаСкладах.Остатки(ТекущаяДата(),Новый Структура("Номенклатура", Товар),"Номенклатура","ВНаличии");
		ВНаличии =ТЗРег[0].ВНаличии;
		СтрокаОстатки = ТЗОстатки.Добавить();
		СтрокаОстатки.Номенклатура = Товар;
		СтрокаОстатки.Запас = ВНаличии;
		
		РезультатКоличество = Мин(ВНаличии,КоличествоТовара);
		
		СтрокаОстатки.НеРаспределено = СтрокаОстатки.Запас - РезультатКоличество;
	Иначе
		РезультатКоличество = Мин(МассивСтрок[0].НеРаспределено,КоличествоТовара);
		МассивСтрок[0].НеРаспределено = МассивСтрок[0].НеРаспределено - РезультатКоличество;
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(ТЗОстатки,АдресВХран);
	
	Возврат РезультатКоличество;
	
КонецФункции

Процедура ПостроитьДеревоПроизводства(СтрокиДерева, пВариантСсылка, УникИндент="", МножительГотовойПродукции = 1) Экспорт
	
	Если ТипЗнч(пВариантСсылка) = Тип("СправочникСсылка.вт_ВариантыПроизводстваПоТехКартам") Тогда
		Для Каждого СтрокаОперации из пВариантСсылка.Операции Цикл
			СтрокаДерева = СтрокиДерева.Добавить();
			СтрокаДерева.Номенклатура = СтрокаОперации.Операция;
			СтрокаДерева.Количество = СтрокаОперации.НормаВремени;
			СтрокаДерева.Цена = СтрокаОперации.Цена;
			СтрокаДерева.Сумма = СтрокаОперации.Цена * СтрокаОперации.НормаВремени;
						
			СтрокаДерева.ЭтоРабота = Истина; 
		КонецЦикла;
		
		Для Каждого СтрокаСырье из пВариантСсылка.Состав Цикл
			СтрокаДерева = СтрокиДерева.Добавить();
			СтрокаДерева.Номенклатура = СтрокаСырье.Сырье;
			СтрокаДерева.Характеристика = СтрокаСырье.Характеристика;
			СтрокаДерева.Количество = МножительГотовойПродукции * (СтрокаСырье.Количество / пВариантСсылка.Количество);
			СтрокаДерева.Цена = СтрокаСырье.Цена;
			СтрокаДерева.Сумма = СтрокаСырье.Цена * СтрокаДерева.Количество;
			
			ЕстьРецептура           = вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(строкаДерева.Номенклатура).Ссылка;
			ЕстьВариантКомплектации = вт_ОбщийМодульПроизводства.ПолучитьВариантКомплектации(строкаДерева.Номенклатура).Ссылка;
			
		//	СтрокаДерева.Запас = ПолучитьЗапасДляДерева(УникИндент, СтрокаДерева.Номенклатура, СтрокаДерева.Количество);
			
			Если ЗначениеЗаполнено(ЕстьРецептура) ИЛИ ЗначениеЗаполнено(ЕстьВариантКомплектации) Тогда
				СтрокаДерева.ВариантПроизводства = ?(ЗначениеЗаполнено(ЕстьРецептура),ЕстьРецептура, ЕстьВариантКомплектации) ;
				ПостроитьДеревоПроизводства(СтрокаДерева.Строки, СтрокаДерева.ВариантПроизводства,,СтрокаДерева.Количество);
			Иначе
				СтрокаДерева.ЭтоСырье = Истина;		
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(пВариантСсылка)=Тип("СправочникСсылка.ВариантыКомплектацииНоменклатуры") Тогда
		Для Каждого СтрокаСырье из пВариантСсылка.Товары Цикл
			СтрокаДерева = СтрокиДерева.Добавить();
			СтрокаДерева.Номенклатура = СтрокаСырье.Номенклатура;
			СтрокаДерева.Характеристика = СтрокаСырье.Характеристика;
			СтрокаДерева.Количество = СтрокаСырье.КоличествоУпаковок;
			
			ЕстьРецептура           = вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(строкаДерева.Номенклатура).Ссылка;
			ЕстьВариантКомплектации = вт_ОбщийМодульПроизводства.ПолучитьВариантКомплектации(строкаДерева.Номенклатура).Ссылка;
			
		//	СтрокаДерева.Запас = ПолучитьЗапасДляДерева(УникИндент, СтрокаДерева.Номенклатура, СтрокаДерева.Количество);
			
			Если ЗначениеЗаполнено(ЕстьРецептура) ИЛИ ЗначениеЗаполнено(ЕстьВариантКомплектации) Тогда
				СтрокаДерева.ВариантПроизводства = ?(ЗначениеЗаполнено(ЕстьРецептура),ЕстьРецептура, ЕстьВариантКомплектации) ;
				ПостроитьДеревоПроизводства(СтрокаДерева.Строки, СтрокаДерева.ВариантПроизводства,,);
			Иначе
				СтрокаДерева.ЭтоСырье = Истина;		
			КонецЕсли;
			
		КонецЦикла;

	КонецЕсли;
	
	
	
	
КонецПроцедуры	
