
&НаСервере
Процедура СоздатьВыпускПродукцииНаСервере(ДокВыпуск)
	СтрокаТов = ДокВыпуск.Товары.Добавить();
	СтрокаТов.Номенклатура = Объект.Владелец;
	СтрокаТов.Характеристика = Объект.Характеристика;
	СтрокаТов.ВариантПроизводства = Объект.Ссылка;
	СтрокаТов.КоличествоПлан = объект.Количество;
	СтрокаТов.Количество = объект.Количество;
	
	СтрокаТов.КодСтроки = ДокВыпуск.Товары.Количество()+1;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВыпускПродукции(Команда)
	П = Новый Структура("ЗаполнитьСырье",Истина);
	Форм = ПолучитьФорму("Документ.вт_ОтчетПроизводства.Форма.ФормаДокумента",П);
	ДанныеФормы = Форм.Объект;
	СоздатьВыпускПродукцииНаСервере(ДанныеФормы);
	КопироватьДанныеФормы(ДанныеФормы, Форм.Объект);
	Форм.открыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Количество=1;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ЕдИзм) Тогда
		Объект.ЕдИзм=Объект.Владелец.ЕдиницаИзмерения;
	КонецЕсли;
	ОбновитьКолонкиПризнаки();
	
	ВыборВремяПроизводства = ?(ЗначениеЗаполнено(Объект.ВремяПроизводстваСек),1,2);
	ВремяПроизводства      = ?(ЗначениеЗаполнено(Объект.ВремяПроизводстваСек),Объект.ВремяПроизводстваСек,Объект.ВремяПроизводстваЧас);
	
	Элементы.ДекорацияУпаковка.Заголовок = Объект.Владелец.УпаковкаПродукта;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКолонкиПризнаки()
	Для Каждого строкаСостав из Объект.Состав Цикл
		строкаСостав.ЕстьРецептура = вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(строкаСостав.Сырье,строкаСостав.Характеристика).Ссылка;
		строкаСостав.ЕстьВариантКомплектации = вт_ОбщийМодульПроизводства.ПолучитьВариантКомплектации(строкаСостав.Сырье).Ссылка;
		
	КонецЦикла;	
КонецПроцедуры	

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СформироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СформироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СформироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаименование()
	Объект.Наименование = Строка(Объект.Владелец) + " " + Строка(Объект.Характеристика) + " " + Строка(Объект.Количество);
КонецПроцедуры	

&НаСервере
Процедура СоздатьВыпускДляСписанияНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВыпускДляСписания(Команда)
	П = Новый Структура("ЗаполнитьСырье, ОбнулитьКоличествоПродукции",Истина,Истина);
	Форм = ПолучитьФорму("Документ.вт_ОтчетПроизводства.Форма.ФормаДокумента",П);
	ДанныеФормы = Форм.Объект;
	СоздатьВыпускПродукцииНаСервере(ДанныеФормы);
	КопироватьДанныеФормы(ДанныеФормы, Форм.Объект);
	Форм.Открыть();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	запрососновной = Новый Запрос("ВЫБРАТЬ
	|	вт_ВариантыПроизводстваПоТехКартам.Ссылка
	|ИЗ
	|	Справочник.вт_ВариантыПроизводстваПоТехКартам КАК вт_ВариантыПроизводстваПоТехКартам
	|ГДЕ
	|	вт_ВариантыПроизводстваПоТехКартам.Основной = ИСТИНА
	|	И вт_ВариантыПроизводстваПоТехКартам.Владелец = &Владелец
	|	И вт_ВариантыПроизводстваПоТехКартам.Ссылка <> &Ссылка");
	запрососновной.УстановитьПараметр("Владелец",Объект.Владелец);
	запрососновной.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Выборка = запрососновной.Выполнить().Выбрать();
	Если НЕ Выборка.Следующий() Тогда //Нет никаких рецептур основных
		ТекущийОбъект.Основной = Истина;
	ИначеЕсли НЕ Объект.Ссылка.Основной И ТекущийОбъект.Основной И 
		ТекущийОбъект.Характеристика = Выборка.Ссылка.Характеристика тогда
		Об = Выборка.Ссылка.ПолучитьОбъект();
		Об.Основной = Ложь;
		Об.Записать();
	КонецЕсли;
	
	Если ВыборВремяПроизводства=1 Тогда
		Объект.ВремяПроизводстваСек = ВремяПроизводства;
		Объект.ВремяПроизводстваЧас = 0;
	ИначеЕсли ВыборВремяПроизводства=2 Тогда
		Объект.ВремяПроизводстваЧас = ВремяПроизводства;
		Объект.ВремяПроизводстваСек = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

КонецПроцедуры

&НаКлиенте
Процедура СоставСырьеПриИзменении(Элемент)
	ОбновитьКолонкиПризнаки();
КонецПроцедуры

&НаКлиенте
Процедура ОперацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Объект.ВремяПроизводстваЧас = Объект.Операции.Итог("НормаВремени");
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьСтруктуру(Команда)
	КомандаПоказатьСтруктуруНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаПоказатьСтруктуруНаСервере()
	пДеревоПроизводства = РеквизитФормыВЗначение("ДеревоПроизводства");
	пДеревоПроизводства.Строки.Очистить();
	
	Справочники.вт_ВариантыПроизводстваПоТехКартам.ПостроитьДеревоПроизводства(пДеревоПроизводства.Строки,Объект.Ссылка, Строка(УникальныйИдентификатор));
	
	ЗначениеВРеквизитФормы(пДеревоПроизводства,"ДеревоПроизводства");
КонецПроцедуры

&НаКлиенте
Процедура КомандаРасчетСебестоимости(Команда)
	КомандаРасчетСебестоимостиНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаРасчетСебестоимостиНаСервере()
	ДеревоВыпуска = РеквизитФормыВЗначение("ДеревоПроизводства");
	
	Обр = Обработки.вт_РасчетыПлановойСебестоимости.Создать();
	МассивНоменклХарактеристик = Обр.ПолучитьНоменклатурыДерева(ДеревоВыпуска);
	ТаблицаЦен = Обр.ПолучитьЦеныПоВариантуРасчета(МассивНоменклХарактеристик, Организация, ТекущаяДата(),Объект.ВариантРасчетаСебестоимость);
	
	Обр.ЗаполнитьДеревоЦенами(ДеревоВыпуска, ТаблицаЦен);
	Обр.РасчетПромежуточныхВыпусковДерева(ДеревоВыпуска);
	ЗначениеВРеквизитФормы(ДеревоВыпуска,"ДеревоПроизводства");
	
	Об = РеквизитФормыВЗначение("Объект");
	Об.ЗаполнитьЦеныВариантаИзДерева(ДеревоВыпуска);
	Объект.Состав.Загрузить(Об.состав.Выгрузить());
	Объект.Стоимость = Об.Стоимость;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСебестоимостьНаСервере()
	ДеревоПр = РеквизитФормыВЗначение("ДеревоПроизводства");
	Об = РеквизитФормыВЗначение("Объект");
	
	Об.ЗаполнитьЦеныВариантаИзДерева(ДеревоПр);
	Объект.Состав.Загрузить(Об.состав.Выгрузить());
	Объект.Стоимость = Об.Стоимость;
	Объект.ДатаЗаписиСтоимости = ТекущаяДата();
	
	//Для каждого СтрокаДереваПр Из ДеревоПр.Строки Цикл
	//	Для каждого СтрокаСостава Из Об.Состав Цикл
	//		Если СтрокаСостава.Сырье = СтрокаДереваПр.Номенклатура
	//			И СтрокаСостава.Количество = СтрокаДереваПр.Количество Тогда
	//			СтрокаСостава.Цена  = СтрокаДереваПр.Цена;
	//			СтрокаСостава.Сумма = СтрокаДереваПр.Сумма;
	//			Прервать;
	//		КонецЕсли;	
	//	КонецЦикла;	
	//КонецЦикла;	
	ЗначениеВРеквизитФормы(Об, "Объект");	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьСебестоимость(Команда)
	СохранитьСебестоимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВремяВыполнения()
	Если ВыборВремяПроизводства = 1 Тогда
		Объект.ВремяПроизводстваСек = ВремяПроизводства;
		Объект.ВремяПроизводстваЧас = 0;
	Иначе
		Объект.ВремяПроизводстваЧас = ВремяПроизводства; 
		Объект.ВремяПроизводстваСек = 0; 
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ВремяПроизводстваПриИзменении(Элемент)
	СохранитьВремяВыполнения();	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВремяПроизводстваПриИзменении(Элемент)
	СохранитьВремяВыполнения();	
КонецПроцедуры

&НаКлиенте
Процедура ОтходыКоличествоПриИзменении(Элемент)
//	ТекДанные = Элементы.Отходы.ТекущиеДанные;
//	ТекДанные.ПроцентОтходов = 0;
КонецПроцедуры

&НаКлиенте
Процедура ОтходыПроцентОтходовПриИзменении(Элемент)
	//ТекДанные = Элементы.Отходы.ТекущиеДанные;
	//ТекДанные.Количество = 0;
КонецПроцедуры

&НаКлиенте
Процедура СоставВидСырьяПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
	ТекущаяСтрока.Сырье = ПолучитьСырье(ТекущаяСтрока.ВидСырья);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСырье(ВидСырья)

	Возврат ВидСырья.ОсновнойАналог;

КонецФункции

&НаКлиенте
Процедура ДекорацияУпаковкаНажатие(Элемент)
	
	Упаковка = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Владелец, "УпаковкаПродукта");
	ОткрытьЗначение(Упаковка);
	
КонецПроцедуры
 
