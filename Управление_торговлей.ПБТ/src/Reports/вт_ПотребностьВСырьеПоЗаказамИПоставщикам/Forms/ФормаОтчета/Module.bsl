&НаСервере
Процедура ПримерСП()
	ТаблДок.Очистить();
	Секция = ТаблДок.ПолучитьОбласть("R1C1");
	ТаблДок.НачатьАвтогруппировкуКолонок();
	Секция.Область("R1C1").Текст = "Параметр";
	ТаблДок.Вывести(Секция,1,"Группа 1",Ложь);
	Для К=1 По 10 Цикл
		Секция = ТаблДок.ПолучитьОбласть("R1C1");
		Секция.Область().Текст = "А"+К;
		Секция.Область().ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
		ТаблДок.Присоединить(Секция,2,"Группа 2",Истина);
	КонецЦикла;
	Секция.Область("R1C1").Текст = "Итого:";
	ТаблДок.Присоединить(Секция,1,"Группа 2",Ложь);
	Секция.Область("R1C1").Текст = "Значение";
	ТаблДок.Вывести(Секция,1,"Группа 2",Ложь);
	Цена = 10; Итог = Цена;
	Для К=1 По 10 Цикл
		Секция = ТаблДок.ПолучитьОбласть("R1C1");
		Секция.Область().Текст = Цена;
		ТаблДок.Присоединить(Секция,2,"Группа 2",Истина);
		Цена = Цена + 10;
		Итог = Итог + Цена;
	КонецЦикла;
	Секция.Область("R1C1").Текст = Итог;
	ТаблДок.Присоединить(Секция,1,"Группа 2",Ложь);
	ТаблДок.ЗакончитьАвтогруппировкуКолонок();
	ТаблДок.ИтогиСправа = Истина;
	ТаблДок.ОтображатьСетку = Ложь;
	ТаблДок.Защита = Ложь;
	ТаблДок.ТолькоПросмотр = Истина;
	//ТабДок.Показать("Пример использования гор. автогруппировки");
	
	
КонецПроцедуры

&НаСервере
Процедура КомандаСформироватьНаСервере()
	ФормироватьНаДату = КонецДня(Отчет.НаДату);
	//Выведем шапку
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	| вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства КАК ЗаказПроизводства
	|ИЗ
	| РегистрНакопления.вт_ЗаказВПроизводство.Остатки(
	|         &НаДату,
	|         ЗаказПроизводства В (&МассивЗаказов)
	|                 И &ЕстьОтбор = ИСТИНА
	|             ИЛИ &ЕстьОтбор = ЛОЖЬ) КАК вт_ЗаказВПроизводствоОстатки
	|     ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ЗаказВПроизводство.Сырье КАК вт_ЗаказВПроизводствоСырье
	|     ПО вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства = вт_ЗаказВПроизводствоСырье.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.вт_СтатусыЗаказовВПроизводство.СрезПоследних(&НаДату, ) КАК вт_СтатусыЗаказовВПроизводствоСрезПоследних
	|		ПО вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства = вт_СтатусыЗаказовВПроизводствоСрезПоследних.ЗаказВПроизводство
	|ГДЕ
	|	вт_СтатусыЗаказовВПроизводствоСрезПоследних.Статус <> ЗНАЧЕНИЕ(Перечисление.вт_СтатусыПроизводства.Завершено)
	|
	|
	|УПОРЯДОЧИТЬ ПО
	| вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства.Дата");
		
	//Выборка ссылок на документы вт_ЗаказВПроизводство из остатков по регистру вт_ЗаказВПроизводство
	// с возможностью отбора из списка
	
	МассивЗаказов = Отчет.ЗаказыВПроизводство.Выгрузить(,"Заказ");
	Запрос.УстановитьПараметр("МассивЗаказов",МассивЗаказов);
	Запрос.УстановитьПараметр("ЕстьОтбор",МассивЗаказов.Количество()>0);
	Запрос.УстановитьПараметр("НаДату",ФормироватьНаДату);
	
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблШапкаСырье = Макет.ПолучитьОбласть("Шапка|Сырье");
	ОблШапкаЗаказ = Макет.ПолучитьОбласть("Шапка|ПоЗаказу");
	ОблШапкаИТОГИ = Макет.ПолучитьОбласть("Шапка|ИТОГИ");	
	ОблШапкаНаличие = Макет.ПолучитьОбласть("Шапка|Наличие");	
	
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ОблСтрокаСырье = Макет.ПолучитьОбласть("Строка|Сырье");
	ОблСтрокаЗаказ = Макет.ПолучитьОбласть("Строка|ПоЗаказу");
	ОблСтрокаИТОГИ = Макет.ПолучитьОбласть("Строка|ИТОГИ");
	ОблСтрокаНаличие = Макет.ПолучитьОбласть("Строка|Наличие");
	
	ОблИТОГО = Макет.ПолучитьОбласть("ИТОГО");
	ОблИТОГОСырье = Макет.ПолучитьОбласть("ИТОГО|Сырье");
	ОблИТОГОЗаказ = Макет.ПолучитьОбласть("ИТОГО|ПоЗаказу");
	ОблИТОГОИтоги = Макет.ПолучитьОбласть("ИТОГО|ИТОГИ");
	ОблИТОГОНаличие = Макет.ПолучитьОбласть("ИТОГО|Наличие");
	
	ТаблДок.Очистить();
	
	МассивЗаказовВПроизводство = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЗаказПроизводства");
	ИтогоСырье = Новый Массив;
	ТаблДок.Вывести(ОблШапкаСырье);
	Для каждого ЗаказВПроизводство Из МассивЗаказовВПроизводство Цикл
	
		//ОблШапкаЗаказ.Параметры.ИмяЗаказа = "Заказ "+СокрЛП(ЗаказВПроизводство.Номер)+
		//" от "+Формат(ЗаказВПроизводство.Дата,"ДФ=dd.MM.yyyy");
		//ОблШапкаЗаказ.Параметры.РасшифровкаЗаказа = ЗаказВПроизводство;
		//ТаблДок.Присоединить(ОблШапкаЗаказ);
		ИтогоСырье.Добавить(0);
	КонецЦикла;
	//ТаблДок.Присоединить(ОблШапкаИТОГИ);
	//ТаблДок.Присоединить(ОблШапкаНаличие);	
	
	Запрос = Новый Запрос;
	Если Отчет.Сырье.Количество()>0 Тогда
		МассивСырье = Отчет.Сырье.Выгрузить(,"Сырье");
		Запрос.УстановитьПараметр("МассивСырье",МассивСырье);
		ТекстУсловие = "
		|ГДЕ
		|	вт_ЗаказВПроизводствоСырье.Номенклатура В (&МассивСырье)";
	Иначе
		ТекстУсловие = "";
	КонецЕсли;	
	
	
	Запрос.Текст = "ВЫБРАТЬ
	|    вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства КАК ЗаказПроизводства,
	|    вт_ЗаказВПроизводствоТовары.КлючСтроки КАК КлючСтроки,
	|    вт_ЗаказВПроизводствоТовары.Номенклатура КАК Номенклатура,
	|    вт_ЗаказВПроизводствоТовары.Характеристика КАК Характеристика,
	|    вт_ЗаказВПроизводствоТовары.Количество КАК Количество,
	|    вт_ЗаказВПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|    ВЫБОР
	|        КОГДА ЕСТЬNULL(вт_ЗаказВПроизводствоТовары.Количество, 0) = 0
	|            ТОГДА 0
	|        ИНАЧЕ вт_ЗаказВПроизводствоОстатки.КоличествоОстаток / вт_ЗаказВПроизводствоТовары.Количество
	|    КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_Заказы1
	|ИЗ
	|    РегистрНакопления.вт_ЗаказВПроизводство.Остатки(
	|            &НаДату,
	|            ЗаказПроизводства В (&МассивЗаказов)
	|                    И &ЕстьОтбор = ИСТИНА
	|                ИЛИ &ЕстьОтбор = ЛОЖЬ) КАК вт_ЗаказВПроизводствоОстатки
	|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ЗаказВПроизводство.Товары КАК вт_ЗаказВПроизводствоТовары
	|        ПО вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства = вт_ЗаказВПроизводствоТовары.Ссылка
	|            И вт_ЗаказВПроизводствоОстатки.Номенклатура = вт_ЗаказВПроизводствоТовары.Номенклатура
	|            И вт_ЗаказВПроизводствоОстатки.Характеристика = вт_ЗаказВПроизводствоТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ЕСТЬNULL(вт_ЗаказВПроизводствоСырье.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|    ЕСТЬNULL(вт_ЗаказВПроизводствоСырье.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|    СУММА(ВЫБОР
	|            КОГДА ВТ_Заказы1.Коэффициент < 1
	|                ТОГДА вт_ЗаказВПроизводствоСырье.Количество * ВТ_Заказы1.Коэффициент
	|            ИНАЧЕ вт_ЗаказВПроизводствоСырье.Количество
	|        КОНЕЦ) КАК Количество,
	|    СРЕДНЕЕ(ЕСТЬNULL(вт_ЗаказВПроизводствоСырье.Цена, 0)) КАК Цена,
	|    СУММА(ЕСТЬNULL(вт_ЗаказВПроизводствоСырье.Сумма, 0)) КАК Сумма,
	|    ВТ_Заказы1.ЗаказПроизводства КАК ЗаказПроизводства
	|ПОМЕСТИТЬ ВТ_ЗАКАЗЫ
	|ИЗ
	|    Документ.вт_ЗаказВПроизводство.Сырье КАК вт_ЗаказВПроизводствоСырье
	|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заказы1 КАК ВТ_Заказы1
	|        ПО (ВТ_Заказы1.КлючСтроки = вт_ЗаказВПроизводствоСырье.КлючСвязиСтроки)
	|            И вт_ЗаказВПроизводствоСырье.Ссылка = ВТ_Заказы1.ЗаказПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|    ЕСТЬNULL(вт_ЗаказВПроизводствоСырье.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|    ЕСТЬNULL(вт_ЗаказВПроизводствоСырье.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)),
	|    ВТ_Заказы1.ЗаказПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    СвободныеОстаткиОстатки.Номенклатура КАК Номенклатура,
	|    СвободныеОстаткиОстатки.Характеристика КАК Характеристика,
	|    СУММА(СвободныеОстаткиОстатки.ВНаличииОстаток) КАК ВНаличии,
	|    СУММА(СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток) КАК ВРезерве
	|ПОМЕСТИТЬ ВТ_НАЛИЧИЕ
	|ИЗ
	|    РегистрНакопления.СвободныеОстатки.Остатки(
	|            &НаДату,
	|            (Склад В (&Склады)
	|                ИЛИ &БезСкладов)
	|                И (Номенклатура, Характеристика) В
	|                    (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|                        ВТ.Номенклатура,
	|                        ВТ.Характеристика
	|                    ИЗ
	|                        ВТ_ЗАКАЗЫ КАК ВТ)) КАК СвободныеОстаткиОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|    СвободныеОстаткиОстатки.Номенклатура,
	|    СвободныеОстаткиОстатки.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    Закупки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|    МАКСИМУМ(Закупки.Период) КАК МаксПериод,
	|    Закупки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|    МАКСИМУМ(Закупки.Регистратор.Партнер) КАК Поставщик
	|ПОМЕСТИТЬ ВТ_МАКС_ДАТА
	|ИЗ
	|    РегистрНакопления.Закупки КАК Закупки
	|ГДЕ
	|    НАЧАЛОПЕРИОДА(Закупки.Период, ДЕНЬ) <= &НаДату
	|    И (Закупки.АналитикаУчетаНоменклатуры.Номенклатура, Закупки.АналитикаУчетаНоменклатуры.Характеристика) В
	|            (ВЫБРАТЬ
	|                ВТ.Номенклатура,
	|                ВТ.Характеристика
	|            ИЗ
	|                ВТ_ЗАКАЗЫ КАК ВТ)
	|
	|СГРУППИРОВАТЬ ПО
	|    Закупки.АналитикаУчетаНоменклатуры.Номенклатура,
	|    Закупки.АналитикаУчетаНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ЕСТЬNULL(ВЫБОР
	|            КОГДА Закупки.Количество <> 0
	|                ТОГДА Закупки.Стоимость / Закупки.Количество
	|            ИНАЧЕ Закупки.Стоимость
	|        КОНЕЦ, 0) КАК Цена,
	|    ВТ_МАКС_ДАТА.Номенклатура КАК Номенклатура,
	|    ЕСТЬNULL(ВЫБОР
	|            КОГДА Закупки.Количество <> 0
	|                ТОГДА Закупки.СтоимостьБезНДС / Закупки.Количество
	|            ИНАЧЕ Закупки.СтоимостьБезНДС
	|        КОНЕЦ, 0) КАК ЦенаБезНДС,
	|    МАКСИМУМ(ВТ_МАКС_ДАТА.Поставщик) КАК Поставщик,
	|    ВТ_МАКС_ДАТА.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТ_ЦЕНЫ_ЗАКУПКИ
	|ИЗ
	|    ВТ_МАКС_ДАТА КАК ВТ_МАКС_ДАТА
	|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	|        ПО ВТ_МАКС_ДАТА.Номенклатура = Закупки.АналитикаУчетаНоменклатуры.Номенклатура
	|            И ВТ_МАКС_ДАТА.Характеристика = Закупки.АналитикаУчетаНоменклатуры.Характеристика
	|            И ВТ_МАКС_ДАТА.МаксПериод = Закупки.Период
	|            И ВТ_МАКС_ДАТА.Поставщик = Закупки.Регистратор.Партнер
	|
	|СГРУППИРОВАТЬ ПО
	|    ВТ_МАКС_ДАТА.Номенклатура,
	|    ВТ_МАКС_ДАТА.Характеристика,
	|    ЕСТЬNULL(ВЫБОР
	|            КОГДА Закупки.Количество <> 0
	|                ТОГДА Закупки.Стоимость / Закупки.Количество
	|            ИНАЧЕ Закупки.Стоимость
	|        КОНЕЦ, 0),
	|    ЕСТЬNULL(ВЫБОР
	|            КОГДА Закупки.Количество <> 0
	|                ТОГДА Закупки.СтоимостьБезНДС / Закупки.Количество
	|            ИНАЧЕ Закупки.СтоимостьБезНДС
	|        КОНЕЦ, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ЦЕНЫ_ЗАКУПКИ.Цена КАК Цена,
	|    ЦЕНЫ_ЗАКУПКИ.Номенклатура КАК Номенклатура,
	|    ЦЕНЫ_ЗАКУПКИ.Характеристика КАК Характеристика,
	|    ЦЕНЫ_ЗАКУПКИ.ЦенаБезНДС КАК ЦенаБезНДС,
	|    ЦЕНЫ_ЗАКУПКИ.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_ЦЕНЫ
	|ИЗ
	|    ВТ_ЦЕНЫ_ЗАКУПКИ КАК ЦЕНЫ_ЗАКУПКИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ЕСТЬNULL(ВТ_НАЛИЧИЕ.ВНаличии, 0) КАК ВНаличии,
	|    ЕСТЬNULL(ВТ_НАЛИЧИЕ.ВРезерве, 0) КАК ВРезерве,
	|    ВТ_ЗАКАЗЫ.Номенклатура КАК Номенклатура,
	|    ЕСТЬNULL(ВТ_ЗАКАЗЫ.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|    ВТ_ЗАКАЗЫ.ЗаказПроизводства КАК ЗаказПроизводства,
	|    ВТ_ЗАКАЗЫ.Количество КАК Количество,
	|    ВТ_ЗАКАЗЫ.Сумма КАК Сумма,
	|    ВТ_ЗАКАЗЫ.Цена КАК Цена
	|ПОМЕСТИТЬ ВТ_ЗАКАЗЫ_Наличие
	|ИЗ
	|    ВТ_ЗАКАЗЫ КАК ВТ_ЗАКАЗЫ
	|        ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НАЛИЧИЕ КАК ВТ_НАЛИЧИЕ
	|        ПО ВТ_ЗАКАЗЫ.Характеристика = ВТ_НАЛИЧИЕ.Характеристика
	|            И ВТ_ЗАКАЗЫ.Номенклатура = ВТ_НАЛИЧИЕ.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ВТ_ЗАКАЗЫ_Наличие.Номенклатура КАК Номенклатура,
	|    ВТ_ЗАКАЗЫ_Наличие.Характеристика КАК Характеристика,
	|    ВТ_ЗАКАЗЫ_Наличие.ЗаказПроизводства КАК ЗаказПроизводства,
	|    ВТ_ЗАКАЗЫ_Наличие.ВНаличии КАК ВНаличии,
	|    ВТ_ЗАКАЗЫ_Наличие.ВРезерве КАК ВРезерве,
	|    ВТ_ЗАКАЗЫ_Наличие.Количество КАК Количество,
	|    ВТ_ЦЕНЫ.Цена КАК Цена,
	|    ЕСТЬNULL(ВТ_ЗАКАЗЫ_Наличие.Количество, 0) * ЕСТЬNULL(ВТ_ЦЕНЫ.Цена, 0) КАК Сумма,
	|    ВТ_ЦЕНЫ.ЦенаБезНДС КАК ЦенаБезНДС,
	|    ВТ_ЦЕНЫ.Поставщик КАК Поставщик
	|ИЗ
	|    ВТ_ЗАКАЗЫ_Наличие КАК ВТ_ЗАКАЗЫ_Наличие
	|        ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦЕНЫ КАК ВТ_ЦЕНЫ
	|        ПО ВТ_ЗАКАЗЫ_Наличие.Номенклатура = ВТ_ЦЕНЫ.Номенклатура
	|            И ВТ_ЗАКАЗЫ_Наличие.Характеристика = ВТ_ЦЕНЫ.Характеристика
	|ИТОГИ
	|    МАКСИМУМ(ВНаличии),
	|    МАКСИМУМ(ВРезерве),
	|    СУММА(Количество),
	|    СРЕДНЕЕ(Цена),
	|    СУММА(Сумма),
	|    СРЕДНЕЕ(ЦенаБезНДС),
	|    МАКСИМУМ(Поставщик)
	|ПО
	|    Номенклатура,
	|    Характеристика,
	|    ЗаказПроизводства";
	МассивЗаказов = ОТчет.ЗаказыВПроизводство.Выгрузить(,"Заказ");
	МассивСкладов = Отчет.Склады.Выгрузить(,"Склад");
	
	Запрос.УстановитьПараметр("Склады",МассивСкладов);
	Запрос.УстановитьПараметр("БезСкладов", ?(МассивСкладов.Количество()=0, ИСТИНА, ЛОЖЬ));
	Запрос.УстановитьПараметр("МассивЗаказов",МассивЗаказов);
	Запрос.УстановитьПараметр("ЕстьОтбор",МассивЗаказов.Количество()>0);
	Запрос.УстановитьПараметр("НаДату",ФормироватьНаДату);
	Запрос.УстановитьПараметр("ВидЦены",КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ВидЦенПлановойСебестоимости"));		
	ИтогоКГ = 0;
	ИтогоДенег = 0;
	ИтогоДенегПотребность = 0;
	ИтогоДенегПотребность1 = 0;
	ВыборкаПоНоменклатуре = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблНоменклатураПоставщик.Очистить();
	
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		ВыборкаПоХарактеристике = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоХарактеристике.Следующий() ЦИКЛ
			//Проверяем на наличие закупок
			ЕстьЦенаСНДС = Истина;
			ШапкаЗаказаВыведена = Ложь;
			СтрокаНоменклатурыВыведена = Ложь;
			Если ТипЗнч(ВыборкаПоНоменклатуре.Цена) = Тип("Число") Тогда
				ЦенаСНДС = ВыборкаПоНоменклатуре.Цена;
				Если ЦенаСНДС <= 0 Тогда
					ЕстьЦенаСНДС = Ложь;
				КонецЕсли;
			Иначе
				ЦенаСНДС = 0;
				ЕстьЦенаСНДС = Ложь;
			КонецЕсли;    
			ВыборкаПоЗаказам = ВыборкаПоХарактеристике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ИтогоКгСырье = 0; //Сначала посчитаем потребность
			
			Для каждого ЗаказВПроизводство Из МассивЗаказовВПроизводство Цикл
				ВыборкаПоЗаказам.Сбросить();	
				Пока ВыборкаПоЗаказам.Следующий() Цикл				
					Если ВыборкаПоЗаказам.ЗаказПроизводства = ЗаказВПроизводство Тогда
						ИтогоКгСырье = ИтогоКгСырье + ВыборкаПоЗаказам.Количество;
						Прервать;
					КонецЕсли;			
				КонецЦикла;
			КонецЦикла; 
			
			Если ИтогоКгСырье <= ВыборкаПоНоменклатуре.ВНаличии И  ТолькоМинусовые Тогда
				Продолжить;
			КонецЕсли;
			
			ИтогоКгСырье = 0;
			ИндексМассива = 0;
			
			Для каждого ЗаказВПроизводство Из МассивЗаказовВПроизводство Цикл
				ВыборкаПоЗаказам.Сбросить();
				Пока ВыборкаПоЗаказам.Следующий() Цикл				
					Если ВыборкаПоЗаказам.ЗаказПроизводства = ЗаказВПроизводство Тогда
						ОблСтрокаЗаказ.Параметры.ПотребностьСырье = ВыборкаПоЗаказам.Количество;
						ИтогоКгСырье = ИтогоКгСырье + ВыборкаПоЗаказам.Количество;
						ИтогоСырье[ИндексМассива] = ИтогоСырье[ИндексМассива] + ВыборкаПоЗаказам.Количество;
						Прервать;
					Иначе 
						ОблСтрокаЗаказ.Параметры.ПотребностьСырье = 0;
					КонецЕсли;
				КонецЦикла;				
				ИндексМассива = ИндексМассива + 1;
			КонецЦикла;
		КонецЦикла;	
	КонецЦикла;
	
	ИндексМассива = 0;
	Для каждого ЗаказВПроизводство Из МассивЗаказовВПроизводство Цикл
		Если ИтогоСырье[ИндексМассива] > 0 Тогда
			ОблШапкаЗаказ.Параметры.ИмяЗаказа = "Заказ "+СокрЛП(ЗаказВПроизводство.Номер)+
			" от "+Формат(ЗаказВПроизводство.Дата,"ДФ=dd.MM.yyyy");
			ОблШапкаЗаказ.Параметры.РасшифровкаЗаказа = ЗаказВПроизводство;
			ТаблДок.Присоединить(ОблШапкаЗаказ);
		КонецЕсли;
		ИндексМассива = ИндексМассива + 1;
	КонецЦикла;
	ТаблДок.Присоединить(ОблШапкаИТОГИ);
	ТаблДок.Присоединить(ОблШапкаНаличие);
	
	ВыборкаПоНоменклатуре.Сбросить();
	ТаблДок.НачатьАвтогруппировкуКолонок(); 
	
	ИтогоДенегПотребность = 0;
	ИтогоДенегПотребность1 = 0;
	
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		ВыборкаПоХарактеристике = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоХарактеристике.Следующий() ЦИКЛ
			
			//Проверяем на наличие закупок
			ЕстьЦенаСНДС = Истина;
			ШапкаЗаказаВыведена = Ложь;
			СтрокаНоменклатурыВыведена = Ложь;
			Если ТипЗнч(ВыборкаПоНоменклатуре.Цена) = Тип("Число") Тогда
				ЦенаСНДС = ВыборкаПоНоменклатуре.Цена;
				Если ЦенаСНДС <= 0 Тогда
					ЕстьЦенаСНДС = Ложь;
					//Продолжить;
				КонецЕсли;
			Иначе
				ЦенаСНДС = 0;
				ЕстьЦенаСНДС = Ложь;
				//Продолжить;
			КонецЕсли;    
			ВыборкаПоЗаказам = ВыборкаПоХарактеристике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ИтогоКгСырье = 0; //Сначала посчитаем потребность
			Для каждого ЗаказВПроизводство Из МассивЗаказовВПроизводство Цикл
				ВыборкаПоЗаказам.Сбросить();	
				Пока ВыборкаПоЗаказам.Следующий() Цикл				
					Если ВыборкаПоЗаказам.ЗаказПроизводства = ЗаказВПроизводство Тогда
						ИтогоКгСырье = ИтогоКгСырье + ВыборкаПоЗаказам.Количество;
						Прервать;
					КонецЕсли;			
				КонецЦикла;
			КонецЦикла; 
			
			Если ИтогоКгСырье <= ВыборкаПоНоменклатуре.ВНаличии И ТолькоМинусовые Тогда
				Продолжить;
			КонецЕсли;
			
			ОблСтрокаСырье.Параметры.Сырье = СокрЛП(ВыборкаПоНоменклатуре.Номенклатура)+
			" "+ СокрЛП(ВыборкаПоХарактеристике.Характеристика);
			ТаблДок.Вывести(ОблСтрокаСырье,1,"Гр1");
			
			
			ИтогоКгСырье = 0;
			ИндексМассива = 0;
			
			Для каждого ЗаказВПроизводство Из МассивЗаказовВПроизводство Цикл
				ВыборкаПоЗаказам.Сбросить();
				КгСырьеПоЗаказам = 0;
				
				Пока ВыборкаПоЗаказам.Следующий() Цикл				
					Если ВыборкаПоЗаказам.ЗаказПроизводства = ЗаказВПроизводство Тогда
						ОблСтрокаЗаказ.Параметры.ПотребностьСырье = ВыборкаПоЗаказам.Количество;
						ИтогоКгСырье = ИтогоКгСырье + ВыборкаПоЗаказам.Количество;
						
						КгСырьеПоЗаказам = КгСырьеПоЗаказам + ВыборкаПоЗаказам.Количество;
						
						Прервать;
					Иначе 
						ОблСтрокаЗаказ.Параметры.ПотребностьСырье = 0;
					КонецЕсли;
				КонецЦикла;
				
				Если ИтогоСырье[ИндексМассива] > 0 Тогда
					ТаблДок.Присоединить(ОблСтрокаЗаказ,2,"Заказы");
					//ИндексМассива = ИндексМассива + 1;
				КонецЕсли;
				
				//ТаблДок.Присоединить(ОблСтрокаЗаказ,2,"Заказы");
				ИндексМассива = ИндексМассива + 1;
			КонецЦикла; 
			
			
			ОблСтрокаИТОГИ.Параметры.ИтогоКгСырье = ИтогоКгСырье;
			ОблСтрокаИТОГИ.Параметры.ЦенаЗаКгСырье = ВыборкаПоНоменклатуре.Цена;
			ОблСтрокаИТОГИ.Параметры.ИтогоДенегСырье = ВыборкаПоНоменклатуре.Сумма;
			ОблСтрокаИТОГИ.Параметры.ЦенаЗаКгСырьеБезНДС = ВыборкаПоНоменклатуре.ЦенаБезНДС;
			ОблСтрокаИТОГИ.Параметры.Поставщик = ВыборкаПоНоменклатуре.Поставщик;
			ТаблДок.Присоединить(ОблСтрокаИТОГИ,1,"Заказы");
			
			ОблСтрокаНаличие.Параметры.НаличиеСырье 	= ВыборкаПоНоменклатуре.ВНаличии;
			Потребность = Число(ИтогоКгСырье - ВыборкаПоНоменклатуре.ВНаличии);
			ОблСтрокаНаличие.Параметры.ДефицитПрофицит  = - Потребность;
			
			Если Потребность < 0 Тогда
				ОблСтрокаНаличие.Параметры.ДефицитСумма1  = - Потребность*ЦенаСНДС;	
				ОблСтрокаНаличие.Параметры.ДефицитСумма  = 0;
				ИтогоДенегПотребность1 = ИтогоДенегПотребность1 - Потребность*ЦенаСНДС;
				
				СтрокаТаблицыТоваров = ТаблНоменклатураПоставщик.Добавить();
				СтрокаТаблицыТоваров.Номенклатура = ВыборкаПоНоменклатуре.Номенклатура;
				СтрокаТаблицыТоваров.Характеристика = ВыборкаПоХарактеристике.Характеристика;
				СтрокаТаблицыТоваров.Количество = Потребность;
				СтрокаТаблицыТоваров.Цена = ЦенаСНДС;
				СтрокаТаблицыТоваров.Поставшик =  ВыборкаПоНоменклатуре.Поставщик;
				
				
			Иначе
				ОблСтрокаНаличие.Параметры.ДефицитСумма1  = 0;	
				ОблСтрокаНаличие.Параметры.ДефицитСумма  = Потребность*ЦенаСНДС;
				ИтогоДенегПотребность = ИтогоДенегПотребность + Потребность*ЦенаСНДС;
			КонецЕсли;
			
			ОблСтрокаНаличие.Параметры.РезервСырье		= ВыборкаПоНоменклатуре.ВРезерве;
			ОблСтрокаНаличие.Параметры.ДоступныйОстаток = ИтогоКгСырье - ВыборкаПоНоменклатуре.ВНаличии - ВыборкаПоНоменклатуре.ВРезерве;
			ТаблДок.Присоединить(ОблСтрокаНаличие,1,"Гр1");
			
			ИтогоКГ = ИтогоКГ + ИтогоКгСырье;
			ИтогоДенег = ИтогоДенег + ВыборкаПоНоменклатуре.Сумма;
	
		КонецЦикла;	
	КонецЦикла;
	ТаблДок.Вывести(ОблИТОГОСырье,1,"Гр1");
	ИндексМассива = 0;
	Для каждого ЗаказВПроизводство Из МассивЗаказовВПроизводство Цикл
		ОблИТОГОЗаказ.Параметры.ИтогоСырье = ИтогоСырье[ИндексМассива];
		Если ИтогоСырье[ИндексМассива] > 0 Тогда
			ТаблДок.Присоединить(ОблИТОГОЗаказ,2,"Заказы");
		КонецЕсли;    
		ИндексМассива = ИндексМассива + 1;
	КонецЦикла;	
	ОблИТОГОИтоги.Параметры.ИтогоКГ = ИтогоКГ;
	ОблИТОГОИтоги.Параметры.ИтогоДенег = ИтогоДенег;
	ТаблДок.Присоединить(ОблИТОГОИтоги,1,"Гр1");
	ОблИТОГОНаличие.Параметры.ИтогоДенегПотребность = ИтогоДенегПотребность;
	ОблИТОГОНаличие.Параметры.ИтогоДенегПотребность1 = ИтогоДенегПотребность1;
	ТаблДок.Присоединить(ОблИТОГОНаличие,1,"Гр1");
	//++
	ТаблДок.ЗакончитьАвтогруппировкуКолонок(); 
	//--
	ТаблДок.ФиксацияСверху = 1;	
	ТаблДок.ФиксацияСлева = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСформировать(Команда)
	КомандаСформироватьНаСервере();
	//ПримерСП();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.НаДату = ТекущаяДата();
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаказыПоставщикамНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаказыПоставщикам(Команда)
	СоздатьЗаказыПоставщикамНаСервере();
КонецПроцедуры
