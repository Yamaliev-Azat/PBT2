&НаКлиенте
Процедура СформироватьТехКарту()
    Перем ДанныеФормы;
    //Если  Объект.втСыре.Количество() = 0 Тогда
    //    Сообщить("Не указано сырьё!");
    //    Возврат;
    Если  НЕ ЗначениеЗаполнено(СырьёНоменклатура) Тогда
        Сообщить("Не указана номенклатура сырья!");
        Возврат;
    КонецЕсли;
    
    Если НЕ ЗначениеЗаполнено(СырьёКоличество) Тогда   
        Сообщить("Не указано количество сырья!");
        Возврат;
    КонецЕсли; 
    
    Если  Объект.втПродукция.Количество() = 0 Тогда   
        Сообщить("Не указана продукция!");
        Возврат;
    КонецЕсли; 
    
    //Для Каждого СтрокаСырье из Объект.втСыре Цикл
    //    Если  НЕ ЗначениеЗаполнено(СтрокаСырье.Номенклатура) Тогда
    //        Сообщить("Не указана номенклатура сырья!");
    //        Возврат;
    //    ИначеЕсли  СтрокаСырье.Количество = 0 Тогда   
    //        Сообщить("Не указано количество сырья!");
    //        Возврат;
    //    КонецЕсли; 
    //КонецЦикла;
    
    Для Каждого СтрокаПродукция из Объект.втПродукция Цикл
        Если  НЕ ЗначениеЗаполнено(СтрокаПродукция.Номенклатура) Тогда
            Сообщить("Не указана номенклатура продукции!");
            Возврат;
        ИначеЕсли  СтрокаПродукция.Количество = 0 Тогда   
            Сообщить("Не указано количество продукции!");
            Возврат;
        ИначеЕсли  СтрокаПродукция.Процент = 0 Тогда   
            Сообщить("Не указан процент!");
            Возврат;
        КонецЕсли; 
    КонецЦикла;
    
    Если  Объект.втПродукция.Итог("КоличествоСырья") > СырьёКоличество Тогда   
        Сообщить("Итог сырья в продукции больше указнного количества сырья!");
        Возврат;
    КонецЕсли; 
    
    Если НЕ ЗначениеЗаполнено(Организация) Тогда
        Сообщить("Не указана организация!");
        Возврат;
    ИначеЕсли  НЕ ЗначениеЗаполнено(Подразделение) Тогда  
        Сообщить("Не указано подразделение!");
        Возврат;
    ИначеЕсли  НЕ ЗначениеЗаполнено(Склад) Тогда  
        Сообщить("Не указан склад!");
        Возврат;
    ИначеЕсли  НЕ ЗначениеЗаполнено(СтатьяДоходов) Тогда  
        Сообщить("Не указана статья доходов!");
        Возврат;
    ИначеЕсли  НЕ ЗначениеЗаполнено(ВидОперацииПроизводства) Тогда  
        Сообщить("Не указан вид операции!");
        Возврат;
    КонецЕсли;
        
        
    Если НЕ ЗаписатьПровести Тогда
        Форма = ПолучитьФорму("Документ.вт_ОтчетПроизводства.Форма.ФормаДокумента");
        ДанныеФормы = Форма.Объект; // Получаем объект формы в переменную
        ЗаполнитьДокументНаСервере(ДанныеФормы); // Заполняем документ на сервере
        КопироватьДанныеФормы(ДанныеФормы, Форма.Объект); // копируем наш объект в объект формы и далее открываем ее
        Форма.Открыть();
    ИначеЕсли ЗаписатьПровести Тогда 
        ДокСсылка=ЗаполнитьИЗаписатьДокументНаСервере(); // 
        Если Открыть  Тогда
            ОткрытьЗначение(ДокСсылка);
        КонецЕсли; 
    КонецЕсли; 
    
Если Очистить Тогда 
    //Для Каждого рекв Из ПолучитьРеквизиты() Цикл
    //    Если рекв.ТипЗначения.СодержитТип(Тип("ТаблицаЗначений")) Тогда
    //        Объект[рекв.Имя].Очистить();
    //    ИначеЕсли рекв.ТипЗначения.СодержитТип(Тип("Булево")) Тогда
    //        Объект[рекв.Имя] = Ложь;
    //    Иначе
    //        Объект[рекв.Имя] = НЕОПРЕДЕЛЕНО;
    //    КонецЕсли;
    //КонецЦикла;
    //ОчиститьЭлементы();
    СырьёНоменклатура=НЕОПРЕДЕЛЕНО; СырьёХарактеристикаНоменклатуры=НЕОПРЕДЕЛЕНО;  СырьёКоличество=0;
    Объект.втПродукция.Очистить();
	
КонецЕсли; 
    	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДокументНаСервере(Док) Экспорт 
    
    //Если  Док=НЕОПРЕДЕЛЕНО И ЗаписатьПровести Тогда   
    //    Док = Документы.вт_ОтчетПроизводства.СоздатьДокумент();
    //КонецЕсли; 
    
    Док.Организация = Организация;
    
    //Если ЗначениеЗаполнено(Подразделение) Тогда
        Док.Подразделение = Подразделение;
    //КонецЕсли; 
    
    //Если  ЗначениеЗаполнено(Склад) = 0 Тогда   
        Док.Склад = Склад;
    //КонецЕсли;
    
    //Если  ЗначениеЗаполнено(СтатьяДоходов) = 0 Тогда   
        Док.СтатьяДоходов = СтатьяДоходов;
    //КонецЕсли;
    
        Док.ВидОперацииПроизводства = ВидОперацииПроизводства;
    
    Если  ЗначениеЗаполнено(АналитикаДоходов) Тогда   
        Док.АналитикаДоходов = АналитикаДоходов;
    КонецЕсли; 
    
    Док.ОтразитьВПроизводственномУчете = ИСТИНА;
    
    Док.Дата = ТекущаяДатаСеанса();
    
    Док.Товары.Очистить();
    //Для Каждого СтрокаСырье из Объект.втСыре Цикл
        КодСтроки = 0;
        Для Каждого СтрокаПродукция из Объект.втПродукция Цикл
	        СтрокаТовары = Док.Товары.Добавить();     
    		СтрокаТовары.Номенклатура = СтрокаПродукция.Номенклатура;	
            Если  ЗначениеЗаполнено(СтрокаПродукция.Характеристика) Тогда   
                СтрокаТовары.Характеристика = СтрокаПродукция.Характеристика;
            КонецЕсли; 
    		СтрокаТовары.Количество     = СтрокаПродукция.Количество;
			СтрокаТовары.КоличествоПлан = СтрокаПродукция.Количество;
            КодСтроки = КодСтроки+1;
    		СтрокаТовары.КодСтроки = КодСтроки;
	        СтрокаТоварыСырье = Док.вт_ПроизводствоСырье.Добавить(); 
	        СтрокаТоварыСырье.Номенклатура = СырьёНоменклатура; 
            Если  ЗначениеЗаполнено(СырьёХарактеристикаНоменклатуры) Тогда   
                СтрокаТоварыСырье.Характеристика = СырьёХарактеристикаНоменклатуры;
            КонецЕсли; 
	        СтрокаТоварыСырье.Количество = СырьёКоличество*СтрокаПродукция.Процент/100; 
	        СтрокаТоварыСырье.ГотоваяПродукция = СтрокаТовары.Номенклатура; 
	        СтрокаТоварыСырье.КлючСвязиСтроки = СтрокаТовары.КодСтроки; 
        КонецЦикла;
        
    //КонецЦикла;
    
    //Если  ЗаписатьПровести Тогда   
    //    Док.Записать(РежимЗаписиДокумента.Проведение);
    //    Если Открыть  Тогда
    //        //ОткрытьФорму("Документ.вт_ОтчетПроизводства.ФормаДокумента", Новый Структура("Ключ", Док.Ссылка)); 
    //        Возврат Док.Ссылка;
    //    Иначе
    //        Возврат НЕОПРЕДЕЛЕНО;// Док.Ссылка
    //    КонецЕсли;
    //Иначе
    //    Возврат Док;
    //КонецЕсли; 
    
КонецПроцедуры	

&НаСервере
Функция ЗаполнитьИЗаписатьДокументНаСервере() //Экспорт 
    
    Если  ЗаписатьПровести Тогда   
        Док = Документы.вт_ОтчетПроизводства.СоздатьДокумент();
    КонецЕсли; 
    
    Док.Организация = Организация;
    
    //Если ЗначениеЗаполнено(Подразделение) Тогда
        Док.Подразделение = Подразделение;
    //КонецЕсли; 
    
    //Если  ЗначениеЗаполнено(Склад) = 0 Тогда   
        Док.Склад = Склад;
    //КонецЕсли;
    
    //Если  ЗначениеЗаполнено(СтатьяДоходов) = 0 Тогда   
        Док.СтатьяДоходов = СтатьяДоходов;
    //КонецЕсли;
    
        Док.ВидОперацииПроизводства = ВидОперацииПроизводства;
    
        Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
    
    Если  ЗначениеЗаполнено(АналитикаДоходов) Тогда   
        Док.АналитикаДоходов = АналитикаДоходов;
    КонецЕсли; 
    
    Док.ОтразитьВПроизводственномУчете = ИСТИНА;
    
    Док.Дата = ТекущаяДатаСеанса();
    
    Док.Товары.Очистить();
    //Для Каждого СтрокаСырье из Объект.втСыре Цикл
        КодСтроки = 0;
        Для Каждого СтрокаПродукция из Объект.втПродукция Цикл
	        СтрокаТовары = Док.Товары.Добавить();     
    		СтрокаТовары.Номенклатура = СтрокаПродукция.Номенклатура;	
            Если  ЗначениеЗаполнено(СтрокаПродукция.Характеристика) Тогда   
                СтрокаТовары.Характеристика = СтрокаПродукция.Характеристика;
            КонецЕсли; 
    		СтрокаТовары.Количество = СтрокаПродукция.Количество;
    		СтрокаТовары.КоличествоПлан = СтрокаТовары.Количество;
            КодСтроки = КодСтроки+1;
    		СтрокаТовары.КодСтроки = КодСтроки;
	        СтрокаТоварыСырье = Док.вт_ПроизводствоСырье.Добавить(); 
	        СтрокаТоварыСырье.Номенклатура = СырьёНоменклатура; 
            Если  ЗначениеЗаполнено(СырьёХарактеристикаНоменклатуры) Тогда   
                СтрокаТоварыСырье.Характеристика = СырьёХарактеристикаНоменклатуры;
            КонецЕсли; 
	        СтрокаТоварыСырье.Количество = СырьёКоличество*СтрокаПродукция.Процент/100; 
	        СтрокаТоварыСырье.ГотоваяПродукция = СтрокаТовары.Номенклатура; 
	        СтрокаТоварыСырье.КлючСвязиСтроки = СтрокаТовары.КодСтроки; 
        КонецЦикла;
        
    //КонецЦикла;
    
    Если  ЗаписатьПровести Тогда   
        Док.Записать(РежимЗаписиДокумента.Проведение);
        Если Открыть  Тогда
            //ОткрытьФорму("Документ.вт_ОтчетПроизводства.ФормаДокумента", Новый Структура("Ключ", Док.Ссылка)); 
            Возврат Док.Ссылка;
        Иначе
            Возврат НЕОПРЕДЕЛЕНО;// Док.Ссылка
        КонецЕсли;
    Иначе
        Возврат Док;
    КонецЕсли; 
    
КонецФункции	

&НаСервереБезКонтекста
Процедура ОчиститьЭлементы()
    
    //Для Каждого рекв Из ПолучитьРеквизиты() Цикл
    //    Если рекв.ТипЗначения.СодержитТип(Тип("ТаблицаЗначений")) Тогда
    //        Объект[рекв.Имя].Очистить();
    //    ИначеЕсли рекв.ТипЗначения.СодержитТип(Тип("Булево")) Тогда
    //        Объект[рекв.Имя] = Ложь;
    //    Иначе
    //        Объект[рекв.Имя] = НЕОПРЕДЕЛЕНО;
    //    КонецЕсли;
    
КонецПроцедуры	

&НаКлиенте
Процедура КомандаСформировать(Команда)
	СформироватьТехКарту();
    //Сообщить("Завершено!");
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьПодборПродукции(Команда)
	      ОткрытьПодбор();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодбор()
	
	Отказ = Ложь;
	//Если Не ЗначениеЗаполнено(Объект.Соглашение)
	//	Или Не ЗначениеЗаполнено(Объект.Валюта) Тогда
	//	ОчиститьСообщения();
	//	//СообщитьОбОшибкахОткрытияПодбора(Отказ);
	//КонецЕсли;
	//Если Отказ Тогда
	//	Возврат;
	//КонецЕсли;
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор товаров в %Документ%'");
	//Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", Объект.Ссылка);
	//Иначе
	//	ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", "заказ клиента");
	//КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	//ПараметрыФормы.Вставить("Соглашение",               Объект.Соглашение);
	//ПараметрыФормы.Вставить("ЦенаВключаетНДС",          Объект.ЦенаВключаетНДС);
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры", Новый ФиксированныйМассив(НоменклатураКлиентСервер.ОтборПоТоваруМногооборотнойТаре()));
	ПараметрыФормы.Вставить("РежимПодбораИспользоватьСкладыВТабличнойЧасти", Ложь);
	ПараметрыФормы.Вставить("ИспользоватьДатыОтгрузки",                      Ложь);
	ПараметрыФормы.Вставить("ЗапрашиватьКоличество",                      Ложь);
	
//	ПараметрыФормы.Вставить("СкрыватьПодакцизныеТовары",               Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД"));
//	ПараметрыФормы.Вставить("ОтображатьФлагСкрыватьПодакцизныеТовары", Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД"));
	//ПараметрыФормы.Вставить("Склад",                                   Объект.Склад);
	ПараметрыФормы.Вставить("Валюта",                                  Объект.Валюта);
	//ПараметрыФормы.Вставить("Заголовок",                               ПараметрЗаголовок);
	//ПараметрыФормы.Вставить("Дата",                                    Объект.Дата);
	//ПараметрыФормы.Вставить("Документ",                                Объект.Ссылка);
	
	//Если Не Объект.Соглашение.Пустая() Тогда
	//	СегментНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Соглашение, "СегментНоменклатуры");
	//	ПараметрыФормы.Вставить("СегментНоменклатуры", СегментНоменклатуры);
	//КонецЕсли;
	ПараметрыФормы.Вставить("ИмяТаблЧасти",                                  "Продукция");
	ОткрытьФорму("Обработка.вт_ПодборТоваров.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);  //Внешняя
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	
	Если ВыбранноеЗначение.ИмяТаблЧасти = "Продукция" Тогда 
		Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
			
			ТекущаяСтрока = Объект.втПродукция.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "Номенклатура");
			
		КонецЦикла;	
		
	ИначеЕсли ВыбранноеЗначение.ИмяТаблЧасти = "Сырье" Тогда 
		Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
			
			ТекущаяСтрока = Объект.втСыре.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "Номенклатура");
			ТекущаяСтрока.Количество = СтрокаТовара.КоличествоУпаковок;
			
		КонецЦикла;	
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Валюта=Константы.ВалютаРегламентированногоУчета.Получить();
    Аналоги.Параметры.УстановитьЗначениеПараметра("НачалоПериода", ДобавитьМесяц(ТекущаяДата(), -12));
    Аналоги.Параметры.УстановитьЗначениеПараметра("КонецПериода", КонецДня(ТекущаяДата()));
    Аналоги.Параметры.УстановитьЗначениеПараметра("НоменклатураСырья", СырьёНоменклатура);
            Аналоги.Параметры.УстановитьЗначениеПараметра("ХарактеристикаСырья", СырьёХарактеристикаНоменклатуры);
	Организация = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ОрганизацияПроизводства");
	Склад = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_СкладПроизводства");
	Подразделение = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ПодразделениеПроизводства");
	ВидОперацииПроизводства = Перечисления.вт_ВидыОперацийПроизводства.СобственноеПроизводство;
	СтатьяДоходов = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_СтатьяДоходовПроизводство");
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьПодборСырья(Команда)
	ОткрытьПодборСырье();	
КонецПроцедуры

&НаСервере
Функция ОтборПоТипуСырьеМатериалы() Экспорт
	
	МассивТиповНоменклатуры = Новый Массив;
	МассивТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.вт_СырьеИМатериалы"));
	Возврат МассивТиповНоменклатуры;
	
КонецФункции


&НаКлиенте
Процедура ОткрытьПодборСырье()
	ПараметрЗаголовок = НСтр("ru = 'Подбор товаров в %Документ%'");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры", Новый ФиксированныйМассив(ОтборПоТипуСырьеМатериалы()));
	ПараметрыФормы.Вставить("РежимПодбораИспользоватьСкладыВТабличнойЧасти", Ложь);
	ПараметрыФормы.Вставить("ИспользоватьДатыОтгрузки",                      Ложь);
	ПараметрыФормы.Вставить("ЗапрашиватьКоличество",                      Ложь);
	ПараметрыФормы.Вставить("Валюта",                                  Объект.Валюта);
	ПараметрыФормы.Вставить("ИмяТаблЧасти",                                  "Сырье");
	
	ОткрытьФорму("Обработка.вт_ПодборТоваров.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура втПродукцияКоличествоСырьяПриИзменении(Элемент)
    
		текДанные = Элементы.втПродукция.ТекущиеДанные;
		Если текДанные <> Неопределено Тогда
			текДанные.Процент = текДанные.КоличествоСырья/СырьёКоличество*100;
		КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура втПродукцияПроцентПриИзменении(Элемент)
    
		текДанные = Элементы.втПродукция.ТекущиеДанные;
		Если текДанные <> Неопределено Тогда
			текДанные.КоличествоСырья = СырьёКоличество*текДанные.Процент/100;
		КонецЕсли;
        
КонецПроцедуры

&НаКлиенте
Процедура СырьёНоменклатураПриИзменении(Элемент)
    Если  ЗначениеЗаполнено(СырьёНоменклатура) Тогда
        ЕдиницаИзмеренияСырьё(СырьёНоменклатура);
        Аналоги.Параметры.УстановитьЗначениеПараметра("НоменклатураСырья", СырьёНоменклатура);
        //Если  ЗначениеЗаполнено(СырьёХарактеристикаНоменклатуры) Тогда
            Аналоги.Параметры.УстановитьЗначениеПараметра("ХарактеристикаСырья", СырьёХарактеристикаНоменклатуры);
            //Элементы.Аналоги.Свернуть(Элементы.Аналоги.ТекущаяСтрока);
        //КонецЕсли;
        //ЗаполнитьАналоги(СырьёНоменклатура,СырьёХарактеристикаНоменклатуры);
    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАналоги(Ном,Хар)
	 
	 Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|вт_ОтчетПроизводстваТовары.Номенклатура КАК Номенклатура,
	|вт_ОтчетПроизводстваТовары.Характеристика КАК Характеристика
    |ИЗ
	|Документ.вт_ОтчетПроизводства.вт_ПроизводствоСырье КАК вт_ОтчетПроизводствавт_ПроизводствоСырье
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ОтчетПроизводства КАК вт_ОтчетПроизводства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ОтчетПроизводства.Товары КАК вт_ОтчетПроизводстваТовары
	|		ПО (вт_ОтчетПроизводстваТовары.Ссылка = вт_ОтчетПроизводства.Ссылка)
	|	ПО вт_ОтчетПроизводствавт_ПроизводствоСырье.Ссылка = вт_ОтчетПроизводства.Ссылка
    |  ГДЕ
	|вт_ОтчетПроизводстваТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|И НЕ вт_ОтчетПроизводстваТовары.Ссылка ЕСТЬ NULL
	|И вт_ОтчетПроизводстваТовары.НомерСтроки = 1
	|И вт_ОтчетПроизводствавт_ПроизводствоСырье.Номенклатура = &НоменклатураСырья
	|И вт_ОтчетПроизводствавт_ПроизводствоСырье.Характеристика = &ХарактеристикаСырья

    |СГРУППИРОВАТЬ ПО
	|вт_ОтчетПроизводстваТовары.Номенклатура,
	|вт_ОтчетПроизводстваТовары.Характеристика");
	 
	 Запрос.УстановитьПараметр("НачалоПериода",  ДобавитьМесяц(ТекущаяДата(), -12));
	 Запрос.УстановитьПараметр("КонецПериода", ТекущаяДата());
	 Запрос.УстановитьПараметр("НоменклатураСырья", Ном);
	 Запрос.УстановитьПараметр("ХарактеристикаСырья", Хар);

	 ТаблАналоги = Запрос.Выполнить().Выгрузить();
	 ТаблАналоги.Свернуть("Номенклатура,Характеристика");
     //Аналоги1 = ТаблАналоги.Скопировать("Номенклатура,Характеристика");
     Аналоги1.Очистить();
         для каждого Строка из ТаблАналоги Цикл
            ЗаполнитьЗначенияСвойств(Аналоги1.Добавить(), Строка);
         КонецЦикла;
	 
КонецПроцедуры

&НаСервере
Процедура ЕдиницаИзмеренияСырьё(Элемент)
    Объект.СырьёЕдиницаИзмерения = Элемент.ЕдиницаИзмерения;
    //Объект.СырьёХарактеристикаНоменклатуры.Владелец = Элемент.Ссылка;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьПровестиПриИзменении(Элемент)
    Элементы.Открыть.Видимость = ЗаписатьПровести;
КонецПроцедуры

&НаКлиенте
Процедура СырьёХарактеристикаНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    //СтандартнаяОбработка = Ложь;
    //Элемент.Владелец =   Объект.СырьёНоменклатура;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьАналогВПродукцию(Команда)
		текДанные = Элементы.Аналоги.ТекущиеДанные;
		Если текДанные <> Неопределено Тогда
	        СтрокаТовары = Объект.втПродукция.Добавить(); 
	        СтрокаТовары.Номенклатура = текДанные.Номенклатура;
            Если  ЗначениеЗаполнено(текДанные.Характеристика) Тогда
    	        СтрокаТовары.Характеристика = текДанные.Характеристика;
            КонецЕсли;
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СырьёХарактеристикаНоменклатурыПриИзменении(Элемент)
    Если  ЗначениеЗаполнено(СырьёХарактеристикаНоменклатуры) Тогда
            Аналоги.Параметры.УстановитьЗначениеПараметра("ХарактеристикаСырья", СырьёХарактеристикаНоменклатуры);
        //ЗаполнитьАналоги(СырьёНоменклатура,СырьёХарактеристикаНоменклатуры);
    КонецЕсли;
КонецПроцедуры
