
&НаСервере
Процедура СменноеЗаданиеПриИзмененииНаСервере()
	
	Для каждого Стр Из Объект.СменноеЗадание.Продукция Цикл
		Если Стр.КоличествоПлановое<=0 Тогда
			Продолжить;
		КонецЕсли;
		НовСтрПр = Объект.ПродукцияИзСЗ.Добавить();
		НовСтрПр.Номенклатура = Стр.Номенклатура;
		НовСтрПр.Исп = Ложь;
	КонецЦикла;
	
	ЗаполнитьПродукциюНаСервере();
	Объект.ДатаМаршрутных = Объект.СменноеЗадание.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура СменноеЗаданиеПриИзменении(Элемент)
	
	ЗаполнитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписок()
	
	Объект.ПродукцияИзСЗ.Очистить();
	Объект.ТЧПродукции.Очистить();
	Если ЗначениеЗаполнено(Объект.СменноеЗадание) Тогда
		СменноеЗаданиеПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПродукциюНаСервере()
	
	Объект.ТЧПродукции.Очистить();
	Объект.ТЧРецептов.Очистить();
	Объект.ТЧИсследований.Очистить();
	
	СменноеЗадание = Объект.СменноеЗадание;
	ТЗСменногоЗАдания = СменноеЗадание.Продукция.Выгрузить();
	
	//добавляем те продукты которых нет в сменном задании, но они есть в СЗПродукции
	Для каждого СтрПрод Из Объект.ПродукцияИзСЗ Цикл
		Если Не СтрПрод.Исп Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ТЗСменногоЗадания.Найти(СтрПрод.Номенклатура, "Номенклатура") = Неопределено Тогда
			НовСтрТЗСменногоЗАдания = ТЗСменногоЗадания.Добавить();
			НовСтрТЗСменногоЗАдания.Номенклатура = СтрПрод.Номенклатура;
		КонецЕсли; 
		
	КонецЦикла; 
	
	Для каждого Стр Из ТЗСменногоЗадания Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура", Стр.Номенклатура);		
		ПараметрыОтбора.Вставить("Исп", Истина);		
		СтрПрод = Объект.ПродукцияИзСЗ.НайтиСтроки(ПараметрыОтбора);
		Если СтрПрод.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		СтрТЗ = Объект.ТЧПродукции.Добавить();
		СтрТз.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		ЗаполнитьЗначенияСвойств(СтрТЗ, Стр);
		СтрТЗ.Количество = Стр.КоличествоПлановое;
		СтрТЗ.ОбъемЗамеса = Стр.ОбъемЗамеса; 
		СтрТЗ.Линия = Стр.Линия;
		СтрТЗ.Рецепт = Стр.Рецепт;
		////СтрТЗ.Фасовка = Стр.Фасовка;
		//
		СтрТЗ.Продукция = Стр.Номенклатура;
		//СтрТЗ.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
		////СтрТЗ.Рецепт = ПолучитьОсновнойРецепт(Стр.Номенклатура, СтрТЗ.ХарактеристикаНоменклатуры);
		//
		////СтрТЗ.ДатаРеализации = Стр.ДатаРеализации;
		
		ЗаполнитьРецепт(СтрТЗ);
		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРецепт(СтрТЗ)
	
	Если СтрТЗ = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	//удаляем уже существующие строки мат
	Отбор = Новый Структура("ИдентификаторСтрокиПродукции",СтрТЗ.ИдентификаторСтроки);
	Масс = Объект.ТЧРецептов.НайтиСтроки(Отбор);
	Для каждого Строка из Масс Цикл
		Объект.ТЧРецептов.Удалить(Строка);
	КонецЦикла;
	
	Отбор = Новый Структура("ИдентификаторСтрокиПродукции",СтрТЗ.ИдентификаторСтроки);
	Масс = Объект.ТЧИсследований.НайтиСтроки(Отбор);
	Для каждого Строка из Масс Цикл
		Объект.ТЧИсследований.Удалить(Строка);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СтрТЗ.Рецепт) Тогда
		
		ЗапросОст = Новый Запрос;
		ЗапросОст.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ЗапросОст.Текст = "ВЫБРАТЬ
		                  |	Рецепты.ВидСырья.ОсновнойАналог КАК Номенклатура,
		                  |	Рецепты.Количество КАК ПроцентЗакладки,
		                  |	Рецепты.НомерСтроки КАК НомерСтрокиВРецепте,
		                  |	Рецепты.ВидСырья КАК ВидСырья,
		                  |	NULL КАК Упаковка
		                  |ПОМЕСТИТЬ ВТ_Рецепт
		                  |ИЗ
		                  |	Справочник.вт_ВариантыПроизводстваПоТехКартам.Состав КАК Рецепты
		                  |ГДЕ
		                  |	Рецепты.Ссылка = &Рецепт
		                  |
		                  |ОБЪЕДИНИТЬ ВСЕ
		                  |
		                  |ВЫБРАТЬ
		                  |	Комплектации.Номенклатура,
		                  |	Комплектации.КоличествоУпаковок,
		                  |	100,
		                  |	NULL,
		                  |	Комплектации.Упаковка
		                  |ИЗ
		                  |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК Комплектации
		                  |ГДЕ
		                  |	Комплектации.Ссылка.Владелец = &КомплУпаковки
		                  |;
		                  |
		                  |////////////////////////////////////////////////////////////////////////////////
		                  |ВЫБРАТЬ
		                  |	РецептыСостав.Номенклатура КАК Материал,
		                  |	РецептыСостав.НомерСтрокиВРецепте КАК НомерСтрокиВРецепте,
		                  |	СУММА(ТоварыНаСкладахОстаткиИОбороты.ВНаличииКонечныйОстаток) КАК Остаток,
		                  |	ВЫБОР
		                  |		КОГДА ТоварыНаСкладахОстаткиИОбороты.ВНаличииКонечныйОстаток > 0
		                  |			ТОГДА ИСТИНА
		                  |		ИНАЧЕ ЛОЖЬ
		                  |	КОНЕЦ КАК ЕстьОстаток,
		                  |	РецептыСостав.ПроцентЗакладки КАК ПроцентЗакладки,
		                  |	РецептыСостав.ВидСырья КАК ВидСырья
		                  |ИЗ
		                  |	ВТ_Рецепт КАК РецептыСостав
		                  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
		                  |				&НачалоДня,
		                  |				&НаДату,
		                  |				,
		                  |				,
		                  |				Склад В (&Склады)
		                  |					И Номенклатура В
		                  |						(ВЫБРАТЬ
		                  |							РецептыСостав.Номенклатура КАК Номенклатура
		                  |						ИЗ
		                  |							ВТ_Рецепт КАК РецептыСостав)) КАК ТоварыНаСкладахОстаткиИОбороты
		                  |		ПО РецептыСостав.Номенклатура = ТоварыНаСкладахОстаткиИОбороты.Номенклатура
		                  |
		                  |СГРУППИРОВАТЬ ПО
		                  |	РецептыСостав.Номенклатура,
		                  |	РецептыСостав.НомерСтрокиВРецепте,
		                  |	ВЫБОР
		                  |		КОГДА ТоварыНаСкладахОстаткиИОбороты.ВНаличииКонечныйОстаток > 0
		                  |			ТОГДА ИСТИНА
		                  |		ИНАЧЕ ЛОЖЬ
		                  |	КОНЕЦ,
		                  |	РецептыСостав.ПроцентЗакладки,
		                  |	РецептыСостав.ВидСырья
		                  |
		                  |УПОРЯДОЧИТЬ ПО
		                  |	НомерСтрокиВРецепте,
		                  |	ЕстьОстаток УБЫВ";
		
		
		ЗапросОст.УстановитьПараметр("НаДату", Объект.ДатаМаршрутных);
		ЗапросОст.УстановитьПараметр("СвойствоВидСырья", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "ВидСырья_86cd3104a2944c7681b702076074ab10"));
		ЗапросОст.УстановитьПараметр("НачалоДня", НачалоДня(Объект.ДатаМаршрутных));
		
		Склады = Новый СписокЗначений;
		Склады.Добавить(Объект.ОсновнойСкладСырья);
		//Склады.Добавить(Объект.ЦеховойСкладГП);
		Склады.Добавить(Объект.ЦеховойСклад);
		ЗапросОст.УстановитьПараметр("Склады", Склады);
		
		ЗапросОст.УстановитьПараметр("Рецепт", СтрТЗ.Рецепт);
		ЗапросОст.УстановитьПараметр("КомплУпаковки", СтрТЗ.Продукция.УпаковкаПродукта);
		
		РезультатОст = ЗапросОст.ВыполнитьПакетСПромежуточнымиДанными();
		
		ТЗОст = РезультатОст[1].Выгрузить();
		ТЗРец = РезультатОст[0].Выгрузить();
		
		Для каждого СтрТЗРец Из ТЗОст Цикл
			СтрТЧРецептов = Объект.ТЧРецептов.Добавить();
			СтрТЧРецептов.ИдентификаторСтроки = Новый УникальныйИдентификатор();
			СтрТЧРецептов.ИдентификаторСтрокиПродукции = СтрТз.ИдентификаторСтроки;
			ЗаполнитьЗначенияСвойств(СтрТЧРецептов, СтрТЗРец);
			
		КонецЦикла;
		
	КонецЕсли; 
	
	//заполняем список исследований
	ЗапросНорм = Новый Запрос;
	ЗапросНорм.Текст = "ВЫБРАТЬ
	                   |	ВидыИсследований.Ссылка КАК ВидИсследования,
	                   |	НормативыНоменклатурыЛабСрезПоследних.Лаборатория КАК Лаборатория,
	                   |	НормативыНоменклатурыЛабСрезПоследних.ВидИсследования КАК ВидИсследованияНорм,
	                   |	НормативыНоменклатурыЛабСрезПоследних.ВидИсследования.МассаОбразца КАК МассаОбразца
	                   |ИЗ
	                   |	Справочник.ВидыИсследований КАК ВидыИсследований
	                   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативыНоменклатурыЛаб.СрезПоследних(&НаДату, Номенклатура = &Номенклатура) КАК НормативыНоменклатурыЛабСрезПоследних
	                   |		ПО ВидыИсследований.Ссылка = НормативыНоменклатурыЛабСрезПоследних.ВидИсследования
	                   |ГДЕ
	                   |	ВидыИсследований.ПометкаУдаления = ЛОЖЬ
	                   |
	                   |СГРУППИРОВАТЬ ПО
	                   |	ВидыИсследований.Ссылка,
	                   |	НормативыНоменклатурыЛабСрезПоследних.Лаборатория,
	                   |	НормативыНоменклатурыЛабСрезПоследних.ВидИсследования,
	                   |	НормативыНоменклатурыЛабСрезПоследних.ВидИсследования.МассаОбразца";
	
	ЗапросНорм.УстановитьПараметр("НаДату", Объект.ДатаМаршрутных);
	ЗапросНорм.УстановитьПараметр("Номенклатура", СтрТЗ.Продукция);
	
	РезультатНорм = ЗапросНорм.Выполнить();
	
	ВыборкаВидИсследования = РезультатНорм.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаВидИсследования.Следующий() Цикл
		СтрТЧисслед = Объект.ТЧИсследований.Добавить();
		СтрТЧисслед.ИдентификаторСтрокиПродукции = СтрТз.ИдентификаторСтроки;
		СтрТЧисслед.Исследование = ВыборкаВидИсследования.ВидИсследования;
		СтрТЧисслед.МассаОбразца = ВыборкаВидИсследования.МассаОбразца;
		СтрТЧисслед.Лаборатория = ВыборкаВидИсследования.Лаборатория;
		
		//СтрТЧисслед.Периодичность = Выборка.Периодичность; //0020532
		СтрТЧисслед.ИдентификаторСтроки = Новый УникальныйИдентификатор();
		
		СтрТЧисслед.Использование = ЗначениеЗаполнено(ВыборкаВидИсследования.ВидИсследованияНорм); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРецепту(Команда)
	ЗаполнитьПродукциюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТЧПродукцииПриАктивизацииСтроки(Элемент)
	
	Данные = Элементы.ТЧПродукции.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	//устанавливаем идентификатор если он пустой
	Если НЕ ЗначениеЗаполнено(Данные.ИдентификаторСтроки) Тогда 
		Данные.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	//устанавливаем отбор в подчиненных табличных частях
	Элементы.ТЧРецептов.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторСтрокиПродукции", Данные.ИдентификаторСтроки);
	
	Элементы.ТЧИсследований.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторСтрокиПродукции", Данные.ИдентификаторСтроки);
	
	ДанныеВИ = Элементы.ТЧИсследований.ТекущиеДанные;
	Если НЕ ДанныеВИ = Неопределено Тогда
		Элементы.Нормативы.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторСтрокиТЧИсследований", ДанныеВИ.ИдентификаторСтроки);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧИсследованийПриАктивизацииСтроки(Элемент)
	ДанныеВИ = Элементы.ТЧИсследований.ТекущиеДанные;
	Если НЕ ДанныеВИ = Неопределено Тогда
		Элементы.Нормативы.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторСтрокиТЧИсследований", ДанныеВИ.ИдентификаторСтроки);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура СоздатьМЛНаСервере()
	
	//Проверка на объемы замеса - должны быть все заполнены
	Для каждого Стр Из Объект.ТЧПродукции Цикл
		Если Стр.ОбъемЗамеса < 2 Тогда
			//Предупреждение("В строке "+Стр.НомерСтроки+" указан недопустимый объем замеса!");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='В строке "+Стр.НомерСтроки+" указан недопустимый объем замеса!'"));
			Возврат;
		КонецЕсли;
	КонецЦикла;
	//
	Для каждого Стр Из Объект.ТЧПродукции Цикл
		
		Если Стр.Количество<=0 Тогда
			Продолжить;
		КонецЕсли; 
		
		////проверяем стоит ли в списке галочка
		//Элем = СЗПродукции.НайтиПоЗначению(Стр.Продукция);
		//Если Элем=Неопределено ИЛИ (НЕ Элем.Пометка) Тогда
		//	Продолжить;
		//КонецЕсли; 
		
		////0025408
		//СрокИзСправ = ЛабораторияКлиент.ПолучитьСрокГодности(Стр.Продукция, ДатаМаршрутных);
		//Если СрокИзСправ>0 Тогда
		//	СрокГодности = ДобавитьМесяц(ДатаМаршрутных, СрокИзСправ);	//0020189
		//Иначе	
		//	СрокГодности = "";
		//	Сообщить("Для номенклатуры "+ Стр.Продукция+" не определен срок годности!");
		//КонецЕсли; 
		
		НомерЗамеса = 0;
		Заказали = 0;
		ОсталосьЗаказать = Стр.Количество;
		ЭтоПервыйМЛ = Истина;
		Пока ОсталосьЗаказать>0 Цикл
			
			//ОбработкаПрерыванияПользователя();
			
			НомерЗамеса = НомерЗамеса +1;
			НовДок = Документы.МаршрутныйЛист.СоздатьДокумент();
			НовДок.Дата = Объект.ДатаМаршрутных;
			НовДок.ДатаФакт = Объект.ДатаМаршрутных;
			
			НовДок.Автор = ПараметрыСеанса.ТекущийПользователь;
			НовДок.Подразделение = Объект.Подразделение;
			НовДок.Склад = Объект.ЦеховойСклад;
			//НовДок.СкладПолучатель = Объект.ЦеховойСкладГП;
			
			НовДок.УстановитьНовыйНомер();
			НовДок.Линия = Стр.Линия;
			НовДок.Организация = Объект.СменноеЗадание.Организация;
			НовДок.Смена = Стр.Смена;
			НовДок.НомерЗамеса = НомерЗамеса;
			
			//создаем партию
			//определяем номер партии
			Арт = Стр.Продукция.Артикул;
			НомерРецепта = Стр.Рецепт.НомерРецепта;
			НомерДня = Формат(ДеньГода(Объект.ДатаМаршрутных), "ЧЦ=3; ЧВН=");
			НомерПартии = ""+Арт+Формат(НомерРецепта, "ЧЦ=2; ЧВН=")+Формат(НомерДня, "ЧЦ=3; ЧВН=");
			//ПА = Справочники.Контрагенты.НайтиПоКоду("001014");
			ГоденДо = ДобавитьМесяц(Объект.ДатаМаршрутных, Стр.Продукция.СрокГодности);
			Серия = пбт_ПроизводствоСервер.НайтиСоздатьСерию(НомерПартии, Стр.Продукция, , Объект.ДатаМаршрутных, ГоденДо);
			НовДок.Серия = Серия;
			
			//НовДок.Фасовка = Стр.Фасовка;
			//НовДок.АвтоматическаяФасовка = Стр.АвтоматическаяФасовка; 
			
			Закажем = Мин(Стр.ОбъемЗамеса, ОсталосьЗаказать);
			ОсталосьЗаказать = ОсталосьЗаказать - Закажем;
			НовДок.Количество = Закажем;
			
			//ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(НовДок, глЗначениеПеременной("глТекущийПользователь"), глЗначениеПеременной("ВалютаУправленческогоУчета"), , , );
			
			НовДок.Номенклатура = Стр.Продукция;
			НовДок.ХарактеристикаНоменклатуры = Стр.ХарактеристикаНоменклатуры;
			//НовСтр.ЕдиницаИзмерения = Стр.Продукция.Упаковка;
			
			//0.4 процента - добавляем на потери
			Если Объект.БезПотерь Тогда
				КоличествоСырья = Закажем;
				НовДок.БезПотерь = Истина;
			Иначе	
				КоличествоСырья = Закажем*1.004;
			КонецЕсли; 
			
			//добавляем образцы
			//раньше был список значений - теперь таблица
			Отбор = Новый Структура();
			Отбор.Вставить("ИдентификаторСтрокиПродукции", Стр.ИдентификаторСтроки);
			СтрокиИсс = Объект.ТЧИсследований.НайтиСтроки(Отбор);
			Для каждого СтрИс Из СтрокиИсс Цикл
				Если Не СтрИс.Использование Тогда
					Продолжить;
				КонецЕсли; 
				Если СтрИс.Периодичность = Перечисления.ПериодичностьЛаб.ППК Тогда //0021515
					Если ЭтоПервыйМЛ = Ложь Тогда
						//ППК выписываем только в первом МЛ
					   Продолжить;
					КонецЕсли; 
				КонецЕсли; 
				СтрИсл = НовДок.ВидыИсследований.Добавить();
				СтрИсл.ВидИсследований = СтрИс.Исследование;
				СтрИсл.Лаборатория = СтрИс.Лаборатория;
				СтрИсл.МассаОбразца = СтрИс.МассаОбразца; //100;
				СтрИсл.Периодичность = СтрИс.Периодичность; //0020532
			КонецЦикла;	
			
			КолОбрацов = НовДок.ВидыИсследований.Итог("МассаОбразца")/1000;
			
			КоличествоСырья = КоличествоСырья + КолОбрацов; 
			
			НовДок.Количество = Закажем+КолОбрацов;
			НовДок.КоличествоСырья = КоличествоСырья;
			
			НовДок.Рецепт = Стр.Рецепт;
			НовДок.КодПродукции = Стр.КодПродукции;
			
			НовДок.ДатаРеализации = Стр.ДатаРеализации;
			//НовСтр.СрокГодности = СрокГодности; //0020189
			
			//*******Такие доп реквизиты понадобятся***********
			//НовДок.ДопМаркировка = Стр.Рецепт.ДопМаркировка;
			//НовДок.ПорядокЗакладки = Стр.Рецепт.ПорядокЗакладки;
			//НовДок.ВремяСмешивания = ПолучитьВремяСмешивания(Стр.Рецепт, Стр.Линия);
			
			//Считаем сколько у нас получилось процентов в закладке
			//ВсмопМат = Справочники.Номенклатура.НайтиПоКоду("001002455");//Константы.ВспомогательныеМатериалы.Получить();
			пВсего = 0;
			Для каждого СтрРец Из Объект.ТЧРецептов Цикл
				
				Если НЕ СтрРец.ИдентификаторСтрокиПродукции = стр.ИдентификаторСтроки Тогда
					Продолжить;
				КонецЕсли;
				
				//Если НЕ СтрРец.ВидСырья.Тара Тогда
				//	пВсего = пВсего + СтрРец.ПроцентЗакладки;
				//КонецЕсли;
				Если НЕ СтрРец.Материал.ВидНоменклатуры.Наименование = "Тара" Тогда
					пВсего = пВсего + СтрРец.ПроцентЗакладки;
				КонецЕсли;				
			КонецЦикла;
			
			КолСырьяПоМат = 0;
			Для каждого СтрРецептов Из Объект.ТЧРецептов Цикл
				
				Если НЕ СтрРецептов.ИдентификаторСтрокиПродукции = стр.ИдентификаторСтроки Тогда
					Продолжить;
				КонецЕсли; 
				
				НовСтр = НовДок.МатериалыПлан.Добавить();
				НовСтр.Номенклатура = СтрРецептов.Материал;
				//НовСтр.Примечание = СтрРецептов.Примечание;
				НовСтр.Количество100 = СтрРецептов.ПроцентЗакладки;
				//НовСтр.ЕдиницаИзмерения = СтрРецептов.Материал.ЕдиницаХраненияОстатков;
				//НовСтр.Количество = Закажем*СтрРецептов.ПроцентЗакладки/пВсего; //100
				
				Если НЕ СтрРецептов.Материал.ВидНоменклатуры.Наименование = "Тара" Тогда
					НовСтр.Количество = КоличествоСырья*СтрРецептов.ПроцентЗакладки/пВсего; //теперь считаем от потерь и образцов
					КолСырьяПоМат = КолСырьяПоМат + НовСтр.Количество;
				Иначе
					//для тары считаем иначе
					НовСтр.Количество = Закажем*СтрРецептов.ПроцентЗакладки/100;
				КонецЕсли;
				
				НовСтр.ИдентификаторСтрокиПлан = Новый УникальныйИдентификатор(); 
				
			КонецЦикла; 
			
			//КолСырьяПоМат = 0;
			//ВсмопМат = Справочники.Номенклатура.НайтиПоКоду("001002455");
			//Если ЗначениеЗаполнено(ВсмопМат) Тогда
			//	Для каждого СтрМат Из НовДок.МатериалыПлан Цикл
			//		
			//		Если НЕ СтрМат.Номенклатура.ПринадлежитЭлементу(ВсмопМат) Тогда
			//			КолСырьяПоМат = КолСырьяПоМат + СтрМат.Количество;
			//		КонецЕсли;			
			//	КонецЦикла;
			//КонецЕсли;
			НовДок.КоличествоСырья = КолСырьяПоМат;
			
			//НовДок.Материалы.Загрузить(НовДок.МатериалыПлан.Выгрузить());
			//заполняем факт по плану
			Для каждого СтрПлан Из НовДок.МатериалыПлан Цикл
				СтрФакт = НовДок.Материалы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрФакт, СтрПлан, , "НомерСтроки");
				СтрФакт.ИдентификаторСтрокиТЧПлан = СтрПлан.ИдентификаторСтрокиПлан;
			КонецЦикла;
			
			Попытка
			   НовДок.Записать();
			   ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НовДок);
			Исключение
			   ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать МЛ "+ОписаниеОшибки());
			КонецПопытки; 
			
			ЭтоПервыйМЛ = Ложь;
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМЛ(Команда)
	СоздатьМЛНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокПродукции(Команда)
	ЗаполнитьСписок();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТЧРецептовМатериалНачалоВыбораИзСпискаНаСервере()
	
	//СЗ = РасчетРецептур.ПолучитьСписокАналогов(Элемент.Значение);
	//Элемент.СписокВыбора = СЗ;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧРецептовМатериалНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Элемент.РежимВыбораИзСписка Тогда
		СтандартнаяОбработка = Ложь;//ОбработкаПолученияДанныхВыбора - возможный вариант
		
		ДанныеДляСпискаВыбора = пбт_ПроизводствоСервер.ПолучитьСписокАналогов(Элементы.ТЧРецептов.ТекущиеДанные.ВидСырья);
		
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора = ДанныеДляСпискаВыбора;
	Иначе	
		СтандартнаяОбработка = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧРецептовМатериалОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
    Идентификатор = Элементы.ТЧРецептов.ТекущаяСтрока;
    СтрТовара = Объект.ТЧРецептов.НайтиПоИдентификатору(Идентификатор);
    СтрТовара.Материал = ВыбранноеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧРецептовМатериалАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	//эта конструкция не взлетела
	//ПараметрыПолученияДанных.Отбор.Вставить("Ссылка", пбт_ПроизводствоСервер.ПолучитьСписокАналогов(Элементы.ТЧРецептов.ТекущиеДанные.ВидСырья));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГалочкиВПродукцииНаСервере(Пометка)
	
	Для каждого Стр Из Объект.ПродукцияИзСЗ Цикл
	
		Стр.Исп = Пометка;
	
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГалочкиВПродукции(Команда)
	ЗаполнитьГалочкиВПродукцииНаСервере(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьГалочкиВПродукции(Команда)
	ЗаполнитьГалочкиВПродукцииНаСервере(ЛОжь);
КонецПроцедуры
