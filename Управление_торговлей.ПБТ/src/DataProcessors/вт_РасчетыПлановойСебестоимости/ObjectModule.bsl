//Обходим по дереву сверху вниз и собирем цены номенклатуры. 
//Копируем в таблицы документа
Процедура СкопироватьЦеныДереваВТаблицы(ДеревоЗн, ДокОбъект) Экспорт
	
	ОбходДереваВнизТаблицаЦен(ДеревоЗн.Строки, ДокОбъект);

КонецПроцедуры

Функция ПолучитьНоменклатурыДерева(Дерево) Экспорт
   МассивНом = Новый Массив;
   
	МассивН = Новый Массив;
	МассивН.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ОписаниеТиповН = Новый ОписаниеТипов(МассивН);

	МассивХ = Новый Массив;
	МассивХ.Добавить(Тип("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ОписаниеТиповХ = Новый ОписаниеТипов(МассивХ);
	
   
   ТЗТоварХарактеристика = Новый ТаблицаЗначений;
   ТЗТоварХарактеристика.Колонки.Добавить("Номенклатура",   ОписаниеТиповН);
   ТЗТоварХарактеристика.Колонки.Добавить("Характеристика", ОписаниеТиповХ);
   
   ЗаполнитьМассивНоменклатурПоСтрокамДерева(Дерево.Строки,ТЗТоварХарактеристика);
   
   //Пакуем в структур и массив
   Для Каждого СтрокаТЗ из ТЗТоварХарактеристика Цикл
	   Структ = Новый Структура("Номенклатура,Характеристика",СтрокаТЗ.Номенклатура , СтрокаТЗ.Характеристика);
	   МассивНом.Добавить(Структ);
   КонецЦикла;
   
   Возврат МассивНом;
	
КонецФункции

Процедура ЗаполнитьМассивНоменклатурПоСтрокамДерева(СтрокиДерева, ТЗ)
	Для Каждого СтрокаД из СтрокиДерева Цикл
		
		МассивСтрок = ТЗ.НайтиСтроки(Новый Структура("Номенклатура, Характеристика",СтрокаД.Номенклатура,СтрокаД.Характеристика));
				
		Если МассивСтрок.количество() = 0 Тогда
			НовСтрока = ТЗ.Добавить();
			НовСтрока.Номенклатура = СтрокаД.Номенклатура;
			НовСтрока.Характеристика = СтрокаД.Характеристика ;
		КонецЕсли;
		
		ЗаполнитьМассивНоменклатурПоСтрокамДерева(СтрокаД.Строки, ТЗ);
		
	КонецЦикла;
КонецПроцедуры	

Процедура ОбходДереваВнизТаблицаЦен(Строки, ДокОбъект)
	Для Каждого СтрокаДерева из Строки цикл
		ОтборПоиска = Новый Структура("КодСтроки, Номенклатура", СтрокаДерева.КодСтроки, СтрокаДерева.Номенклатура);
		Если СтрокаДерева.ЭтоРабота Тогда
			МассивСтрок = ДокОбъект.ПланПоОперциям.НайтиСтроки(ОтборПоиска);
		ИначеЕсли 	СтрокаДерева.ЭтоСырье ТОгда
			МассивСтрок = ДокОбъект.РеквизитТаблицаПлана.НайтиСтроки(ОтборПоиска);			
		Иначе
			МассивСтрок = ДокОбъект.Товары.НайтиСтроки(ОтборПоиска);			
		КонецЕсли;
		
		Если МассивСтрок.Количество()>0 Тогда
			 МассивСтрок[0].ПлановаяЦена = СтрокаДерева.Цена;
		КонецЕсли;	
		
		Если СтрокаДерева.Строки.Количество()>0 Тогда
			ОбходДереваВнизТаблицаЦен(СтрокаДерева.Строки, ДокОбъект);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПлановуюСебестоимостьВыпуска(пВариантРасчета, ДеревоВыпуска) Экспорт
	
	
	// МассивНоменклатур = ПолучитьМассивНоменклатурПоПлану(ЭтотОбъект.ПланПроизводства);
	МассивНоменклатур = ПолучитьНоменклатурыДерева( ДеревоВыпуска);


	Если пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоПоследнемуПоступлению Тогда
		   ТаблицаЦен =  ЗаполнитьЦеныПоПоследнемуПоступлению(МассивНоменклатур, ЭтотОбъект.ПланПроизводства.Организация, ЭтотОбъект.ПланПроизводства.Дата);
	ИначеЕсли пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоТекущейСтоимостиОстатков Тогда
		   ТаблицаЦен = ЗаполнитьЦеныПоТекушейСтоимости(МассивНоменклатур, ЭтотОбъект.ПланПроизводства.Организация, ЭтотОбъект.ПланПроизводства.Дата);
	ИначеЕсли пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоУчетнымЦенам Тогда
		   ТаблицаЦен =   ЗаполнитьЦеныПоТипуЦен(МассивНоменклатур, ЭтотОбъект.ВидЦены, ЭтотОбъект.ПланПроизводства.Дата);		
	Иначе
	  Возврат;	   
	КонецЕсли;	
	   
	ЗаполнитьДеревоЦенами(ДеревоВыпуска, ТаблицаЦен);   
	
	РасчетПромежуточныхВыпусковДерева(ДеревоВыпуска);
	
КонецПроцедуры	

Процедура РасчетПлановойСебестоимостиВыпуска(пВариантРасчета, ДеревоВыпуска) Экспорт
	
	//ДеревоВыпуска = Новый ДеревоЗначений;
	//ДеревоВыпуска.Колонки.Добавить("КодСтроки"); //Уникальный код строки
	//ДеревоВыпуска.Колонки.Добавить("КлючСтроки"); //Ссылка на родительскую строку
	//ДеревоВыпуска.Колонки.Добавить("Номенклатура");
	//ДеревоВыпуска.Колонки.Добавить("ВариантПроизводства");
	//ДеревоВыпуска.Колонки.Добавить("Количество");
	//ДеревоВыпуска.Колонки.Добавить("Цена");
	//ДеревоВыпуска.Колонки.Добавить("Сумма");
	//ДеревоВыпуска.Колонки.Добавить("ЭтоРабота");
	//ДеревоВыпуска.Колонки.Добавить("ЭтоСырье");
	//

	
	МассивНоменклатур = новый Массив;   //Сюда сохраняем все сырье и работы
	
	
	ПостроитьДеревоПлановогоВыпуска(ДеревоВыпуска, ЭтотОбъект.ПланПроизводства, МассивНоменклатур);
	
	ТаблицаЦен = Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("Номенклатура");
	ТаблицаЦен.Колонки.Добавить("Цена");
	
	Если пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоПоследнемуПоступлению Тогда
		   ТаблицаЦен =  ЗаполнитьЦеныПоПоследнемуПоступлению(МассивНоменклатур, ЭтотОбъект.ПланПроизводства.Организация, ЭтотОбъект.ПланПроизводства.Дата);
	ИначеЕсли пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоТекущейСтоимостиОстатков Тогда
		   ТаблицаЦен = ЗаполнитьЦеныПоТекушейСтоимости(МассивНоменклатур, ЭтотОбъект.ПланПроизводства.Организация, ЭтотОбъект.ПланПроизводства.Дата);
	ИначеЕсли пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоУчетнымЦенам Тогда
		   ТаблицаЦен =   ЗаполнитьЦеныПоТипуЦен(МассивНоменклатур, ЭтотОбъект.ВидЦены, ЭтотОбъект.ПланПроизводства.Дата);		
	КонецЕсли;	
	   
	ЗаполнитьДеревоЦенами(ДеревоВыпуска, ТаблицаЦен);   
	
	РасчетПромежуточныхВыпусковДерева(ДеревоВыпуска);
	
КонецПроцедуры	

Процедура РасчетПромежуточныхВыпусковДерева(ДеревоВыпуска, СуммаИтого = 0) Экспорт 
	
	Для Каждого СтрокаДерева из ДеревоВыпуска.Строки Цикл
	
		Если СтрокаДерева.Строки.Количество()>0 Тогда //Если есть вложенные строки, то сумму и цену текущей строки берем от вложенных
			СуммаПФ = 0;
			РасчетПромежуточныхВыпусковДерева(СтрокаДерева,СуммаПФ);
			Если ТипЗнч(СтрокаДерева.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
				СтрокаДерева.Сумма = СуммаПФ;
				СтрокаДерева.Цена  = СтрокаДерева.Сумма / СтрокаДерева.Количество;
			КонецЕсли;
			СуммаИтого = СуммаИтого + СуммаПФ;
		КонецЕсли;
		
		
		СуммаИтого = СуммаИтого + СтрокаДерева.Сумма;
		
	КонецЦикла;
	
КонецПроцедуры	

Функция ПолучитьМассивНоменклатурПоПлану(ПланСсылка)
	Запрос = новый запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	вт_ПланПроизводстваРеквизитТаблицаПлана.Номенклатура КАК Номенклатура 
	                      |ИЗ
	                      |	Документ.вт_ПланПроизводства.РеквизитТаблицаПлана КАК вт_ПланПроизводстваРеквизитТаблицаПлана
	                      |ГДЕ
	                      |	вт_ПланПроизводстваРеквизитТаблицаПлана.Ссылка = &Ссылка
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	вт_ПланПроизводстваПланПоОперциям.Номенклатура
	                      |ИЗ
	                      |	Документ.вт_ПланПроизводства.ПланПоОперциям КАК вт_ПланПроизводстваПланПоОперциям
	                      |ГДЕ
	                      |	вт_ПланПроизводстваПланПоОперциям.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка",ПланСсылка);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура");
КонецФункции	

Процедура ЗаполнитьДеревоЦенами(ДеревоВыпуска, ТаблицаЦен) Экспорт
	Для Каждого СтрокаЦен из ТаблицаЦен Цикл
		МассивСтрок = ДеревоВыпуска.Строки.НайтиСтроки(Новый Структура("Номенклатура, Характеристика",СтрокаЦен.Номенклатура, СтрокаЦен.Характеристика),Истина);
		Для Каждого СтрокаДерева из МассивСтрок Цикл
			СтрокаДерева.Цена = СтрокаЦен.Цена;
			СтрокаДерева.Сумма = СтрокаДерева.Цена * СтрокаДерева.Количество;
		КонецЦикла;	
	КонецЦикла;
	
КонецПроцедуры	

Функция ПолучитьЦеныПоВариантуРасчета(МассивНоменклатурХарактеристик, Организация, ДатаОтчета, пВариантРасчета) Экспорт
	///В МассивНоменклатурХарактеристик содержатся элементы Структура с Номенклатура и Характеристика
	
	МассивН = Новый Массив;
	МассивН.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ОписаниеТиповН = Новый ОписаниеТипов(МассивН);

	МассивХ = Новый Массив;
	МассивХ.Добавить(Тип("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ОписаниеТиповХ = Новый ОписаниеТипов(МассивХ);
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура",ОписаниеТиповН);
	ТЗ.Колонки.Добавить("Характеристика",ОписаниеТиповХ);
	
	для Каждого Элем из МассивНоменклатурХарактеристик Цикл
		СтрокаТЗ = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЗ,Элем);
	КонецЦикла;
	
	Если пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоПоследнемуПоступлению Тогда
		   ТаблицаЦен =  ЗаполнитьЦеныПоПоследнемуПоступлению(ТЗ, Организация, ДатаОтчета);
	ИначеЕсли пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоТекущейСтоимостиОстатков Тогда
		   ТаблицаЦен = ЗаполнитьЦеныПоТекушейСтоимости(ТЗ, Организация, ДатаОтчета);
	ИначеЕсли пВариантРасчета = Перечисления.вт_ВариантРасчетаПлановойСебестоимости.ПоУчетнымЦенам Тогда
		   ТаблицаЦен =   ЗаполнитьЦеныПоТипуЦен(ТЗ, КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ВидЦенПлановойСебестоимости"), ДатаОтчета);		
	КонецЕсли;		
	Возврат ТаблицаЦен;
	
КонецФункции	

Функция ЗаполнитьЦеныПоПоследнемуПоступлению(ТЗНоменклатурХар, Организация, ДатаОтчета) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВТ_Н.Номенклатура КАК Номенклатура,
	                      |	ВТ_Н.Характеристика КАК Характеристика
	                      |ПОМЕСТИТЬ ВТ_НОМ
	                      |ИЗ
	                      |	&ВТ_Н КАК ВТ_Н
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Закупки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	                      |	МАКСИМУМ(Закупки.Период) КАК МаксПериод,
	                      |	Закупки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика
	                      |ПОМЕСТИТЬ ВТ_МАКС_ДАТА
	                      |ИЗ
	                      |	РегистрНакопления.Закупки КАК Закупки
	                      |ГДЕ
	                      |	НАЧАЛОПЕРИОДА(Закупки.Период, ДЕНЬ) <= &Дата
	                      |	И (Закупки.АналитикаУчетаНоменклатуры.Номенклатура, Закупки.АналитикаУчетаНоменклатуры.Характеристика) В
	                      |			(ВЫБРАТЬ
	                      |				ВТ_НОМ.Номенклатура КАК Номенклатура,
	                      |				ВТ_НОМ.Характеристика КАК Характеристика
	                      |			ИЗ
	                      |				ВТ_НОМ КАК ВТ_НОМ)
	                      |	И Закупки.Организация = &Организация
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Закупки.АналитикаУчетаНоменклатуры.Номенклатура,
	                      |	Закупки.АналитикаУчетаНоменклатуры.Характеристика
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СРЕДНЕЕ(ЕСТЬNULL(ВЫБОР
	                      |				КОГДА Закупки.Количество <> 0
	                      |					ТОГДА Закупки.Стоимость / Закупки.Количество
	                      |				ИНАЧЕ Закупки.Стоимость
	                      |			КОНЕЦ, 0)) КАК Цена,
	                      |	ВТ_НОМ.Номенклатура КАК Номенклатура,
	                      |	ВТ_НОМ.Характеристика КАК Характеристика
	                      |ИЗ
	                      |	ВТ_НОМ КАК ВТ_НОМ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МАКС_ДАТА КАК ВТ_МАКС_ДАТА
	                      |		ПО (ВТ_МАКС_ДАТА.Номенклатура = ВТ_НОМ.Номенклатура)
	                      |			И (ВТ_МАКС_ДАТА.Характеристика = ВТ_НОМ.Характеристика)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
	                      |		ПО (ВТ_МАКС_ДАТА.Номенклатура = Закупки.АналитикаУчетаНоменклатуры.Номенклатура)
	                      |			И (ВТ_МАКС_ДАТА.Характеристика = Закупки.АналитикаУчетаНоменклатуры.Характеристика)
	                      |			И (ВТ_МАКС_ДАТА.МаксПериод = Закупки.Период)
	                      |			И (Закупки.Организация = &Организация)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_НОМ.Номенклатура,
	                      |	ВТ_НОМ.Характеристика");
	

	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата",ДатаОтчета);
	Запрос.УстановитьПараметр("ВТ_Н",ТЗНоменклатурХар);
	
	Возврат ЗАпрос.Выполнить().Выгрузить();
	
	
КонецФункции

Функция ЗаполнитьЦеныПоТекушейСтоимости(ТЗ, Организация, ДатаОтчета ) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВТ_Н.Номенклатура КАК Номенклатура,
	                      |	ВТ_Н.Характеристика КАК Характеристика
	                      |ПОМЕСТИТЬ ВТ_НОМ
	                      |ИЗ
	                      |	&ВТ_Н КАК ВТ_Н
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_НОМ.Номенклатура КАК Номенклатура,
	                      |	ВТ_НОМ.Характеристика КАК Характеристика,
	                      |	СУММА(ЕСТЬNULL(СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток, 0)) КАК СтоимостьОстаток,
	                      |	СУММА(ЕСТЬNULL(СебестоимостьТоваровОстатки.КоличествоОстаток, 0)) КАК КоличествоОстаток
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	ВТ_НОМ КАК ВТ_НОМ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(
	                      |				&Дата,
	                      |				(АналитикаУчетаНоменклатуры.Номенклатура, АналитикаУчетаНоменклатуры.Характеристика) В
	                      |						(ВЫБРАТЬ
	                      |							ВТ.Номенклатура,
	                      |							ВТ.Характеристика
	                      |						ИЗ
	                      |							ВТ_НОМ КАК ВТ)
	                      |					И Организация = &Организация) КАК СебестоимостьТоваровОстатки
	                      |		ПО (СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Номенклатура = ВТ_НОМ.Номенклатура)
	                      |			И (СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Характеристика = ВТ_НОМ.Характеристика)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_НОМ.Номенклатура,
	                      |	ВТ_НОМ.Характеристика
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ.Номенклатура КАК Номенклатура,
						  |	ВТ.Характеристика КАК Характеристика,
	                      |	ЕСТЬNULL(ВТ.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
	                      |	ЕСТЬNULL(ВТ.КоличествоОстаток, 0) КАК КоличествоОстаток,
	                      |	ВЫБОР
	                      |		КОГДА ЕСТЬNULL(ВТ.КоличествоОстаток, 0) <> 0
	                      |			ТОГДА ЕСТЬNULL(ВТ.СтоимостьОстаток, 0) / ВТ.КоличествоОстаток
	                      |		ИНАЧЕ ЕСТЬNULL(ВТ.СтоимостьОстаток, 0)
	                      |	КОНЕЦ КАК Цена
	                      |ИЗ
	                      |	ВТ КАК ВТ");
	

	
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата",ДатаОтчета);
	Запрос.УстановитьПараметр("ВТ_Н",ТЗ);
	
	Возврат ЗАпрос.Выполнить().Выгрузить();	
	
КонецФункции

Функция ЗаполнитьЦеныПоТипуЦен(ТЗ, ТипЦены, ДатаОтчета) Экспорт
	  Запрос = Новый Запрос("ВЫБРАТЬ
	                        |	ВТ_Н.Номенклатура КАК Номенклатура,
	                        |	ВТ_Н.Характеристика КАК Характеристика
	                        |ПОМЕСТИТЬ ВТ_НОМ
	                        |ИЗ
	                        |	&ВТ_Н КАК ВТ_Н
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ВТ_Н.Номенклатура КАК Номенклатура,
	                        |	ВТ_Н.Характеристика КАК Характеристика,
	                        |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
	                        |ИЗ
	                        |	ВТ_НОМ КАК ВТ_Н
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	                        |				&Дата,
	                        |				(Номенклатура, Характеристика) В
	                        |						(ВЫБРАТЬ
	                        |							ВТ.Номенклатура,
	                        |							ВТ.Характеристика
	                        |						ИЗ
	                        |							ВТ_НОМ КАК ВТ)
	                        |					И ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
	                        |		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = ВТ_Н.Номенклатура)
	                        |			И (ЦеныНоменклатурыСрезПоследних.Характеристика = ВТ_Н.Характеристика)");
	  
	  Запрос.УстановитьПараметр("Дата",ДатаОтчета);
	  Запрос.УстановитьПараметр("ВТ_Н",ТЗ);
	  Запрос.УстановитьПараметр("ВидЦены",ТипЦены);
	  
	  Возврат Запрос.Выполнить().Выгрузить(); 
 КонецФункции

Функция ЗаполнитьЦеныПоВсемВариантам(МассивНоменклатур, ДатаСреза, Организация, ТипЦены) Экспорт
	 
	  ТаблЦен1 = ЗаполнитьЦеныПоТекушейСтоимости(МассивНоменклатур, Организация, ДатаСреза);
	  МассивНоменклатур2 = Новый Массив;
	  
	  Для Каждого СтрокаЦены из ТаблЦен1 цикл
		  Если СтрокаЦены.цена = 0  ТОгда
			   МассивНоменклатур2.Добавить(СтрокаЦены.Номенклатура);
		  КонецЕсли;
	  КонецЦикла;
	  
	  Если МассивНоменклатур2.Количество()>0 тогда
	  	ТаблЦен2 = ЗаполнитьЦеныПоПоследнемуПоступлению(МассивНоменклатур2, Организация, ДатаСреза);
		МассивНоменклатур2.Очистить();
		
		Для Каждого СтрокаЦены из ТаблЦен2 цикл
			Если СтрокаЦены.цена = 0  ТОгда
				МассивНоменклатур2.Добавить(СтрокаЦены.Номенклатура);
			Иначе
				МассивСтрок = ТаблЦен1.НайтиСтроки(Новый Структура("Номенклатура, Цена",СтрокаЦены.Номенклатура,0));
				Для каждого СтрокаМассиваСтрок из МассивСтрок Цикл
					СтрокаМассиваСтрок.Цена = СтрокаЦены.цена;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;		
		
		Если МассивНоменклатур2.Количество()>0 Тогда
			 ТаблЦен3 = ЗаполнитьЦеныПоТипуЦен(МассивНоменклатур2, ТипЦены, ДатаСреза);
			 Для Каждого СтрокаЦены из ТаблЦен3 цикл
				 Если СтрокаЦены.цена > 0  ТОгда
					 МассивСтрок = ТаблЦен1.НайтиСтроки(Новый Структура("Номенклатура, Цена",СтрокаЦены.Номенклатура,0));
					 Для каждого СтрокаМассиваСтрок из МассивСтрок Цикл
						 СтрокаМассиваСтрок.Цена = СтрокаЦены.цена;
					 КонецЦикла;
				 КонецЕсли;
			 КонецЦикла;	
		КонецЕсли;
		
	  КонецЕсли;
	  
  Возврат ТаблЦен1;
  
КонецФункции
 
Процедура ПостроитьДеревоВыпуска(ДеревоВыпуска, пПлан) Экспорт
	
	МассивНоменклатур = Новый Массив;
	ПостроитьДеревоПлановогоВыпуска(ДеревоВыпуска, пПлан, МассивНоменклатур);	
КонецПроцедуры
 
Процедура ПостроитьДеревоПлановогоВыпуска(ДеревоВыпуска, пПлан, МассивНоменклатур) Экспорт
	
	МассивПродукция = пПлан.Товары.НайтиСтроки(Новый Структура("КодСтрокиРодитель",ПустойУникИдентификатор));
	
	Для Каждого СтрокаПродукция из МассивПродукция цикл
		пГотоваяПродукция = СтрокаПродукция.Номенклатура;
		ВсегоОпераций=0;
		ВсегоЧасовПоОперациям = 0;
		
		СтрокаДерева = ДеревоВыпуска.Строки.Добавить();
		СтрокаДерева.КодСтроки = СтрокаПродукция.КодСтроки;
		СтрокаДерева.Номенклатура = СтрокаПродукция.Номенклатура;
		СтрокаДерева.ВариантПроизводства = СтрокаПРодукция.ВариантПроизводства;
		
		СтрокаДерева.Количество = СтрокаПродукция.ВПроизводство;
		
		СуммаИтог = 0;
		ВсегоЧасов = 0;
		ЗаполнитьЗависимыеДанныеПроизводства(пПлан, СтрокаДерева, СтрокаПродукция.КодСтроки, СуммаИтог, ВсегоЧасов, МассивНоменклатур);
		
		СтрокаДерева.Сумма = СуммаИтог;
		Если СтрокаДерева.Количество > 0 Тогда
		 СтрокаДерева.Цена = СтрокаДерева.Сумма / СтрокаДерева.Количество;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	


Процедура ЗаполнитьЗависимыеДанныеПроизводства(пПлан, СтрокаДерева, КлючСтроки, СуммаИтог, ИтогоЧасов, МассивНоменклатур)
	//Добавляем операции
	ЧасовПоВыпуску = 0;
	МассивОпераций = пПлан.ПланПоОперциям.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого ЭлементОперации из МассивОпераций Цикл
		СтрокаСырье = СтрокаДерева.Строки.Добавить();
		СтрокаСырье.КодСтроки = ЭлементОперации.КодСтроки;
		СтрокаСырье.Номенклатура = ЭлементОперации.Номенклатура;
		СтрокаСырье.Количество = ЭлементОперации.Норма;
		СтрокаСырье.ЭтоРабота = Истина;
		СтрокаСырье.КлючСтроки = КлючСтроки;
		СтрокаСырье.Цена = ЭлементОперации.ПлановаяЦена;
		СтрокаСырье.Сумма = СтрокаСырье.Цена * СтрокаСырье.Количество;
		
		Если МассивНоменклатур.Найти(СтрокаСырье.Номенклатура) = Неопределено Тогда
			МассивНоменклатур.Добавить(СтрокаСырье.Номенклатура);
		КонецЕсли;
		
		СуммаИтог = СуммаИтог + СтрокаСырье.Сумма;
		
		ЧасовПоВыпуску = ЧасовПоВыпуску + ЭлементОперации.Норма;
	КонецЦикла;	
	
	ВариантПроизводстваНаКоличество = СтрокаДерева.ВариантПроизводства.Количество;
	Если ВариантПроизводстваНаКоличество=0 Тогда
		ВариантПроизводстваНаКоличество = 1;
	КонецЕсли;	
	//Нормируем часы
	ЧасовПоВыпуску = ЧасовПоВыпуску * СтрокаДерева.Количество / ВариантПроизводстваНаКоличество;
	
	
	ИтогоЧасов = ИтогоЧасов + ЧасовПоВыпуску;
	
	Если МассивОпераций.Количество()=0 Тогда
		ИтогоЧасов = ИтогоЧасов + СтрокаДерева.ВариантПроизводства.ВремяПроизводстваЧас * СтрокаДерева.Количество / ВариантПроизводстваНаКоличество; //СтрокаДерева.ВариантПроизводства.Количество;
	КонецЕсли;	
	
	//Добавляем сырье
	МассивСырье = пПлан.РеквизитТаблицаПлана.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого ЭлементСырье из МассивСырье Цикл
		СтрокаСырье = СтрокаДерева.Строки.Добавить();
		СтрокаСырье.КодСтроки = ЭлементСырье.КодСтроки;
		СтрокаСырье.Номенклатура = ЭлементСырье.Номенклатура;
		СтрокаСырье.Количество = ЭлементСырье.ПотребностьПоготовойПродукции;
		СтрокаСырье.КлючСтроки = КлючСтроки;
		//Пытаемся загрузить - а вдруг у него есть свой вариант производства
		МассивТовары = пПлан.Товары.НайтиСтроки(Новый Структура("Номенклатура, КодСтрокиРодитель",Элементсырье.Номенклатура, КлючСтроки));
		Если МассивТовары.Количество() > 0 Тогда //Значит это полуфабрикат
			СтрокаСырье.ВариантПроизводства = МассивТовары[0].ВариантПроизводства;
			СтрокаСырье.Цена = МассивТовары[0].ПлановаяЦена;
			
			СуммаПродукции = 0;
			ЗаполнитьЗависимыеДанныеПроизводства(пПлан, СтрокаСырье, МассивТовары[0].КодСтроки, СуммаПродукции, ИтогоЧасов, МассивНоменклатур);
			СтрокаСырье.Сумма = СуммаПродукции;
			
			Если СтрокаСырье.Количество > 0 И СтрокаСырье.Цена=0 Тогда
				СтрокаСырье.Цена = СтрокаСырье.Сумма / СтрокаСырье.Количество;
			КонецЕсли;

		Иначе
			СтрокаСырье.ЭтоСырье = Истина;
			СтрокаСырье.Цена = ЭлементСырье.ПлановаяЦена;
			СтрокаСырье.Сумма = СтрокаСырье.Цена * СтрокаСырье.Количество;
			
			Если МассивНоменклатур.Найти(СтрокаСырье.Номенклатура) = Неопределено Тогда
				МассивНоменклатур.Добавить(СтрокаСырье.Номенклатура);
			КонецЕсли;
		КонецЕсли;	
		
		СуммаИтог = СуммаИтог + СтрокаСырье.Сумма;

	КонецЦикла;
	
КонецПроцедуры	

Процедура УдалениеПланаПроизводстваПродукции(ИнфоСтруктура, ОбъектДокумент) Экспорт
	
	МассивСтрок = ОбъектДокумент.РеквизитТаблицаПлана.НайтиСтроки(Новый Структура("ГотоваяПродукция, КлючСтроки",ИнфоСтруктура.Номенклатура,ИнфоСтруктура.КодСтроки));
	Для Каждого СтрокаУдаления из МассивСтрок Цикл
		
		
		//Смотрим если этот пункт еще был и полуфабрикатом
		ОтборПоиска = Новый Структура("КодСтроки, Номенклатура, КодСтрокиРодитель",СтрокаУдаления.КодСтроки, СтрокаУдаления.Номенклатура, ИнфоСтруктура.КодСтроки);
		МассивПродукция = ОбъектДокумент.Товары.НайтиСтроки(ОтборПоиска);
		Для Каждого СтрокаПродукция из МассивПродукция цикл
			пГотоваяПродукция = СтрокаПродукция.Номенклатура;
			ДанныеСтроки = Новый Структура("Номенклатура, КодСтроки",пГотоваяПродукция, СтрокаПродукция.КодСтроки);
			УдалениеПланаПроизводстваПродукции(ДанныеСтроки, ОбъектДокумент);
			ОбъектДокумент.Товары.Удалить(СтрокаПродукция);
		КонецЦикла;
		
		ОбъектДокумент.РеквизитТаблицаПлана.Удалить(СтрокаУдаления);
		
	КонецЦикла;	
	
	//Удаляем операции
	МассивСтрок = ОбъектДокумент.ПланПоОперциям.НайтиСтроки(Новый Структура("ГотоваяПродукция, КлючСтроки",ИнфоСтруктура.Номенклатура,ИнфоСтруктура.КодСтроки));
	Для Каждого СтрокаУдаления из МассивСтрок Цикл
		ОбъектДокумент.ПланПоОперциям.Удалить(СтрокаУдаления);
	КонецЦикла;	
	
	
			
КонецПроцедуры	

ПустойУникИдентификатор = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");

	
