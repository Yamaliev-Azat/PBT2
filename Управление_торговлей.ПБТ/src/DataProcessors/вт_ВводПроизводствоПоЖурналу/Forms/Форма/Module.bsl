&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокЗаказы.Параметры.УстановитьЗначениеПараметра("КонецДня", КонецДня(ТекущаяДата()));
	СписокЗаказы.Параметры.УстановитьЗначениеПараметра("ТекущийДень", ТолькоТекущийДень);
	
	СписокПроизведено.Параметры.УстановитьЗначениеПараметра("КонецДня", КонецДня(ТекущаяДата()));	  
	
	Объект.Валюта=Константы.ВалютаРегламентированногоУчета.Получить();
	Организация = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ОрганизацияПроизводства");
	Склад = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_СкладПроизводства");
	Если ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь.Подразделение) Тогда
		Подразделение = ПараметрыСеанса.ТекущийПользователь.Подразделение;	
	Иначе	
		Подразделение = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ПодразделениеПроизводства");
	КонецЕсли;
	ВидОперацииПроизводства = Перечисления.вт_ВидыОперацийПроизводства.СобственноеПроизводство;
	СтатьяДоходов = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_СтатьяДоходовПроизводство");
	
	  
КонецПроцедуры

&НаКлиенте
Процедура ТолькоТекущийДеньПриИзменении(Элемент)
	СписокЗаказы.Параметры.УстановитьЗначениеПараметра("ТекущийДень", ТолькоТекущийДень);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПроизводство(Команда)
	ТекДанные = Элементы.СписокЗаказы.ТекущиеДанные;
	Если ТекДанные=Неопределено Тогда
		ПоказатьОповещениеПользователя("Выберите строку с продукцией");
		Возврат;
	КонецЕсли;	
	ДопПараметры = Новый Структура("Номенклатура,Характеристика,ЗаказВПроизводство",ТекДанные.Номенклатура, ТекДанные.Характеристика, ТекДанные.ЗаказПроизводства);
	Оповещение = Новый ОписаниеОповещения("ПослеВводаКоличества", ЭтаФорма,ДопПараметры);

	ПоказатьВводЧисла(Оповещение,ТекДанные.КоличествоОстаток,"Количество производства");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаКоличества(КоличествоПроизведено, ПараметрыОповещения) Экспорт
    Если КоличествоПроизведено = Неопределено Тогда
        Возврат;
	КонецЕсли;
	
	ЗаполнитьДокументНаСервере(КоличествоПроизведено, ПараметрыОповещения.Номенклатура, ПараметрыОповещения.Характеристика, ПараметрыОповещения.ЗаказВПроизводство);
	
	Элементы.СписокЗаказы.Обновить();
	Элементы.СписокПроизведено.Обновить();
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьДокументНаСервере(КоличествоПродукции,пНоменклатура,пХарактеристика, пЗаказВПроизводство) 
    
    Док = Документы.вт_ОтчетПроизводства.СоздатьДокумент();
	
    Док.Организация = пЗаказВПроизводство.Организация;
    
    Док.Подразделение = Подразделение;
    
    Док.Склад = пЗаказВПроизводство.Склад;
    
    Док.СтатьяДоходов = СтатьяДоходов;
    
    Док.ВидОперацииПроизводства = ВидОперацииПроизводства;
    
    Док.АналитикаДоходов = АналитикаДоходов;
    
    Док.ОтразитьВПроизводственномУчете = ИСТИНА;
	
	Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
    Док.Дата = ТекущаяДатаСеанса();
	
	Док.ДокументОснование = пЗаказВПроизводство;  
	
	КодСтроки = 1;
	
	СтрокаТовары = Док.Товары.Добавить();     
	СтрокаТовары.Номенклатура = пНоменклатура;	
	СтрокаТовары.Характеристика = пХарактеристика;
	СтрокаТовары.Количество     = КоличествоПродукции;
	СтрокаТовары.КоличествоПлан = КоличествоПродукции;
	СтрокаТовары.КодСтроки = КодСтроки;
	
	//получим план расхода сырья по заказу
	Запрос = НовыЙ Запрос("ВЫБРАТЬ
	                      |	вт_ЗаказВПроизводствоСырье.Номенклатура КАК Номенклатура,
	                      |	вт_ЗаказВПроизводствоСырье.Характеристика КАК Характеристика,
	                      |	вт_ЗаказВПроизводствоСырье.Количество КАК КоличествоСырья,
	                      |	вт_ЗаказВПроизводствоТовары.Количество КАК КоличествоПродукции,
	                      |	вт_ЗаказВПроизводствоТовары.ВариантПроизводства КАК ВариантПроизводства,
	                      |	вт_ЗаказВПроизводствоТовары.Ссылка.Организация КАК Организация,
	                      |	вт_ЗаказВПроизводствоТовары.Ссылка.Склад КАК Склад
	                      |ИЗ
	                      |	Документ.вт_ЗаказВПроизводство.Товары КАК вт_ЗаказВПроизводствоТовары
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ЗаказВПроизводство.Сырье КАК вт_ЗаказВПроизводствоСырье
	                      |		ПО вт_ЗаказВПроизводствоТовары.Ссылка = вт_ЗаказВПроизводствоСырье.Ссылка
	                      |			И вт_ЗаказВПроизводствоТовары.КлючСтроки = вт_ЗаказВПроизводствоСырье.КлючСвязиСтроки
	                      |ГДЕ
	                      |	вт_ЗаказВПроизводствоСырье.Ссылка = &Ссылка
	                      |	И вт_ЗаказВПроизводствоТовары.Номенклатура = &Номенклатура
	                      |	И вт_ЗаказВПроизводствоТовары.Характеристика = &Характеристика
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	вт_ЗаказВПроизводствоСырье.НомерСтроки");
	
	Запрос.УстановитьПараметр("ссылка",пЗаказВПроизводство);
	Запрос.УстановитьПараметр("Номенклатура",пНоменклатура);
	Запрос.УстановитьПараметр("Характеристика",пХарактеристика);
	ВыборкаСырье = Запрос.Выполнить().Выбрать();
	Пока ВыборкаСырье.Следующий() Цикл
		
		СтрокаТоварыСырье = Док.вт_ПроизводствоСырье.Добавить(); 
		СтрокаТоварыСырье.КлючСвязиСтроки  = КодСтроки; 
		СтрокаТоварыСырье.ГотоваяПродукция = пНоменклатура; 
		
		СтрокаТоварыСырье.Номенклатура = ВыборкаСырье.Номенклатура; 
		СтрокаТоварыСырье.Характеристика = ВыборкаСырье.Характеристика;
		
		НормаРасхода = ВыборкаСырье.КоличествоСырья / ВыборкаСырье.КоличествоПродукции;
		
		СтрокаТоварыСырье.Количество = НормаРасхода * КоличествоПродукции; 
		СтрокаТоварыСырье.КоличествоПлан = СтрокаТоварыСырье.Количество;
	КонецЦикла;
	
	//Заполним ставки для оплаты если есть физ.лицо по ответственному и если заданы ставки
	
	ФизЛицоОтветств = Док.Ответственный.ФизическоеЛицо;
	Если ЗначениеЗаполнено(ФизЛицоОтветств) тогда
		 Док.Записать(РежимЗаписиДокумента.Запись);
		 Док.ЗаполнитьТаблицуТарифовПоСотруднику(ФизЛицоОтветств);
	КонецЕсли;
	
	
    Док.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	

&НаКлиенте
Процедура СписокЗаказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекДанные = Элементы.СписокЗаказы.ТекущиеДанные;
	Если ТекДанные=Неопределено Тогда
		ПоказатьОповещениеПользователя("Выберите строку с продукцией");
		Возврат;
	КонецЕсли;	
	ПоказатьЗначение(,ТекДанные.ЗаказПроизводства);
КонецПроцедуры

&НаКлиенте
Процедура СписокПроизведеноВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекДанные = Элементы.СписокПроизведено.ТекущиеДанные;
	Если ТекДанные=Неопределено Тогда
		ПоказатьОповещениеПользователя("Выберите строку с продукцией");
		Возврат;
	КонецЕсли;	
	ПоказатьЗначение(,ТекДанные.Регистратор);

КонецПроцедуры
