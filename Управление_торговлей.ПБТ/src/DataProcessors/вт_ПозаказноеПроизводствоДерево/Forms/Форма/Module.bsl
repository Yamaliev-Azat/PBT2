&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Счетчик = 1;
	СписокОтбораСтатусВПроизводстве.Добавить(Счетчик,"Незавершенные");
	Для Каждого Метпер Из Метаданные.Перечисления.вт_СтатусыПроизводства.ЗначенияПеречисления Цикл 
		Счетчик = Счетчик + 1;
		СписокОтбораСтатусВПроизводстве.Добавить(Счетчик,Метпер.Синоним);		
	КонецЦикла;	
    //+Маслов
    СписокСвернут = Истина; 
	СформироватьСписокДокументовПроизводства();  
    //-Маслов
КонецПроцедуры
//+Маслов
&НаСервере
Процедура СформироватьСписокДокументовПроизводства(СтатусВПроизводстве=НЕОПРЕДЕЛЕНО, Номенклатура=НЕОПРЕДЕЛЕНО, Клиент=НЕОПРЕДЕЛЕНО)
	
	Перем ВыборкаДетальныеЗаписи, ВыборкаДетальныеЗаписиЗаказ, ВыборкаДетальныеЗаписиПроизводства, ВыборкаДетальныеЗаписиПроизводства1, Запрос, ЗапросЗаказ, ЗапросПроизводства, ЗапросПроизводства1, НоваяСтрокаСписокДокументовПроизводства, НоваяСтрокаСписокДокументовПроизводстваЗаказ, НоваяСтрокаСписокДокументовПроизводстваПроизводство, НоваяСтрокаСписокДокументовПроизводстваПроизводство1, ОбСписокДокументовПроизводства, РезультатЗапроса, РезультатЗапросаЗаказ, РезультатЗапросаПроизводства, РезультатЗапросаПроизводства1;
	
    ОбСписокДокументовПроизводства = РеквизитФормыВЗначение("Список");
    ОбСписокДокументовПроизводства.Строки.Очистить();
    Запрос = Новый Запрос;
    ТекстУсловиеСтатусВПроизводстве = "";
	Если СтатусВПроизводстве <> НЕОПРЕДЕЛЕНО  И ЗначениеЗаполнено(ОтборСтатусВПроизводстве) тогда // 
        Если СтатусВПроизводстве="Незавершенные" Тогда
        	ТекстУсловиеСтатусВПроизводстве = "
        	|	И вт_СтатусыОснованийЗаказовВПроизводствоСрезПоследних.Статус <>  ЗНАЧЕНИЕ(Перечисление.вт_СтатусыПроизводства.Завершено)";
		Иначе 
        	ТекстУсловиеСтатусВПроизводстве = "
        	|	И вт_СтатусыОснованийЗаказовВПроизводствоСрезПоследних.Статус =  ЗНАЧЕНИЕ("+СтатусВПроизводстве+")";
		КонецЕсли;
	КонецЕсли;
    ТекстУсловиеНоменклатура = "";
    Если Номенклатура<>НЕОПРЕДЕЛЕНО И ЗначениеЗаполнено(Номенклатура) Тогда
    	ТекстУсловиеНоменклатура = "
    	|	И ЗаказКлиентаТовары.Номенклатура = &Номенклатура";
    	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    КонецЕсли;
    ТекстУсловиеКлиент = "";
    Если Клиент<>НЕОПРЕДЕЛЕНО И ЗначениеЗаполнено(Клиент) Тогда
    	ТекстУсловиеКлиент = "
    	|	И ЗаказКлиента.Партнер = &Клиент";
    	Запрос.УстановитьПараметр("Клиент", Клиент);
    КонецЕсли;
	Запрос.Текст = 
       "ВЫБРАТЬ
       |    ОсновнаяТаблица.Ссылка КАК Ссылка,
       |    МИНИМУМ(ВЫБОР
       |            КОГДА ВложенныйЗапрос.ОстатокКолво = 0
       |                ТОГДА ЗНАЧЕНИЕ(Перечисление.вт_СтатусыПроизводства.Завершено)
       |            ИНАЧЕ ОсновнаяТаблица.СтатусПроизводства
       |        КОНЕЦ) КАК СтатусПроизводства,
       |    ОсновнаяТаблица.СтатусЗаказа КАК СтатусЗаказа,
       |    ОсновнаяТаблица.Партнер КАК Партнер,
       |    ОсновнаяТаблица.Организация КАК Организация,
       |    СУММА(ОсновнаяТаблица.СуммаДокумента) КАК СуммаДокумента,
       |    ОсновнаяТаблица.Комментарий КАК Комментарий,
       |    ОсновнаяТаблица.Автор КАК Автор,
       |    ОсновнаяТаблица.ЗаказВПроизводство КАК ЗаказВПроизводство,
       |    СУММА(ОсновнаяТаблица.СуммаПоТовару) КАК СуммаПоТовару,
       |    СУММА(ВложенныйЗапрос.ЗапланированоКолво) КАК ЗапланированоКолво,
       |    СУММА(ВложенныйЗапрос.ПроизведеноКолво) КАК ПроизведеноКолво,
       |    СУММА(ВложенныйЗапрос.ОстатокКолво) КАК ОстатокКолво,
       |    ВложенныйЗапрос.Номенклатура КАК Номенклатура,
       |    100 * (ВложенныйЗапрос.ПроизведеноКолво / ВЫБОР
       |        КОГДА ВложенныйЗапрос.ЗапланированоКолво > 0
       |            ТОГДА ВложенныйЗапрос.ЗапланированоКолво
       |        ИНАЧЕ 1
       |    КОНЕЦ) КАК ВыполненоПроцент,
       |    ОсновнаяТаблица.Ссылка.Номер КАК Номер
       |ИЗ
       |    (ВЫБРАТЬ
       |        ЗаказКлиента.Ссылка КАК Ссылка,
       |        вт_СтатусыОснованийЗаказовВПроизводствоСрезПоследних.Статус КАК СтатусПроизводства,
       |        ЗаказКлиента.Статус КАК СтатусЗаказа,
       |        ЗаказКлиента.Партнер КАК Партнер,
       |        ЗаказКлиента.Организация КАК Организация,
       |        ЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
       |        ВЫРАЗИТЬ(ЗаказКлиента.Комментарий КАК СТРОКА(100)) КАК Комментарий,
       |        ЗаказКлиента.Автор КАК Автор,
       |        вт_СтатусыОснованийЗаказовВПроизводствоСрезПоследних.ЗаказВПроизводство КАК ЗаказВПроизводство,
       |        СУММА(ЗаказКлиентаТовары.СуммаСНДС) КАК СуммаПоТовару,
       |        ЗаказКлиентаТовары.Номенклатура КАК Номенклатура
       |    ИЗ
       |        Документ.ЗаказКлиента КАК ЗаказКлиента
       |            ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.вт_СтатусыОснованийЗаказовВПроизводство.СрезПоследних КАК вт_СтатусыОснованийЗаказовВПроизводствоСрезПоследних
       |            	ПО ЗаказКлиента.Ссылка = вт_СтатусыОснованийЗаказовВПроизводствоСрезПоследних.Основание
	   |            ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказовКлиентов КАК СостоянияЗаказовКлиентов
	   |            	ПО (СостоянияЗаказовКлиентов.Заказ = ЗаказКлиента.Ссылка)
       |            ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
       |            ПО ЗаказКлиента.Ссылка = ЗаказКлиентаТовары.Ссылка
       |    ГДЕ
       |        ЗаказКлиента.Проведен = ИСТИНА
	   |        И СостоянияЗаказовКлиентов.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовКлиентов.Закрыт) 
       |        И ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт) "+ТекстУсловиеСтатусВПроизводстве+ТекстУсловиеНоменклатура+ТекстУсловиеКлиент+"
        //|	И &ДополнительныеУсловия
       |    
       |    СГРУППИРОВАТЬ ПО
       |        ЗаказКлиента.Ссылка,
       |        вт_СтатусыОснованийЗаказовВПроизводствоСрезПоследних.Статус,
       |        ЗаказКлиента.Статус,
       |        ЗаказКлиента.Партнер,
       |        ЗаказКлиента.Организация,
       |        ЗаказКлиента.СуммаДокумента,
       |        ВЫРАЗИТЬ(ЗаказКлиента.Комментарий КАК СТРОКА(100)),
       |        ЗаказКлиента.Автор,
       |        вт_СтатусыОснованийЗаказовВПроизводствоСрезПоследних.ЗаказВПроизводство,
       |        ЗаказКлиентаТовары.Номенклатура) КАК ОсновнаяТаблица
       |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
       |            МИНИМУМ(вт_ЗаказВПроизводствоОстаткиИОбороты.ЗаказПроизводства) КАК ЗаказПроизводства,
       |            СУММА(вт_ЗаказВПроизводствоОстаткиИОбороты.КоличествоПриход) КАК ЗапланированоКолво,
       |            СУММА(вт_ЗаказВПроизводствоОстаткиИОбороты.КоличествоРасход) КАК ПроизведеноКолво,
       |            СУММА(вт_ЗаказВПроизводствоОстаткиИОбороты.КоличествоКонечныйОстаток) КАК ОстатокКолво,
       |            вт_ЗаказВПроизводствоОстаткиИОбороты.Номенклатура КАК Номенклатура,
       |            вт_ЗаказВПроизводствоОстаткиИОбороты.ЗаказПроизводства.ДокументОснование КАК ЗаказПроизводстваДокументОснование
       |        ИЗ
       |            РегистрНакопления.вт_ЗаказВПроизводство.ОстаткиИОбороты КАК вт_ЗаказВПроизводствоОстаткиИОбороты
       |        
       |        СГРУППИРОВАТЬ ПО
       |            вт_ЗаказВПроизводствоОстаткиИОбороты.Номенклатура,
       |            вт_ЗаказВПроизводствоОстаткиИОбороты.ЗаказПроизводства.ДокументОснование) КАК ВложенныйЗапрос
       |        ПО ОсновнаяТаблица.ЗаказВПроизводство = ВложенныйЗапрос.ЗаказПроизводства
       |            И (ВложенныйЗапрос.Номенклатура = ОсновнаяТаблица.Номенклатура)
       |
       |СГРУППИРОВАТЬ ПО
       |    ОсновнаяТаблица.Автор,
       |    ОсновнаяТаблица.ЗаказВПроизводство,
       |    ОсновнаяТаблица.СтатусЗаказа,
       |    ОсновнаяТаблица.Ссылка,
       |    ВложенныйЗапрос.Номенклатура,
       |    ОсновнаяТаблица.Организация,
       |    ОсновнаяТаблица.Партнер,
       |    ОсновнаяТаблица.Комментарий,
       |    100 * (ВложенныйЗапрос.ПроизведеноКолво / ВЫБОР
       |        КОГДА ВложенныйЗапрос.ЗапланированоКолво > 0
       |            ТОГДА ВложенныйЗапрос.ЗапланированоКолво
       |        ИНАЧЕ 1
       |    КОНЕЦ)";
        
    РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	ВыборкаЗаказВПроизводство = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка) Тогда  //ЗаказВПроизводство
			НоваяСтрокаСписокДокументовПроизводства = ОбСписокДокументовПроизводства.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСписокДокументовПроизводства, ВыборкаДетальныеЗаписи);
            НоваяСтрокаСписокДокументовПроизводства.ТребуемаяДата = ВыборкаДетальныеЗаписи.ЗаказВПроизводство.ТребуемаяДата;
            Если НЕ ЗначениеЗаполнено(НоваяСтрокаСписокДокументовПроизводства.Дата) Тогда
                НоваяСтрокаСписокДокументовПроизводства.Дата = ВыборкаДетальныеЗаписи.Ссылка.Дата;
            КонецЕсли;	
            //Если НЕ ЗначениеЗаполнено(НоваяСтрокаСписокДокументовПроизводства.ЗаказВПроизводство) Тогда
            //    НоваяСтрокаСписокДокументовПроизводства.ТребуемаяДата =  НоваяСтрокаСписокДокументовПроизводства.Дата;
            //КонецЕсли;	
            СформироватьСписокПодчиненныхЗаказовВПроизводство(ВыборкаДетальныеЗаписи, Запрос, НоваяСтрокаСписокДокументовПроизводства);
		КонецЕсли;	
	КонецЦикла;
	ЗначениеВРеквизитФормы(ОбСписокДокументовПроизводства, "Список");
КонецПроцедуры

&НаСервере
Процедура СформироватьСписокПодчиненныхЗаказовВПроизводство(Знач ВыборкаДетальныеЗаписи, Знач Запрос, Знач ОбСписокДокументовПроизводства)
	
	Перем ВыборкаДетальныеЗаписиЗаказ, ВыборкаДетальныеЗаписиПроизводства, ВыборкаДетальныеЗаписиПроизводства1, ЗапросЗаказ, ЗапросПроизводства, ЗапросПроизводства1, НоваяСтрокаСписокДокументовПроизводства, НоваяСтрокаСписокДокументовПроизводстваЗаказ, НоваяСтрокаСписокДокументовПроизводстваПроизводство, НоваяСтрокаСписокДокументовПроизводстваПроизводство1, РезультатЗапросаЗаказ, РезультатЗапросаПроизводства, РезультатЗапросаПроизводства1;
	
	Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка) Тогда
		//заполним подчиненными заказами производства
		ЗапросЗаказ = Новый Запрос;
		ЗапросЗаказ.Текст = 
        "ВЫБРАТЬ
		|	вт_ЗаказВПроизводство.Ссылка КАК Ссылка,
        |	вт_ЗаказВПроизводство.Ссылка КАК ЗаказВПроизводство,
        |	вт_ЗаказВПроизводство.Номер КАК Номер,
        |	вт_ЗаказВПроизводство.Дата КАК Дата,
        |	вт_ЗаказВПроизводство.Проведен КАК Проведен,
        |	вт_ЗаказВПроизводство.Организация КАК Организация,
        |	вт_ЗаказВПроизводство.Партнер КАК Партнер,
        |	вт_ЗаказВПроизводство.Контрагент КАК Контрагент,
        |	естьnull(вт_СтатусыЗаказовВПроизводство.Статус,вт_ЗаказВПроизводство.СтатусПроизводства) КАК СтатусПроизводства,
		|	естьnull(вт_СтатусыЗаказовВПроизводство.Статус,вт_ЗаказВПроизводство.СтатусПроизводства) КАК СтатусЗаказа,
        |	вт_ЗаказВПроизводство.Автор КАК Автор,
        |	вт_ЗаказВПроизводство.ДокументОснование КАК ДокументОснование,
        |	вт_ЗаказВПроизводство.Комментарий КАК Комментарий,
        |	вт_ЗаказВПроизводство.ДокументОснование.Дата КАК ДокументОснованиеДата,
        |	вт_ЗаказВПроизводство.ЗаказВПроизводство КАК ЗаказВПроизводствоОснование,
		|	&Номенклатура КАК Номенклатура
        |ИЗ
        |	Документ.вт_ЗаказВПроизводство КАК вт_ЗаказВПроизводство
		|	 ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.вт_СтатусыЗаказовВПроизводство.СрезПоследних КАК вт_СтатусыЗаказовВПроизводство
        |            ПО вт_СтатусыЗаказовВПроизводство.ЗаказВПроизводство = вт_ЗаказВПроизводство.Ссылка
        |ГДЕ
        |	вт_ЗаказВПроизводство.ДокументОснование = &ДокументОснование
        |	И вт_ЗаказВПроизводство.Ссылка = &ЗаказВПроизводство
        |	И вт_ЗаказВПроизводство.Товары.Номенклатура = &Номенклатура";
		ЗапросЗаказ.УстановитьПараметр("ДокументОснование", ВыборкаДетальныеЗаписи.Ссылка);
		ЗапросЗаказ.УстановитьПараметр("ЗаказВПроизводство", ВыборкаДетальныеЗаписи.ЗаказВПроизводство);			
		ЗапросЗаказ.УстановитьПараметр("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);			
		
		РезультатЗапросаЗаказ = ЗапросЗаказ.Выполнить();			
		ВыборкаДетальныеЗаписиЗаказ = РезультатЗапросаЗаказ.Выбрать();			
		Пока ВыборкаДетальныеЗаписиЗаказ.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписиЗаказ.ЗаказВПроизводство) Тогда
				НоваяСтрокаСписокДокументовПроизводстваЗаказ = ОбСписокДокументовПроизводства.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСписокДокументовПроизводстваЗаказ, ВыборкаДетальныеЗаписиЗаказ);
                //Если НЕ ЗначениеЗаполнено(НоваяСтрокаСписокДокументовПроизводстваЗаказ.ЗаказВПроизводство) Тогда
                НоваяСтрокаСписокДокументовПроизводстваЗаказ.Дата = НоваяСтрокаСписокДокументовПроизводстваЗаказ.ЗаказВПроизводство;
                НоваяСтрокаСписокДокументовПроизводстваЗаказ.ТребуемаяДата = НоваяСтрокаСписокДокументовПроизводстваЗаказ.Дата.ТребуемаяДата;
				НоваяСтрокаСписокДокументовПроизводстваЗаказ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				//	ЗаполнитьЗначенияСвойств(НоваяСтрокаСписокДокументовПроизводстваЗаказ, ВыборкаДетальныеЗаписиЗаказ);
                //	//заполним подчиненными документами производства
                //    СформироватьСписокПодчиненныхДокументовПроизводства(ВыборкаДетальныеЗаписиЗаказ, Запрос, НоваяСтрокаСписокДокументовПроизводстваЗаказ);				
                //КонецЕсли;	
				//заполним подчиненными документами производства
                СформироватьСписокПодчиненныхДокументовПроизводства(ВыборкаДетальныеЗаписиЗаказ, Запрос, НоваяСтрокаСписокДокументовПроизводстваЗаказ);				
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СформироватьСписокПодчиненныхДокументовПроизводства(Знач ВыборкаДетальныеЗаписи, Знач Запрос, Знач ОбСписокДокументовПроизводства)
	
	Перем ВыборкаДетальныеЗаписиЗаказ, ВыборкаДетальныеЗаписиПроизводства, ВыборкаДетальныеЗаписиПроизводства1, ЗапросЗаказ, ЗапросПроизводства, ЗапросПроизводства1, НоваяСтрокаСписокДокументовПроизводства, НоваяСтрокаСписокДокументовПроизводстваЗаказ, НоваяСтрокаСписокДокументовПроизводстваПроизводство, НоваяСтрокаСписокДокументовПроизводстваПроизводство1, РезультатЗапросаЗаказ, РезультатЗапросаПроизводства, РезультатЗапросаПроизводства1;
	
	Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЗаказВПроизводство) Тогда
		//заполним подчиненными документами производства
		ЗапросПроизводства = Новый Запрос;
		ЗапросПроизводства.Текст = 
          "ВЫБРАТЬ
		  |	вт_ОтчетПроизводства.Ссылка КАК Ссылка,
		  |	вт_ОтчетПроизводства.Ссылка КАК ЗаказВПроизводство,
          |	вт_ОтчетПроизводства.Ссылка.Номер КАК Номер,
          |	вт_ОтчетПроизводства.Ссылка.Дата КАК Дата,
          |	вт_ОтчетПроизводства.Ссылка.Проведен КАК Проведен,
          |	вт_ОтчетПроизводства.Ссылка.Организация КАК Организация,
          |	вт_ОтчетПроизводства.Ссылка.Партнер КАК Партнер,
          |	вт_ОтчетПроизводства.Ссылка.ДокументОснование КАК ДокументОснование,
          |	вт_ОтчетПроизводства.Ссылка.ДокументОснование.ТребуемаяДата КАК ТребуемаяДата,
		  |	вт_ОтчетПроизводства.Номенклатура КАК Номенклатура 
          |ИЗ
          |	Документ.вт_ОтчетПроизводства.Товары КАК вт_ОтчетПроизводства
          |ГДЕ
          |	вт_ОтчетПроизводства.Ссылка.ДокументОснование = &ДокументОснование
          |	И вт_ОтчетПроизводства.Номенклатура = &Номенклатура";
		
       	ЗапросПроизводства.УстановитьПараметр("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);					
		ЗапросПроизводства.УстановитьПараметр("ДокументОснование", ВыборкаДетальныеЗаписи.ЗаказВПроизводство);			
		РезультатЗапросаПроизводства = ЗапросПроизводства.Выполнить();			
		ВыборкаДетальныеЗаписиПроизводства = РезультатЗапросаПроизводства.Выбрать();			
		Пока ВыборкаДетальныеЗаписиПроизводства.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписиПроизводства.ЗаказВПроизводство) Тогда
				НоваяСтрокаСписокДокументовПроизводстваПроизводство = ОбСписокДокументовПроизводства.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСписокДокументовПроизводстваПроизводство, ВыборкаДетальныеЗаписиПроизводства);
                НоваяСтрокаСписокДокументовПроизводстваПроизводство.Дата = ВыборкаДетальныеЗаписиПроизводства.ЗаказВПроизводство;
                //НоваяСтрокаСписокДокументовПроизводстваЗаказ.ТребуемаяДата = НоваяСтрокаСписокДокументовПроизводстваЗаказ.Дата.ТребуемаяДата;
			КонецЕсли;	
		КонецЦикла;
		//заполним подчиненными заказами производства
		ЗапросЗаказ = Новый Запрос;
		ЗапросЗаказ.Текст = "ВЫБРАТЬ
		                    |   вт_ЗаказВПроизводство.Ссылка КАК Ссылка,
							|   вт_ЗаказВПроизводство.Ссылка КАК ЗаказВПроизводство,
                            |   вт_ЗаказВПроизводство.Ссылка.Номер КАК Номер,
                            |   вт_ЗаказВПроизводство.Ссылка.Дата КАК Дата,
                            |   вт_ЗаказВПроизводство.Ссылка.Проведен КАК Проведен,
                            |   вт_ЗаказВПроизводство.Ссылка.Организация КАК Организация,
                            |   вт_ЗаказВПроизводство.Ссылка.Партнер КАК Партнер,
                            |   вт_ЗаказВПроизводство.Ссылка.Контрагент КАК Контрагент,
                            |   естьnull(вт_СтатусыЗаказовВПроизводство.Статус, вт_ЗаказВПроизводство.Ссылка.СтатусПроизводства) КАК СтатусПроизводства,
							|   естьnull(вт_СтатусыЗаказовВПроизводство.Статус, вт_ЗаказВПроизводство.Ссылка.СтатусПроизводства) КАК СтатусЗаказа,
                            |   вт_ЗаказВПроизводство.Ссылка.Автор КАК Автор,
                            |   вт_ЗаказВПроизводство.Ссылка.ДокументОснование КАК ДокументОснование,
                            |   вт_ЗаказВПроизводство.Ссылка.Комментарий КАК Комментарий,
                            |   вт_ЗаказВПроизводство.Ссылка.ДокументОснование.Дата КАК ДокументОснованиеДата,
							|   вт_ЗаказВПроизводство.Номенклатура КАК Номенклатура
                            |ИЗ
                            |   Документ.вт_ЗаказВПроизводство.Товары КАК вт_ЗаказВПроизводство
							|	 ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.вт_СтатусыЗаказовВПроизводство.СрезПоследних КАК вт_СтатусыЗаказовВПроизводство
							|            ПО вт_СтатусыЗаказовВПроизводство.ЗаказВПроизводство = вт_ЗаказВПроизводство.Ссылка
                            |ГДЕ
                            |   вт_ЗаказВПроизводство.Ссылка.ЗаказВПроизводство = &ДокументОснование";
		ЗапросЗаказ.УстановитьПараметр("ДокументОснование", ВыборкаДетальныеЗаписи.ЗаказВПроизводство);			
		РезультатЗапросаЗаказ = ЗапросЗаказ.Выполнить();			
		ВыборкаДетальныеЗаписиЗаказ = РезультатЗапросаЗаказ.Выбрать();			
		Пока ВыборкаДетальныеЗаписиЗаказ.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписиЗаказ.ЗаказВПроизводство) Тогда
				НоваяСтрокаСписокДокументовПроизводстваЗаказ = ОбСписокДокументовПроизводства.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСписокДокументовПроизводстваЗаказ, ВыборкаДетальныеЗаписиЗаказ);
                НоваяСтрокаСписокДокументовПроизводстваЗаказ.Дата = НоваяСтрокаСписокДокументовПроизводстваЗаказ.ЗаказВПроизводство;
                НоваяСтрокаСписокДокументовПроизводстваЗаказ.ТребуемаяДата = НоваяСтрокаСписокДокументовПроизводстваЗаказ.Дата.ТребуемаяДата;
				//заполним подчиненными документами производства
				СформироватьСписокПодчиненныхДокументовПроизводства(ВыборкаДетальныеЗаписиЗаказ, Запрос, НоваяСтрокаСписокДокументовПроизводстваЗаказ);				
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

//-Маслов
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого мСтатус Из СписокОтбораСтатусВПроизводстве Цикл
		Элементы.ОтборСтатусВПроизводстве.СписокВыбора.Добавить(мСтатус.Значение,мСтатус.Представление);			
	КонецЦикла;	
	
	//Элементы.ОтборСтатусВПроизводстве.СписокВыбора.Добавить(1,ПредопределенноеЗначение("Перечисление.вт_СтатусыПроизводства.ВПроизводстве"));
	//Элементы.ОтборСтатусВПроизводстве.СписокВыбора.Добавить(2,ПредопределенноеЗначение("Перечисление.вт_СтатусыПроизводства.Ожидание"));
	//Элементы.ОтборСтатусВПроизводстве.СписокВыбора.Добавить(3,ПредопределенноеЗначение("Перечисление.вт_СтатусыПроизводства.Завершено"));
	//Элементы.ОтборСтатусВПроизводстве.СписокВыбора.Добавить(4,ПредопределенноеЗначение("Перечисление.вт_СтатусыПроизводства.Отменено"));
	//Элементы.ОтборСтатусВПроизводстве.СписокВыбора.Добавить(5,"Незавершенные");
КонецПроцедуры

&НаКлиенте
Процедура ОтборСтатусВПроизводствеПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОтборСтатусВПроизводстве) тогда
		Если ОтборСтатусВПроизводстве = 1 ИЛИ ОтборСтатусВПроизводстве = НЕОпределено Тогда
			ОтобратьНезавершенные();
		Иначе 
			ОтобратьПоСтатусу(ОтборСтатусВПроизводстве); 
		КонецЕсли;
	Иначе
	 	ОчиститьОтбор();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтобратьНезавершенные()
//+Маслов
	СформироватьСписокДокументовПроизводства("Незавершенные",ОтборНоменклатура,ОтборКлиент);  
//-Маслов
КонецПроцедуры	

&НаСервере
Процедура ОтобратьПоСтатусу(ЗначениеВЫбора)
//+Маслов
	Счетчик = 2;
	Для Каждого Метпер Из Метаданные.Перечисления.вт_СтатусыПроизводства.ЗначенияПеречисления Цикл 
        Если ЗначениеВыбора = Счетчик Тогда
            СформироватьСписокДокументовПроизводства("Перечисление.вт_СтатусыПроизводства."+Метпер.Имя, ОтборНоменклатура, ОтборКлиент);  
//-Маслов
			Прервать;
		КонецЕсли;	
		Счетчик = Счетчик + 1;		
	 КонецЦикла;	
КонецПроцедуры	

&НаСервере
Процедура ОчиститьОтбор()
    СформироватьСписокДокументовПроизводства(, ОтборНоменклатура, ОтборКлиент);  
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "СписокСсылкаНомер" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Ссылка);
	ИначеЕсли Поле.Имя = "СписокНоменклатура" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Номенклатура);
	ИначеЕсли Поле.Имя = "СписокПартнер" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.Партнер);
	ИначеЕсли Поле.Имя = "СписокСтатусПроизводства" ИЛИ Поле.Имя = "СписокЗаказВПроизводствоТребуемаяДата" ИЛИ Поле.Имя = "СписокВыполненоПроцент" тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.ЗаказВПроизводство);
    КонецЕсли;
//+Маслов
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущаяСтрока.Ссылка) Тогда
		ПоказатьЗначение(, ТекущаяСтрока.Ссылка);
    ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.Дата) Тогда
		ПоказатьЗначение(, ТекущаяСтрока.Дата);
    КонецЕсли;
//-Маслов
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменитьОтбор(Команда)
    ОтборСтатусВПроизводстве=НЕОПРЕДЕЛЕНО; ОтборНоменклатура=НЕОПРЕДЕЛЕНО; ОтборКлиент=НЕОПРЕДЕЛЕНО;

 	ОчиститьОтбор();	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьОтборКСписку(Элемент)
	Если ЗначениеЗаполнено(ОтборСтатусВПроизводстве) тогда
		Если ОтборСтатусВПроизводстве = 1 ИЛИ ОтборСтатусВПроизводстве = НЕОпределено Тогда
			ОтобратьНезавершенные();
		Иначе 
			ОтобратьПоСтатусу(ОтборСтатусВПроизводстве); 
		КонецЕсли;
	Иначе
	 	ОчиститьОтбор();	
	КонецЕсли;
КонецПроцедуры
	
&НаКлиенте
Процедура СвернутьРазвернуть(Команда)
	Если СписокСвернут Тогда
		РазвернутьСписокДокументовПроизводства();
		СписокСвернут = Ложь;
	Иначе
		СвернутьСписокДокументовПроизводства();
		СписокСвернут = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСписокДокументовПроизводства()
	
	Перем ИдентификаторСтроки, КоллекцияЭлементовДерева, Строка;
	
	КоллекцияЭлементовДерева=Список.ПолучитьЭлементы();
	//Развернуть дерево 
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		Элементы.Список.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьСписокДокументовПроизводства()
	
	Перем ИдентификаторСтроки, КоллекцияЭлементовДерева, Строка;
	
	КоллекцияЭлементовДерева=Список.ПолучитьЭлементы();
	//Развернуть дерево 
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		Элементы.Список.Свернуть(ИдентификаторСтроки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновить(Команда)
	ОчиститьОтбор();
КонецПроцедуры
