
&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	Объект.Дата = ТекущаяДата();
	Объект.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
    
    ОбработатьВидимостьРецептуры(РежимЗаполнения);

КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Очистка();	
КонецПроцедуры

&НаСервере
Процедура вт_ВыполнитьНаСервере()
	//Создаем и заполняем основные реквизиты документа
	оп = Документы.вт_ОтчетПроизводства.СоздатьДокумент();
	оп.Дата = ТекущаяДата();
	оп.Ответственный = Объект.Ответственный;
	Если ЗначениеЗаполнено(Объект.Склад) Тогда 
		оп.Склад = Объект.Склад;		
	Иначе
		оп.Склад = Склад;
	КонецЕсли;
	оп.СменаБригада = Объект.СменаБригада;
	оп.СтатьяДоходов = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_СтатьяДоходовПроизводство");
	оп.Организация = Организация;
	оп.Подразделение = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ПодразделениеПроизводства");
	оп.ВидОперацииПроизводства = Перечисления.вт_ВидыОперацийПроизводства.СобственноеПроизводство;
    оп.ОтразитьВРеглУчете = Объект.ОтразитьВРеглУчете;
	оп.ОтразитьВПроизводственномУчете = Объект.ОтразитьВПроизводственномУчете;
	//Заполняем оборудование
	Если ЗначениеЗаполнено(Объект.Оборудование) тогда
		СтрокаОборудование = оп.вт_ОборудованиеПроизводства.Добавить();
		СтрокаОборудование.Оборудование = Объект.Оборудование;
		СтрокаОборудование.КодСтроки = 1;
	КонецЕсли;
	//Заполняем товары
	СтрокаТовары = оп.Товары.Добавить();
	СтрокаТовары.Номенклатура = Объект.ГотоваяПродукция;
	СтрокаТовары.Характеристика = Объект.Характеристика;
	СтрокаТовары.Количество = Объект.Количество;
	СтрокаТовары.КоличествоПлан = Объект.Количество;
	СтрокаТовары.БракКолВо = Объект.КоличествоБрак;
	Если ЗначениеЗаполнено(Объект.Оборудование) тогда
		СтрокаТовары.Оборудование = СтрокаОборудование.Оборудование;
		СтрокаТовары.КлючСвязиОборудования = СтрокаОборудование.КодСтроки;
	КонецЕсли;
	СтрокаТовары.ВариантПроизводства = ПолучитьВариантГотовойПродукции(СтрокаТовары.Номенклатура);
	СтрокаТовары.МатериалОтхода = ПолучитьЗначениеРеквизитаОбъекта(СтрокаТовары.ВариантПроизводства,"МатералЛитника");
	СтрокаТовары.Цена  = 1;
	СтрокаТовары.Сумма = СтрокаТовары.Цена * СтрокаТовары.Количество;
	//втЗаполнитьБракДробленкаПоСпецификацииСервер(СтрокаТовары.КодСтроки, СтрокаТовары.Номенклатура, СтрокаТовары.ВариантПроизводства, СтрокаТовары.КоличествоПлан, ОП);
	СтрокаТовары.НоменклатураБрака = ПолучитьНоменклатуруБракаНаСервере(СтрокаТовары.ВариантПроизводства);
	//(СтрокаТовары.КодСтроки, СтрокаТовары.ВариантПроизводства, СтрокаТовары.КоличествоПлан, СтрокаТовары.БракКолВо, ИСТИНА, ОП);
	
	Для каждого СТР_Сырье из Сырье Цикл 
		
		СтрокаНовая = ОП.вт_ПроизводствоСырье.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНовая, СТР_Сырье);
		СтрокаНовая.ГотоваяПродукция = Объект.ГотоваяПродукция;
		
	КонецЦикла;
	
	Для каждого СТР_Отход из Отходы Цикл 
		
		СтрокаНовая = ОП.вт_БракДробленка.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНовая, СТР_Отход);
		СтрокаНовая.ГотоваяПродукция = Объект.ГотоваяПродукция;
		СтрокаНовая.Дробленка = СТР_Отход.Номенклатура;
		
	КонецЦикла;
	
	//Заполняем время в оборудовании, путем расчета через количество выпущенной продукции
	Если ЗначениеЗаполнено(Объект.Оборудование) тогда
		СтрокаОборудование.ВремяОкончанияРаботы = дата('00010101') + (оп.Дата-НачалоДня(оп.Дата));
		Если ЗначениеЗаполнено(СтрокаТовары.ВариантПроизводства.ВремяПроизводстваСек) тогда
			ВремяДляВыпускаПродукции = Объект.Количество / СтрокаТовары.ВариантПроизводства.Количество * СтрокаТовары.ВариантПроизводства.ВремяПроизводстваСек
		ИначеЕсли ЗначениеЗаполнено(СтрокаТовары.ВариантПроизводства.ВремяПроизводстваЧас) тогда
			ВремяДляВыпускаПродукции = (Объект.Количество / СтрокаТовары.ВариантПроизводства.Количество * СтрокаТовары.ВариантПроизводства.ВремяПроизводстваЧас) * 3600
		Иначе
			ВремяДляВыпускаПродукции = 3600;
		КонецЕсли;
		СтрокаОборудование.ВремяНачалаРаботы = СтрокаОборудование.ВремяОкончанияРаботы - ВремяДляВыпускаПродукции;
	КонецЕсли;
	оп.Записать();
	Сообщить("Создан документ " + оп.Ссылка);
	Попытка
		оп.Записать(РежимЗаписиДокумента.Проведение);		
	Исключение
		Сообщить("Документ не провелся");	
	КонецПопытки;
	Очистка();
КонецПроцедуры

&НаКлиенте
Процедура вт_Выполнить(Команда)
    
    Если не ЗначениеЗаполнено(Объект.ГотоваяПродукция) тогда
        Сообщить("Заполните Готовую продукцию");	
        Возврат;
	КонецЕсли;
	Если не ЗначениеЗаполнено(Объект.Склад) тогда
        Сообщить("Заполните Склад");	
        Возврат;
    КонецЕсли;
    Если не ЗначениеЗаполнено(Объект.Количество) тогда
        Сообщить("Заполните Количество");	
        Возврат;
    КонецЕсли;
    
    Если НЕ Объект.ОтразитьВРеглУчете И НЕ Объект.ОтразитьВПроизводственномУчете Тогда
        Сообщить("Заполните отражение в производственном и регламентном учете");	
        Возврат;
    КонецЕсли; 
    
    Если ЗначениеЗаполнено(Объект.ГотоваяПродукция) и ЗначениеЗаполнено(Объект.Количество) тогда
        Если НЕ ПроверкаНаСозданныйДокумент() тогда 
            вт_ВыполнитьНаСервере();
        Иначе
            ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьСозданиеДокумента", ЭтотОбъект),
            "Документ с такими данными за сегодняшний день уже создан, Создать еще?", РежимДиалогаВопрос.ДаНет);	
        КонецЕсли;
    КонецЕсли;
    
    СохранитьНастройкиДляПользователя();
    
    Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСозданиеДокумента(РезультатВопроса, ПараметрыЗаписи) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		вт_ВыполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеРеквизитаОбъекта(СсылкаОб, ИмяРеквизита)
	Возврат СсылкаОб[ИмяРеквизита];
КонецФункции

&НаСервере
Функция ПолучитьВариантГотовойПродукции(Номенклатура)
	Возврат вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(Номенклатура).Ссылка;	
КонецФункции

&НаСервере
Процедура втЗаполнитьБракДробленкаПоСпецификацииСервер(КодСтроки, ГотоваяПродукция, ВариантПроизводства, КоличествоПлан, ОП)
	
	//Загружаем новые данные по этой номенклатура
	Для Каждого СтрокаОтходы из ВариантПроизводства.Отходы Цикл
		ОтборПоСырье = Новый Структура("Дробленка, ГотоваяПродукция, КлючСвязиСтроки", СтрокаОтходы.Номенклатура, ГотоваяПродукция, КодСтроки);
		НайденыСтрокиСырье = ОП.вт_БракДробленка.НайтиСтроки(ОтборПоСырье);
		Если НайденыСтрокиСырье.количество()=0  Тогда
			СтрокаНовая = ОП.вт_БракДробленка.Добавить();
			СтрокаНовая.ГотоваяПродукция = ГотоваяПродукция;
			СтрокаНовая.Дробленка = СтрокаОтходы.Номенклатура;
			СтрокаНовая.Количество = Объект.КоличествоБрак;
			СтрокаНовая.КлючСвязиСтроки = КодСтроки;
		Иначе                                      
			Для каждого ПозицияНайденоСырье из НайденыСтрокиСырье  Цикл
				ПозицияНайденоСырье.ГотоваяПродукция = ГотоваяПродукция;
				ПозицияНайденоСырье.Дробленка = СтрокаОтходы.Номенклатура;
				ПозицияНайденоСырье.Количество = КоличествоПлан*СтрокаОтходы.Количество;
				ПозицияНайденоСырье.КлючСвязиСтроки = КодСтроки;
			КонецЦикла;	 
		КонецЕсли;		 		 
	КонецЦикла;
	
КонецПроцедуры	


Процедура втЗаполнитьСырьеСервер(КодСтроки, втВариант, втКоличество, втКоличествоБрак, ОчищатьСырье, ОП)
	 
	 Запрос = Новый Запрос("ВЫБРАТЬ
	 |	вт_ВариантыПроизводстваПоТехКартамСостав.Сырье КАК Номенклатура,
     |	вт_ВариантыПроизводстваПоТехКартамСостав.Характеристика,
	 |	выбор когда вт_ВариантыПроизводстваПоТехКартамСостав.СписыватьПоВсегоИзготовлено тогда
	 |     вт_ВариантыПроизводстваПоТехКартамСостав.Количество * &Количество / вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка.Количество  
	 |  иначе
	 |     вт_ВариантыПроизводстваПоТехКартамСостав.Количество * (&Количество-&КоличествоБрак) / вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка.Количество 
	 |  конец КАК Количество,
	 |	выбор когда вт_ВариантыПроизводстваПоТехКартамСостав.СписыватьПоВсегоИзготовлено тогда
	 |     вт_ВариантыПроизводстваПоТехКартамСостав.Количество * &Количество / вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка.Количество
	 |  иначе
	 |     вт_ВариантыПроизводстваПоТехКартамСостав.Количество * (&Количество-&КоличествоБрак)/ вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка.Количество 
	 |  конец  КАК КоличествоПлан,
	 |	вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка.Владелец КАК  ГотоваяПродукция,
	 |	вт_ВариантыПроизводстваПоТехКартамСостав.Количество/ вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка.Количество КАК НормаКоличество,
	 |	&КодСтроки КАК КлючСвязиСтроки
	 |ИЗ
	 |	Справочник.вт_ВариантыПроизводстваПоТехКартам.Состав КАК вт_ВариантыПроизводстваПоТехКартамСостав
	 |ГДЕ
	 |	вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка = &Ссылка");
	 
	 Запрос.УстановитьПараметр("Ссылка", втВариант);
	 Запрос.УстановитьПараметр("Количество", втКоличество);
	 Запрос.УстановитьПараметр("КоличествоБрак", втКоличествоБрак);
	 Запрос.УстановитьПараметр("КодСтроки", КодСтроки);

	 ТаблСырьеПродукта = Запрос.Выполнить().Выгрузить();
	 
	 Если ОчищатьСырье Тогда
		 Отбор = Новый структура;
		 Отбор.Вставить("ГотоваяПродукция",втВариант.Владелец);
		 Отбор.Вставить("КлючСвязиСтроки", КодСтроки);
		 
		 МассивСтрок = ОП.вт_ПроизводствоСырье.НайтиСтроки(Отбор);
		 для каждого СтрокаКомплекта из МассивСтрок Цикл
			 ОП.вт_ПроизводствоСырье.Удалить(СтрокаКомплекта);
		 КонецЦикла;
	 КонецЕсли;
	 
	 //Загружаем новые данные по этой номенклатура
	 Для Каждого СтрокаСырье из ТаблСырьеПродукта Цикл
		 ОтборПоСырье = Новый Структура("Номенклатура, ГотоваяПродукция, КлючСвязиСтроки", СтрокаСырье.Номенклатура, СтрокаСырье.ГотоваяПродукция, КодСтроки);
		 НайденыСтрокиСырье = ОП.вт_ПроизводствоСырье.НайтиСтроки(ОтборПоСырье);
		 Если НайденыСтрокиСырье.количество()=0 И ОчищатьСырье Тогда
			 СтрокаНовая = ОП.вт_ПроизводствоСырье.Добавить();
			 ЗаполнитьЗначенияСвойств(СтрокаНовая, СтрокаСырье);
		 Иначе
			 Для каждого ПозицияНайденоСырье из НайденыСтрокиСырье  Цикл
				 ЗаполнитьЗначенияСвойств(ПозицияНайденоСырье, СтрокаСырье);
			 КонецЦикла;	 
		 КонецЕсли;
	 КонецЦикла;
	 
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьНоменклатуруБракаНаСервере(текВариантПроизводства)
	НоменклатураБрака = Справочники.Номенклатура.ПустаяСсылка();
	Если ЗначениеЗаполнено(текВариантПроизводства) Тогда
		НоменклатураБрака = текВариантПроизводства.НоменклатураБрака;
	КонецЕсли;	
	Возврат НоменклатураБрака; 
КонецФункции


Процедура Очистка()
	Объект.Дата = ТекущаяДата();
	Объект.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	Объект.ГотоваяПродукция = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	Объект.Оборудование = ПредопределенноеЗначение("Справочник.вт_ОборудованиеПроизводства.ПустаяСсылка");
	Объект.Количество = 0;
	Объект.КоличествоБрак = 0;
КонецПроцедуры

&НаСервере
Процедура ГотоваяПродукцияПриИзмененииНаСервере()	
    Если ЗначениеЗаполнено(Объект.ГотоваяПродукция.ИспользованиеХарактеристик) и Объект.ГотоваяПродукция.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать тогда  
        Элементы.Характеристика.Видимость = Ложь;
        //Элементы.Характеристика.Видимость = Истина;
    ИначеЕсли ЗначениеЗаполнено(Объект.ГотоваяПродукция.ИспользованиеХарактеристик) тогда
    	Элементы.Характеристика.Видимость = Истина;
    Иначе
        Элементы.Характеристика.Видимость = Ложь;
        //Элементы.Характеристика.Видимость = Истина;
    КонецЕсли;
		
	Объект.ВидНоменклатуры = Объект.ГотоваяПродукция.ВидНоменклатуры;	
    
    // Брак - если готовую продукция, то брак убираем
    Объект.КоличествоБрак = 0;
    Объект.НоменклатураБрака = Объект.ГотоваяПродукция.Пустая();
    Элементы.НоменклатураБрака.Видимость = Ложь;;
    Элементы.ХарактеристикаБрака.Видимость = Ложь;
    
    ОбновитьСырьеОтходыТЧ();
    
КонецПроцедуры

&НаКлиенте
Процедура ГотоваяПродукцияПриИзменении(Элемент)
	ГотоваяПродукцияПриИзмененииНаСервере();
	Объект.Характеристика = ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
    
КонецПроцедуры


&НаСервере
Функция ПроверкаНаСозданныйДокумент()

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВложенныйЗапрос.Оборудование КАК Оборудование,
	                      |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	                      |	ВложенныйЗапрос.КоличествоПлан КАК КоличествоПлан,
	                      |	ВложенныйЗапрос.БракКолВо КАК БракКолВо,
	                      |	ВложенныйЗапрос.Характеристика КАК Характеристика
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		вт_ОтчетПроизводствавт_ОборудованиеПроизводства.Оборудование КАК Оборудование,
	                      |		вт_ОтчетПроизводстваТовары.Номенклатура КАК Номенклатура,
	                      |		вт_ОтчетПроизводстваТовары.КоличествоПлан КАК КоличествоПлан,
	                      |		вт_ОтчетПроизводстваТовары.БракКолВо КАК БракКолВо,
	                      |		вт_ОтчетПроизводстваТовары.Характеристика КАК Характеристика
	                      |	ИЗ
	                      |		Документ.вт_ОтчетПроизводства.Товары КАК вт_ОтчетПроизводстваТовары
	                      |			ПОЛНОЕ СОЕДИНЕНИЕ Документ.вт_ОтчетПроизводства.вт_ОборудованиеПроизводства КАК вт_ОтчетПроизводствавт_ОборудованиеПроизводства
	                      |			ПО вт_ОтчетПроизводстваТовары.Ссылка = вт_ОтчетПроизводствавт_ОборудованиеПроизводства.Ссылка
	                      |	ГДЕ
	                      |		вт_ОтчетПроизводствавт_ОборудованиеПроизводства.НомерСтроки = 1
	                      |		И вт_ОтчетПроизводстваТовары.НомерСтроки = 1
	                      |		И вт_ОтчетПроизводствавт_ОборудованиеПроизводства.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	                      |		И вт_ОтчетПроизводстваТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)) КАК ВложенныйЗапрос
	                      |ГДЕ
	                      |	ВложенныйЗапрос.Оборудование = &Оборудование
	                      |	И ВложенныйЗапрос.Номенклатура = &Номенклатура
	                      |	И ВложенныйЗапрос.КоличествоПлан = &КоличествоПлан
	                      |	И ВложенныйЗапрос.БракКолВо = &БракКолВо
	                      |	И ВложенныйЗапрос.Характеристика = &Характеристика");
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Оборудование", Объект.Оборудование);
	Запрос.УстановитьПараметр("Номенклатура", Объект.ГотоваяПродукция);
	Запрос.УстановитьПараметр("КоличествоПлан", Объект.Количество);
	Запрос.УстановитьПараметр("БракКолВо", Объект.КоличествоБрак);
	Запрос.УстановитьПараметр("Характеристика", Объект.Характеристика);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияУТКлиент.ЕстьНеобработанноеСобытие() Тогда
			//ОбработатьШтрихкоды(МенеджерОборудованияУТКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодборТовара(Команда)
	
	ПараметрыФормы = Новый Структура;

	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("Склад", Склад);
	ПараметрыФормы.Вставить("Дата", ТекущаяДата());
	ПараметрыФормы.Вставить("Документ", Организация);
	ПараметрыФормы.Вставить("Валюта", Валюта);
	
	ОткрытьФорму("Обработка.ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Организация = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ОрганизацияПроизводства");
	Склад = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_СкладПроизводства");
	Валюта = Константы.ВалютаУправленческогоУчета.Получить();
    Объект.Склад = Склад;
    СтруктураНастроекПользователя = ПолучитьНастройкиРежимаЗаполнения();
    
    Если ЗначениеЗаполнено(СтруктураНастроекПользователя) Тогда
        РежимЗаполнения = СтруктураНастроекПользователя.РежимЗаполнения;
        Объект.ОтразитьВРеглУчете = СтруктураНастроекПользователя.ОтразитьВРеглУч;
        Объект.ОтразитьВПроизводственномУчете = СтруктураНастроекПользователя.ОтразитьВПроизУч;
    Иначе    
        РежимЗаполнения = 1;   //если настройки не сохранены ранее, то по умолчанию ставим по рецептурам
        Объект.ОтразитьВРеглУчете = Истина;
        Объект.ОтразитьВПроизводственномУчете = Истина;
    КонецЕсли; 
	
	ЗаполнитьСпискиВидовНоменклатуры();
		
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиРежимаЗаполнения()
    
    КлючОбъекта  = "ОтчетПроизводства_НастройкиПользователей";
    КлючНастроек = "НастройкиПользователяПоУмолчанию";
    ВладелецНастроек = ИмяПользователя();
    // Для восстановления настроек необходимо воспользоваться функцией Загрузить
    СтруктураНастроек = Неопределено;
    Попытка
        СтруктураНастроек = ХранилищеОбщихНастроек.Загрузить(КлючОбъекта,КлючНастроек,,ВладелецНастроек);
        // если настроек нет, то будет возвращено значение "Неопределено"
    Исключение
        //Сообщить("Нет прав на восстановление настроек.");
    КонецПопытки;
    
    Если СтруктураНастроек = Неопределено Тогда
        Возврат Неопределено; 
    Иначе
        Возврат СтруктураНастроек;
    КонецЕсли;
КонецФункции

&НаСервере
Процедура СохранитьНастройкиДляПользователя()
    
    КлючОбъекта  = "ОтчетПроизводства_НастройкиПользователей";
    КлючНастроек = "НастройкиПользователяПоУмолчанию";
    
    // настройки могут быть произвольного типа
    Настройки    = Новый Структура("РежимЗаполнения, ОтразитьВРеглУч, ОтразитьВПроизУч");
    
    Настройки.Вставить("РежимЗаполнения", РежимЗаполнения);
    Настройки.Вставить("ОтразитьВРеглУч",  Объект.ОтразитьВРеглУчете);
    Настройки.Вставить("ОтразитьВПроизУч", Объект.ОтразитьВПроизводственномУчете);
    
    ИмяПользователя = ИмяПользователя();
    
    // имя пользователя - пользователь владелец настроек
    ИмяПользователя = ИмяПользователя();
    ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(КлючОбъекта,  КлючНастроек, Настройки, , ИмяПользователя);	
    
КонецПроцедуры // СохранитьНастройкиДляПользователя()

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровВДокументПродажи.Форма.Форма" Тогда
		
		ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение)
	
	ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиВидовНоменклатуры()
    СписокВидыГотовой.Очистить();
	СписокВидыСырье.Очистить();
	
	НЗ = РегистрыСведений.вт_ВидыНоменклатурыГотовойПродукцииПроизводства.СоздатьНаборЗаписей();
	НЗ.Прочитать();
	Для инд=0 по НЗ.Количество()-1 Цикл
		СписокВидыГотовой.Добавить(НЗ.Получить(инд).ВидНоменклатуры);
	КонецЦикла;
	
	
	НЗ = РегистрыСведений.вт_ВидыНоменклатурыКомплектующие.СоздатьНаборЗаписей();
	НЗ.Прочитать();
	Для инд=0 по НЗ.Количество()-1 Цикл
		СписокВидыСырье.Добавить(НЗ.Получить(инд).ВидыНоменклатурыКомплектующих);
	КонецЦикла;
	
КонецПроцедуры	
	
&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		ВидНоменкл = СтрокаТовара.Номенклатура.ВидНоменклатуры;
		
		Если СписокВидыСырье.НайтиПоЗначению(ВидНоменкл) <> Неопределено Тогда
			ТекущаяСтрока = Сырье.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
			ТекущаяСтрока.ВидНоменклатуры = ТекущаяСтрока.Номенклатура.Видноменклатуры;
			
		ИначеЕсли СписокВидыГотовой.НайтиПоЗначению(ВидНоменкл) <> Неопределено Тогда
			
		Иначе
			ТекущаяСтрока = Отходы.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
			ТекущаяСтрока.ВидНоменклатуры = ТекущаяСтрока.Номенклатура.Видноменклатуры;
			
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимЗаполненияПриИзменении(Элемент)
    ОбработатьВидимостьРецептуры(РежимЗаполнения);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВидимостьРецептуры(Режим)

    Если Режим = 1 Тогда
		Элементы.РецептураТехкарта.Видимость = Истина;
        ОбновитьСырьеОтходыТЧ();
    Иначе
		Элементы.РецептураТехкарта.Видимость = Ложь;
        
        Если Сырье.Количество() > 0 ИЛИ Отходы.Количество() > 0 Тогда
            Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма);
            ПоказатьВопрос(Оповещение, "Табличные части заполнены данными, очистить их?", РежимДиалогаВопрос.ДаНет);
        КонецЕсли;
    КонецЕсли;	

КонецПроцедуры // ОбработатьВидимостьРецептуры()

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
        Сырье.Очистить();
        Отходы.Очистить();
    КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
//++Маслов
Функция ПолучитьРецептуруПоУмолчанию(Номенклатура,Характеристика=НЕОПРЕДЕЛЕНО)
//Функция ПолучитьРецептуруПоУмолчанию(Номенклатура)
    Запрос = Новый Запрос;
    Условие = "";
    Если НЕ Характеристика=НЕОПРЕДЕЛЕНО Тогда
        Условие = " И вт_ВариантыПроизводстваПоТехКартам.Характеристика = &Характеристика";
        Запрос.УстановитьПараметр("Характеристика", Характеристика);
   КонецЕсли;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   вт_ВариантыПроизводстваПоТехКартам.Ссылка КАК Ссылка
        |ИЗ
        |   Справочник.вт_ВариантыПроизводстваПоТехКартам КАК вт_ВариантыПроизводстваПоТехКартам
        |ГДЕ
        |   вт_ВариантыПроизводстваПоТехКартам.Основной
        |   И вт_ВариантыПроизводстваПоТехКартам.Владелец = &Номенклатура"+Условие;
    //--Маслов
    Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    Если НЕ РезультатЗапроса.Пустой() Тогда
        
        Выборка = РезультатЗапроса.Выбрать();
        
        Выборка.Следующий();  // в запросе будет только одна запись
        
        Возврат Выборка.Ссылка;
        
    КонецЕсли;
    
КонецФункции // ПолучитьРецептуруПоУмолчанию()


&НаСервере
Процедура ОбновитьСырьеОтходыТЧ()

    Если РежимЗаполнения = 1 Тогда
        //++Маслов
        Если ЗначениеЗаполнено(Объект.ГотоваяПродукция) Тогда
            Если Элементы.Характеристика.Видимость = Истина 
                   И НЕ ЗначениеЗаполнено(Объект.Характеристика) Тогда
                   Сообщить("Для данного вида продуции при заполнении по рецептуре необходимо указать характеристику",СтатусСообщения.Важное);
                   Возврат;
               ИначеЕсли Объект.РецептураТехкарта.Пустая() Тогда
                    Если ЗначениеЗаполнено(Объект.Характеристика) Тогда
                           Объект.РецептураТехкарта = ПолучитьРецептуруПоУмолчанию(Объект.ГотоваяПродукция,Объект.Характеристика);
                   Иначе
                           Объект.РецептураТехкарта = ПолучитьРецептуруПоУмолчанию(Объект.ГотоваяПродукция);
                   КонецЕсли;
           КонецЕсли;
        //--Маслов
        КонецЕсли;
        Объект.Количество = Объект.РецептураТехкарта.Количество;
        // Обновляем табличные части Сырьё и Отходы
        ОбновитьСырьеТЧ();
        ОбновитьОтходыТЧ();
    КонецЕсли; 

КонецПроцедуры // ОбновитьСырьеОтходыТЧ()

&НаСервере
Процедура ОбновитьСырьеТЧ()
    
    СырьеТЧ = Объект.РецептураТехкарта.Состав;
    Сырье.Очистить();
    Для каждого СтрокаТЧ Из СырьеТЧ Цикл
        СтрокаНовая = Сырье.Добавить();
        СтрокаНовая.Номенклатура      = СтрокаТЧ.Сырье;
        СтрокаНовая.Характеристика   =  СтрокаТЧ.Характеристика;
        СтрокаНовая.Количество          =  Объект.Количество * СтрокаТЧ.Количество / Объект.РецептураТехкарта.Количество;
        СтрокаНовая.КоличествоПлан   = СтрокаНовая.Количество;
        СтрокаНовая.ВидНоменклатуры = СтрокаТЧ.Сырье.ВидНоменклатуры;
    КонецЦикла; 
    
КонецПроцедуры // ОбновитьСырьеТЧ()

&НаСервере
Процедура ОбновитьОтходыТЧ()
    
    ОтходыТЧ = Объект.РецептураТехкарта.Отходы;  
    Отходы.Очистить();
    Для каждого СтрокаТЧ Из ОтходыТЧ Цикл
        СтрокаНовая = Отходы.Добавить();
        СтрокаНовая.Номенклатура      = СтрокаТЧ.Номенклатура;
        //СтрокаНовая.Характеристика   =  СтрокаТЧ.Номенклатура.Характеристика;
        СтрокаНовая.Количество          =  Объект.КоличествоБрак * СтрокаТЧ.Количество / Объект.РецептураТехкарта.Количество;
        СтрокаНовая.КоличествоПлан   = СтрокаНовая.Количество;
        СтрокаНовая.ВидНоменклатуры = СтрокаТЧ.Номенклатура.ВидНоменклатуры;
    КонецЦикла; 
    
КонецПроцедуры // ОбновитьОтходыТЧ()

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
    ОбновитьСырьеТЧ();
КонецПроцедуры

&НаКлиенте
Процедура РецептураТехкартаПриИзменении(Элемент)
    ОбновитьСырьеОтходыТЧ();
КонецПроцедуры

&НаКлиенте
Процедура КоличествоБракПриИзменении(Элемент)
    КоличествоБракПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КоличествоБракПриИзмененииНаСервере()
    Если ЗначениеЗаполнено(Объект.КоличествоБрак)  Тогда
        Если РежимЗаполнения = 1 Тогда
            Элементы.НоменклатураБрака.Видимость = Истина;
            Объект.НоменклатураБрака = Объект.ГотоваяПродукция;
        КонецЕсли; 
        Если ЗначениеЗаполнено(Объект.НоменклатураБрака.ИспользованиеХарактеристик) и Объект.НоменклатураБрака.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать тогда  
            Элементы.ХарактеристикаБрака.Видимость = Ложь;
        ИначеЕсли ЗначениеЗаполнено(Объект.НоменклатураБрака.ИспользованиеХарактеристик) тогда
            Элементы.ХарактеристикаБрака.Видимость = Истина;
        Иначе
            Элементы.ХарактеристикаБрака.Видимость = Ложь;
        КонецЕсли;
    Иначе    
        Элементы.НоменклатураБрака.Видимость = Ложь;
        Элементы.ХарактеристикаБрака.Видимость = Ложь;
    КонецЕсли; 
    // ТЧ по отходам всегда обновляем т.к. данные по ней могут быть заполнены ранее и их надо обнулить
    ОбновитьОтходыТЧ();
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	ГотоваяПродукцияПриИзмененииНаСервере();
КонецПроцедуры


//&НаКлиенте
//Процедура РецептураТехкартаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//    
//    СтандартнаяОбработка = Ложь;
//    
//    ПараметрыОтбора = Новый Структура("Владелец", Объект.ГотоваяПродукция); 
//    ПараметрыОткрытия = Новый Структура("Отбор", ПараметрыОтбора); 
//    ОткрытьФорму("Справочник.вт_ВариантыПроизводстваПоТехКартам.Форма.Форма", ПараметрыОткрытия);
//    
//КонецПроцедуры




