&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ
&НаКлиенте
Перем Терминал; //для весов

&НаКлиенте
Процедура ОК(Команда)
	
	//ВыбранноеЗначение = Новый Структура("ТекущийВес, Серия, Выбрали", ТекущийВес, Серия, Истина);
	ВыбранноеЗначение = Новый Структура("Номенклатура, ТекущийВес, Серия, Выбрали, ТекущаяСтрокаИдентификатор", Номенклатура, ТекущийВес, Серия, Истина, ТекущаяСтрокаИдентификатор);
	
	ОповеститьОВыборе(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура МатериалыИРаботыПоискПоШтрихкоду(Команда)
	ПоискПоШтрихкодуВыполнить("МатериалыИРаботы");
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуВыполнить(ИмяТЧ)
	
	ОчиститьСообщения();
	Оповещение = Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект, Новый Структура("ИмяТЧ", ИмяТЧ));
	ШтрихкодированиеНоменклатурыКлиент.ПоказатьВводШтрихкода(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяТЧПоискПоШтрихкоду = ДополнительныеПараметры.ИмяТЧ;
	
	ОбработатьШтрихкоды(ДополнительныеПараметры.ИмяТЧ, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкоды(ИмяТЧ, ДанныеШтрихкодов)
	
	ДействияСДобавленнымиСтроками = Новый Структура;
	ДействияСИзмененнымиСтроками  = Новый Структура;
	
	Действия = ШтрихкодированиеНоменклатурыКлиент.ПараметрыОбработкиШтрихкодов();

	Действия.Штрихкоды                              = ДанныеШтрихкодов;
	Действия.СтруктураДействийСДобавленнымиСтроками = ДействияСДобавленнымиСтроками;
	Действия.СтруктураДействийСИзмененнымиСтроками  = ДействияСИзмененнымиСтроками;
	Действия.ПараметрыУказанияСерий                 = ПараметрыУказанияСерий.Материалы;
	Действия.ИзменятьКоличество                     = Истина;
	Действия.ТолькоТовары                           = Истина;
	Действия.ИмяТЧ                                  = "Материалы";
	//brava 0022440 чтобы бралось в кг0022440
	Действия.НеИспользоватьУпаковки                 = Истина; 
	//brava 0022440 
	
	ОбработатьШтрихкодыСервер(Действия,КэшированныеЗначения);
	
	ШтрихкодированиеНоменклатурыКлиент.ОбработатьНеизвестныеШтрихкоды(Действия,КэшированныеЗначения,ЭтаФорма);
	
	Если ШтрихкодированиеНоменклатурыКлиент.НужноОткрытьФормуУказанияСерийПослеОбработкиШтрихкодов(Действия) Тогда
		
		ТекущиеДанныеИдентификатор = Действия.МассивСтрокССериями[0];
		
		//ПодключитьОбработчикОжидания("ОткрытьПодборСерийПриСканированииШтрихкодаНоменклатуры",0.1,Истина);
		// + 02.11.2017 MSOvchinnikova@1bit.com
		Если Действия.Свойство("НеОткрыватьПодборСерий") Тогда
			Если НЕ Действия.НеОткрыватьПодборСерий Тогда
				ПодключитьОбработчикОжидания("ОткрытьПодборСерийПриСканированииШтрихкодаНоменклатуры",0.1,Истина);
			КонецЕсли;
		КонецЕсли;
		// - 02.11.2017 MSOvchinnikova@1bit.com
			
	КонецЕсли;
	
	//УпаковочныеЛистыКлиент.ОбновитьКешированныеЗначенияДляТЧСУпаковочнымиЛистами(Элементы.ОтгружаемыеТовары, КэшированныеЗначения, ПараметрыУказанияСерий.ОтгружаемыеТовары);
	
	// + 02.11.2017 MSOvchinnikova@1bit.com
	//НоменклатураПриИзмененииСервер(КэшированныеЗначения); 
	// + 02.11.2017 MSOvchinnikova@1bit.com
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьШтрихкодыСервер(Действия,КэшированныеЗначения)
	
	ОбработатьШтрихкодыВместоСервера(ЭтаФорма,Объект,Действия,КэшированныеЗначения);
	//ПересчитатьКоличествоМест();
	
	Если Действия.ТекущаяСтрока <> Неопределено Тогда
		
		Элементы.ОтгружаемыеТовары.ТекущаяСтрока = Действия.ТекущаяСтрока;
		Объект.РежимПросмотраПоТоварам = Истина;
		//РежимПросмотраПриИзмененииСервер();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьШтрихкодыВместоСервера(Форма, Объект, СтруктураПараметров, КэшированныеЗначения) Экспорт
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КонецЕсли;

	//КэшированныеЗначения.ПравоРегистрацииШтрихкодовНоменклатурыДоступно = ПравоРегистрацииШтрихкодовНоменклатурыДоступно();
	
	ПрефиксыВесовыхШтрихкодов = ЗначениеНастроекПовтИсп.ПолучитьПрефиксыВесовыхШтрихкодов();
	
	Если ТипЗнч(СтруктураПараметров.Штрихкоды) = Тип("Массив") Тогда
		МассивШтрихкодов = СтруктураПараметров.Штрихкоды;
	Иначе
		МассивШтрихкодов = Новый Массив;
		МассивШтрихкодов.Добавить(СтруктураПараметров.Штрихкоды);
	КонецЕсли;
	
	НеЗакешированныеРанееШтрихкоды = Новый Массив;
	
	Для Каждого ТекШтрихкод Из МассивШтрихкодов Цикл
		ТекШтрихкод.Штрихкод = ВРег(СокрЛП(ТекШтрихкод.Штрихкод));
		РегистрыСведений.ШтрихкодыНоменклатуры.ПреобразоватьВесовойШтрихкод(ТекШтрихкод, ПрефиксыВесовыхШтрихкодов);
		Если Не ЗначениеЗаполнено(КэшированныеЗначения.Штрихкоды[ТекШтрихкод.Штрихкод])
			Или КэшированныеЗначения.Штрихкоды[ТекШтрихкод.Штрихкод].НеизвестныйШтрихкод Тогда
			НеЗакешированныеРанееШтрихкоды.Добавить(ТекШтрихкод.Штрихкод);
		КонецЕсли;
	КонецЦикла;
	
	Если НеЗакешированныеРанееШтрихкоды.Количество() > 0 Тогда
		
		РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьДанныеПоШтрихкодам(КэшированныеЗначения, НеЗакешированныеРанееШтрихкоды);
	КонецЕсли;
	
	Для Каждого ТекШтрихкод Из МассивШтрихкодов Цикл
		
		ДобавляемыеДанные  = КэшированныеЗначения.Штрихкоды[ТекШтрихкод.Штрихкод];
		Номенклатура = ДобавляемыеДанные.Номенклатура;
		Серия = ДобавляемыеДанные.Серия;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыИРаботыПолучитьВес(Команда)
	
	ПодключитьОбработчикОжидания("ПолучитьВес", 1, Ложь);
	ПолучитьВес();

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВес()
	
	Если Терминал = Неопределено Тогда 
		Терминал = Новый COMОбъект("Controller.ScAuto");
	КонецЕсли;
	
	ТекущийВес = Терминал.GetWeight(1,1);
	//Сообщить(ТекущийВес);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
	//Если Параметры.Свойство("ТекущаяСтрокаИдентификатор") Тогда
	//	Номенклатура = Параметры.Номенклатура;
	//	Количество = Параметры.ТекущийВес;
	//	Серия = Параметры.Серия;
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТекущаяСтрокаИдентификатор") Тогда
		Номенклатура = Параметры.Номенклатура;
		ТекущийВес = Параметры.ТекущийВес;
		Серия = Параметры.Серия;
		МЛ = Параметры.МЛ;
		Склад = Параметры.Склад;
		ТекущаяСтрокаИдентификатор = Параметры.ТекущаяСтрокаИдентификатор;
		ПараметрыУказанияСерий = Параметры.ПараметрыУказанияСерий;
		ПараметрыУказанияСерий.Материалы.ТоварВШапке = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерияНачалоВыбораНаСервере(Элемент)
	
	СтандартнаяОбработка = Ложь;
	//ОткрытьПодборСерий("Материалы", Элемент.ТекстРедактирования);
	
	////ДляУказанияСерийНуженСерверныйВызов
	//ПараметрыПодбораСерий = Новый Структура("Номенклатура");
	//ПараметрыПодбораСерий.Вставить("Номенклатура", Номенклатура);
	////ПараметрыПодбораСерий.Вставить("Характеристика", Характеристика);
	//ПараметрыПодбораСерий.Вставить("Количество", ТекущийВес);
	//ПараметрыПодбораСерий.Вставить("Серия", Серия);
	////ПараметрыОткрытия.Вставить("АдресВоВременномХранилище",            АдресХранилища);
	//
	////ЗначенияПолейДляОпределенияРаспоряжения = НоменклатураКлиентСервер.ЗначенияПолейДляОпределенияРаспоряжения(Объект,
	////Объект,
	////ПараметрыУказанияСерий);
	//ЗначенияПолейДляОпределенияРаспоряжения = Новый Структура;
	//
	//ПараметрыПодбораСерий.Вставить("ЗначенияПолейДляОпределенияРаспоряжения", ЗначенияПолейДляОпределенияРаспоряжения);
	//
	//ПараметрыПодбораСерий.Вставить("ПараметрыУказанияСерий", ПараметрыУказанияСерий);
	//
	////ОткрытьФорму("Обработка.ПодборСерийВДокументы.Форма.УказаниеСерииВСтрокеТоваров",ПараметрыПодбораСерий, ЭтотОбъект);
	//
	//
	////ПараметрыФормыУказанияСерий = ПараметрыФормыУказанияСерий(ТекущиеДанныеИдентификатор, ИмяТЧ);
	////
	//ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПодборСерийЗавершение",
	//ЭтотОбъект,
	//Новый Структура("ИмяТЧ,ПараметрыФормыУказанияСерий", "Материалы",ПараметрыПодбораСерий));
	////
	//ОткрытьФорму("Обработка.ПодборСерийВДокументы.Форма.РегистрацияИПодборСерийПоОднойСтрокеТоваров",
	//ПараметрыПодбораСерий,
	//ЭтаФорма,
	//,
	//,
	//,
	//ОписаниеОповещения,
	//РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	//////////////////////
	//Если НоменклатураКлиент.ДляУказанияСерийНуженСерверныйВызов(ЭтаФорма,ПараметрыУказанияСерий[ИмяТЧ],Текст, ТекущиеДанные) Тогда
	//	Если ТекущиеДанные = Неопределено Тогда
	//		ТекущиеДанныеИдентификатор = Элементы[ИмяТЧ].ТекущиеДанные.ПолучитьИдентификатор();
	//	Иначе
	//		ТекущиеДанныеИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
	//	КонецЕсли;
	//	
	//	ПараметрыФормыУказанияСерий = ПараметрыФормыУказанияСерий(ТекущиеДанныеИдентификатор, ИмяТЧ);
	//	
	//	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПодборСерийЗавершение",
	//													ЭтотОбъект,
	//													Новый Структура("ИмяТЧ,ПараметрыФормыУказанияСерий", ИмяТЧ,ПараметрыФормыУказанияСерий));

	//	ОткрытьФорму("Обработка.ПодборСерийВДокументы.Форма.РегистрацияИПодборСерийПоОднойСтрокеТоваров",
	//				ПараметрыФормыУказанияСерий,
	//				ЭтаФорма,
	//				,
	//				,
	//				,
	//				ОписаниеОповещения,
	//				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборСерий(ИмяТЧ, Текст = "", ТекущиеДанные = Неопределено)
	
	//Если НоменклатураКлиент.ДляУказанияСерийНуженСерверныйВызов(ЭтаФорма,ПараметрыУказанияСерий[ИмяТЧ],Текст, ТекущиеДанные) Тогда
		//Если ТекущиеДанные = Неопределено Тогда
		//	ТекущиеДанныеИдентификатор = Элементы[ИмяТЧ].ТекущиеДанные.ПолучитьИдентификатор();
		//Иначе
			ТекущиеДанныеИдентификатор = ТекущаяСтрокаИдентификатор;
		//КонецЕсли;
		
		ПараметрыФормыУказанияСерий = ПараметрыФормыУказанияСерий(ТекущиеДанныеИдентификатор, ИмяТЧ);
		ПараметрыФормыУказанияСерий.Номенклатура = Номенклатура;
		ПараметрыФормыУказанияСерий.Склад = Склад;
		ПараметрыФормыУказанияСерий.СтатусУказанияСерий = 14;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПодборСерийЗавершение",
														ЭтотОбъект,
														Новый Структура("ИмяТЧ,ПараметрыФормыУказанияСерий", ИмяТЧ,ПараметрыФормыУказанияСерий));

														//РегистрацияИПодборСерийПоОднойСтрокеТоваров
		ОткрытьФорму("Обработка.ПодборСерийВДокументы.Форма.ПодборСерийПоОстаткамДляВсехСтрокТоваров",
					ПараметрыФормыУказанияСерий,
					ЭтаФорма,
					,
					,
					,
					ОписаниеОповещения,
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыФормыУказанияСерий(ТекущиеДанныеИдентификатор, ИмяТЧ)
	
	Возврат НоменклатураСервер.ПараметрыФормыУказанияСерий(Объект, ПараметрыУказанияСерий[ИмяТЧ], ТекущиеДанныеИдентификатор, ЭтаФорма);
	
КонецФункции

&НаКлиенте
Процедура СерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//СерияНачалоВыбораНаСервере(Элемент);
	НачалоВыбораСерии();
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСерии()

	ПараметрыФормы = Новый Структура("Номенклатура, ТекущийВес, Серия, Склад", Номенклатура, ТекущийВес, Серия, Склад);
	ОповещениеОЗакрытие = Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораСерии", ЭтотОбъект);
	ПараметрыОткрытияФормы = Новый Структура("Уникальность, Окно, НавигационнаяСсылка, Владелец", Ложь);
	
	ОткрытьФорму("Документ.МаршрутныйЛист.Форма.ФормаВыбораСерии", ПараметрыФормы,
	ПараметрыОткрытияФормы.Владелец, ПараметрыОткрытияФормы.Уникальность,
	ПараметрыОткрытияФормы.Окно, ПараметрыОткрытияФормы.НавигационнаяСсылка, ОповещениеОЗакрытие);
	
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьПодборСерийЗавершение(Результат, ДополнительныеПараметры) Экспорт
     
    ЗначениеВозврата = Результат;
    
	//Если ЗначениеВозврата <> Неопределено Тогда
	//    ОбработатьУказаниеСерийСервер(ДополнительныеПараметры.ПараметрыФормыУказанияСерий,ДополнительныеПараметры.ИмяТЧ, КэшированныеЗначения);
	//КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗакрытияФормыВыбораСерии(СтрукПараметров, ДополнительныеПараметры)
	
	Если НЕ СтрукПараметров = неопределено Тогда
		Если СтрукПараметров.Свойство("Серия") Тогда
			Серия = СтрукПараметров.Серия;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Стоп(Команда)
	ОтключитьОбработчикОжидания("ПолучитьВес");
КонецПроцедуры



