Функция ПечатьМаршрутного(Объект, СФактом = Ложь, ДляКонтроля = Ложь) Экспорт
	
	Таб = Новый ТабличныйДокумент;
	
	Макет = Документы.МаршрутныйЛист.ПолучитьМакет("Маршрутный");
	ОбластьЗаголовок1 = Макет.ПолучитьОбласть("Заголовок1");
	ОбластьСтрокаРецепта = Макет.ПолучитьОбласть("СтрокаРецепта");
	ОбластьСодержимое1 = Макет.ПолучитьОбласть("Содержимое1");
	ОбластьИтог1 = Макет.ПолучитьОбласть("Итог1");
	ОбластьЗаголовок2 = Макет.ПолучитьОбласть("Заголовок2");
	ОбластьЗаголовок2_2 = Макет.ПолучитьОбласть("Заголовок2_2");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МаршрутныйЛист.Номер КАК Номер,
	               |	МаршрутныйЛист.Дата КАК Дата,
	               |	МаршрутныйЛист.Линия КАК Линия,
	               |	МаршрутныйЛист.НомерСменыЗамеса КАК НомерСменыЗамеса,
	               |	МаршрутныйЛист.Номенклатура КАК Номенклатура,
	               |	МаршрутныйЛист.СрокГодности КАК СрокГодности,
	               |	МаршрутныйЛист.Серия КАК Партия,
	               |	МаршрутныйЛист.Количество КАК Количество,
	               |	МаршрутныйЛист.Номенклатура.НаименованиеПолное КАК ГотоваяПродукция,
	               |	МаршрутныйЛист.ДопМаркировка КАК ДопМаркировка,
	               |	МаршрутныйЛист.ВремяСмешивания КАК ВремяСмешивания,
	               |	МаршрутныйЛист.ПорядокЗакладки КАК ПорядокЗакладки,
	               |	МаршрутныйЛист.Ответственный КАК Технолог
	               |ИЗ
	               |	Документ.МаршрутныйЛист КАК МаршрутныйЛист
	               |ГДЕ
	               |	МаршрутныйЛист.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ОбластьЗаголовок1.Параметры.Заполнить(Выборка);
		ОбластьЗаголовок1.Параметры.ПлановаяДата = Формат(Выборка.Дата, "ДФ=dd.MM.yyyy");
		
	КонецЕсли; 
	
	//Запрос = Новый Запрос;
	////Запрос.Текст = "ВЫБРАТЬ
	////|	ПозицииНаВетеринарку.Наименование
	////|ИЗ
	////|	Справочник.ПозицииНаВетеринарку КАК ПозицииНаВетеринарку
	////|ГДЕ
	////|	ПозицииНаВетеринарку.Номенклатура В(&Номенклатура)";
	////0020123
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ЗначенияСвойствОбъектов.Значение
	//               |ИЗ
	//               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//               |ГДЕ
	//               |	ЗначенияСвойствОбъектов.Объект В(&Номенклатура)
	//               |	И ЗначенияСвойствОбъектов.Свойство = &Свойство
	//               |	И ЗначенияСвойствОбъектов.Значение = ИСТИНА";	
	//			   
	//Запрос.УстановитьПараметр("Номенклатура", Продукция.ВыгрузитьКолонку("Номенклатура"));
	//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("ФизЛицо21"));
	//
	//Результат = Запрос.Выполнить();
	//Если Результат.Пустой() Тогда
	//	ОбластьЗаголовок1.Параметры.Ветеринарка = "";
	//Иначе	
	//	ОбластьЗаголовок1.Параметры.Ветеринарка ="ВЕТЕРИНАРНАЯ СПРАВКА!";
	//КонецЕсли; 
	
	//ОбластьЗаголовок1.Параметры.ПорядокЗакладки = ПорядокЗакладки; //0010847
	
	Таб.Вывести(ОбластьЗаголовок1); 
	ИтНорма100 = 0; ИтКоличество = 0;
	
	//сначала выводим материалы, потом тару. Инцидент 1413
	ТЗФакт = Объект.Материалы.Выгрузить();
	
	НомерПП = 0;
	ИтНаименований = 0;
	Для каждого Стр Из Объект.МатериалыПлан Цикл
		
		//Если Стр.Номенклатура.ПринадлежитЭлементу(ПапкаМат) Тогда
		//	Продолжить;
		//КонецЕсли; 
		ОбластьСтрокаРецепта.Параметры.Заполнить(Стр);
		
		Если СФактом Тогда
			ПараметрыОтбораФ = Новый Структура;
			ПараметрыОтбораФ.Вставить("Номенклатура", Стр.Номенклатура);
			НайденныеСтрокиФ = ТЗФакт.НайтиСтроки(ПараметрыОтбораФ);
			ТекФакт = 0;
			Для каждого СтрФ Из НайденныеСтрокиФ Цикл
				ТекФакт = ТекФакт + СтрФ.Количество;
				ИтКоличествоФакт = ИтКоличествоФакт + СтрФ.Количество; 
				ТЗФакт.Удалить(СтрФ);
			КонецЦикла; 
			ОбластьСтрокаРецепта.Параметры.Факт = ТекФакт;
		КонецЕсли; 
		
		ИтНорма100 = ИтНорма100 + Стр.Количество100;
		ИтНаименований = ИтНаименований + 1;
		ИтКоличество = ИтКоличество + Стр.Количество;
		НомерПП = НомерПП+1;
		ОбластьСтрокаРецепта.Параметры.НомерПП = НомерПП;
		
		Таб.Вывести(ОбластьСтрокаРецепта);
	КонецЦикла;
	
		////инц 0002616\/  brava
		////допечатываем те номенклатуры которых не было по плану
		//Если СФактом Тогда
		//	Для каждого СтрФ Из ТЗФакт Цикл
		//		ОбластьСтрокаРецепта.Параметры.Примечание = "";
		//		ОбластьСтрокаРецепта.Параметры.Количество100 = "";
		//		ОбластьСтрокаРецепта.Параметры.Количество = "";
		//		
		//		ОбластьСтрокаРецепта.Параметры.Номенклатура = СтрФ.Номенклатура;
		//		ОбластьСтрокаРецепта.Параметры.Факт = СтрФ.Количество;
		//		ИтКоличествоФакт = ИтКоличествоФакт + СтрФ.Количество; 
		//        Таб.Вывести(ОбластьСтрокаРецепта);
		//	КонецЦикла; 
		//КонецЕсли; 
		////инц 0002616/\
		
	ОбластьИтог1.Параметры.ИтНаименований = ""+ИтНаименований+ " наимен.";
	ОбластьИтог1.Параметры.ИтКоличество = ИтКоличество;
	ОбластьИтог1.Параметры.ИтКоличествоФакт = ИтКоличествоФакт;
	Таб.Вывести(ОбластьИтог1);
	Для каждого Стр Из Объект.МатериалыПлан Цикл
		//Если НЕ Стр.Номенклатура.ПринадлежитЭлементу(ПапкаМат) Тогда
		//	Продолжить;
		//КонецЕсли; 
		ОбластьСтрокаРецепта.Параметры.Заполнить(Стр);
		
		НомерПП = НомерПП+1;
		ОбластьСтрокаРецепта.Параметры.НомерПП = НомерПП;		
		Таб.Вывести(ОбластьСтрокаРецепта);
	КонецЦикла;
	
	
	Таб.Вывести(ОбластьСодержимое1);
	
	// 2 страница		
	таб.ВывестиГоризонтальныйРазделительСтраниц();

	ОбластьЗаголовок2.Параметры.ДопМаркировка = Выборка.ДопМаркировка;
	ОбластьЗаголовок2.Параметры.ВремяСмешивания = Выборка.ВремяСмешивания;
	
	Таб.Вывести(ОбластьЗаголовок2);
	
	ОбластьЗаголовок2_2.Параметры.Технолог = Выборка.Технолог;
	ОбластьЗаголовок2_2.Параметры.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Таб.Вывести(ОбластьЗаголовок2_2);
	Таб.АвтоМасштаб = Истина;
	Возврат Таб;
	
КонецФункции

// Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Статус,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	
	ОтгружаемыеТовары = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ОтгружаемыеТовары.ПолноеИмяОбъекта = "Документ.МаршрутныйЛист";
	ОтгружаемыеТовары.ЭтоОрдер = Ложь;
	
	ОтгружаемыеТовары.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
	ОтгружаемыеТовары.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ОтгружаемыеТовары.ИспользуютсяТоварныеМеста = Ложь; //Истина;
	
	//ОтгружаемыеТовары.СкладскиеОперации.Добавить(Объект.СкладскаяОперация);
	ОтгружаемыеТовары.ИспользоватьАдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, , Объект.Дата);
	
	ОтгружаемыеТовары.ИмяТЧТовары = "Материалы";
	ОтгружаемыеТовары.ИмяТЧСерии = "Материалы";
	//ОтгружаемыеТовары.ИмяПоляПомещение = "";
	
	Если Объект.Статус = Перечисления.СтатусыМаршрутныхЛистов.ГотовКСбору Тогда
		
		ОтгружаемыеТовары.ПодготовкаОрдера = Истина;
		ОтгружаемыеТовары.ПланированиеОтгрузки = Ложь;
		ОтгружаемыеТовары.ПланированиеОтбора = Ложь;
		ОтгружаемыеТовары.ПроверкаОтбора = Ложь;
		ОтгружаемыеТовары.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыМаршрутныхЛистов.Подобран Тогда
		
		ОтгружаемыеТовары.ПодготовкаОрдера = Ложь;
		ОтгружаемыеТовары.ПланированиеОтгрузки = Ложь;
		ОтгружаемыеТовары.ПланированиеОтбора = Истина;
		ОтгружаемыеТовары.ПроверкаОтбора = Ложь;
		ОтгружаемыеТовары.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыМаршрутныхЛистов.Проверен Тогда
		
		//ОтгружаемыеТовары.ПоляСвязи.Добавить("Упаковка");
		ОтгружаемыеТовары.ИмяПоляКоличество = "КоличествоУпаковок";
		
		ОтгружаемыеТовары.ПодготовкаОрдера = Ложь;
		ОтгружаемыеТовары.ПланированиеОтгрузки = Ложь;
		ОтгружаемыеТовары.ПланированиеОтбора = Ложь;
		ОтгружаемыеТовары.ПроверкаОтбора = Ложь;
		ОтгружаемыеТовары.ФактОтбора = Истина;
		
	КонецЕсли;
	
	ОтгружаемыеТовары.РегистрироватьСерии = Истина; //НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ОтгружаемыеТовары);
	ОтгружаемыеТовары.ОсобеннаяПроверкаСтатусовУказанияСерий = Истина;
	
	//ОтгружаемыеТовары.ПоляСвязи.Добавить("Действие");
	//ОтгружаемыеТовары.ПоляСвязи.Добавить("УпаковочныйЛистРодитель");
	//ОтгружаемыеТовары.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.Вставить("Материалы", ОтгружаемыеТовары);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции