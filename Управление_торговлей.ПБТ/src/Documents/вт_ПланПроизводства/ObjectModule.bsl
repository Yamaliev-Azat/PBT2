Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) 
 	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.вт_ЗаказВПроизводство") Тогда
		ЭтотОбъект.ДокументОснования = ДанныеЗаполнения;
		ЭтотОбъект.СкладОсновной = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_ОсновнойСклад");
		 ЭтотОбъект.СкладПроизводства = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_СкладПроизводства");
		//Заполняем план производства из заказ производства
		ЭтотОбъект.Организация = ДанныеЗаполнения.Организация; 
		Для Каждого СтрокаЗаказа из ДанныеЗаполнения.ТОвары Цикл
			Если НЕ ЕстьВариантыПроизводства(СтрокаЗаказа.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			НовСтрока = ЭтотОбъект.Товары.Добавить();
			НовСтрока.Выбрано = Истина;
			НовСтрока.Номенклатура = СтрокаЗаказа.Номенклатура;
			НовСтрока.ВПроизводство = СтрокаЗаказа.Количество;
			НовСтрока.МинимальныйОстаток = НовСтрока.ВПроизводство;
			НовСтрока.МаксимальныйОстаток = НовСтрока.ВПроизводство;
			НовСтрока.КодСтроки = СтрокаЗаказа.КлючСтроки;
			НовСтрока.ВариантПроизводства = СтрокаЗаказа.ВариантПроизводства;
			
			МассивСтрокСырье = ДанныеЗаполнения.Сырье.НайтиСтроки(Новый Структура("КлючСвязиСтроки",СтрокаЗаказа.КлючСтроки));
			Если МассивСтрокСырье.Количество()>0 Тогда //Если в заказе производства задано сырье
				Для Каждого СтрокаСырьеЗаказа из МассивСтрокСырье Цикл
					СтрокаПлана = ЭтотОбъект.РеквизитТаблицаПлана.Добавить();
					СтрокаПлана.КодСтроки = Новый УникальныйИдентификатор;
					СтрокаПлана.КлючСтроки = НовСтрока.КодСтроки;
					СтрокаПлана.Номенклатура = СтрокаСырьеЗаказа.Номенклатура; //Добавляем сырье
					СтрокаПлана.ГотоваяПродукция = НовСтрока.Номенклатура;
					СтрокаПлана.ПотребностьПоготовойПродукции = СтрокаСырьеЗаказа.Количество;
					СтрокаПлана.ПланПроизводства = СтрокаЗаказа.Количество;
					Если ЕстьВариантыПроизводства(СтрокаПлана.Номенклатура) Тогда //Если эту часть сырья саму нужно произвести
							НовСтрока2 = ЭтотОбъект.Товары.Добавить();
							НовСтрока2.Выбрано = Истина;
							НовСтрока2.Номенклатура = СтрокаПлана.Номенклатура;
							НовСтрока2.ВПроизводство = СтрокаПлана.ПотребностьПоготовойПродукции;
							НовСтрока2.МинимальныйОстаток = СтрокаПлана.Номенклатура.вт_МинимальныйЗапас;
							НовСтрока2.МаксимальныйОстаток = СтрокаПлана.Номенклатура.вт_МаксимальныйЗапас;
							НовСтрока2.КодСтроки = СтрокаПлана.КодСтроки; //Код строки в таблице продукции и плана по сырью должен совпадать
							НовСтрока2.КодСтрокиРодитель = НовСтрока.КодСтроки; //Подчинен исходному производимому изделию
							НовСтрока2.ВариантПроизводства = ПолучитьВариантПроизводстваПродукции(НовСтрока2.Номенклатура);
							
							ЗаполнитьЭлементыПроизводства(СтрокаПлана.Номенклатура, СтрокаПлана.ПланПроизводства, НовСтрока2.КодСтроки); //рекурсивно вызываем заполнение производства самой этой детали
					КонецЕсли;
					
				КонецЦикла;
			Иначе //Если в заказе не указано, то заполняем по рецептурам
				ЗаполнитьЭлементыПроизводства(НовСтрока.Номенклатура, НовСтрока.ВПроизводство, НовСтрока.КодСтроки);
			КонецЕсли;
		КонецЦикла;
	    ОбновитьТекущиеОстаткиПоПлануГотовойПродукции();
		
   КонецЕсли;
КонецПроцедуры	

Функция  ПолучитьВариантПроизводстваПродукции(Номенклатура) 
	Возврат вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(Номенклатура).Ссылка;
КонецФункции
	
Процедура ЗаполнитьЭлементыПроизводства(ПроизводимаяНоменклатура, КолВоПроизводство, КлючСтроки) Экспорт
	//Берем первый попавшийся вариант производства
	ВариантПроизводства = Справочники.вт_ВариантыПроизводстваПоТехКартам.ПустаяСсылка();
	МассивСтрокТовары = ЭтотОбъект.Товары.НайтиСтроки(Новый Структура("КодСтроки",КлючСтроки));
	ТекСтрокаПродукции = Неопределено;
	
	Если МассивСтрокТовары.Количество()>0 Тогда
		ТекСтрокаПродукции  = МассивСтрокТовары[0];
		ВариантПроизводства = ТекСтрокаПродукции.ВариантПроизводства;
	КонецЕсли;
	
	Если ВариантПроизводства.пустая() И ТекСтрокаПродукции<>Неопределено тогда
		 ВыборкаВариантов = Справочники.вт_ВариантыПроизводстваПоТехКартам.Выбрать(,ПроизводимаяНоменклатура);
		
		Пока ВыборкаВариантов.Следующий() Цикл
			Если (ТекСтрокаПродукции.Характеристика = ВыборкаВариантов.Характеристика)
				 ИЛИ НЕ ЗначениеЗаполнено(ТекСтрокаПродукции.Характеристика) Тогда
				 
				 Если ВыборкаВариантов.Основной Тогда
					 ВариантПроизводства = ВыборкаВариантов.Ссылка;
					 Прервать;
				 КонецЕсли;	
				 
				 Если  НЕ ВыборкаВариантов.ПометкаУдаления Тогда
					 ВариантПроизводства = ВыборкаВариантов.Ссылка;
				 КонецЕсли;	
			КонецЕсли;
			 
		КонецЦикла;
		ТекСтрокаПродукции.ВариантПроизводства = ВариантПроизводства;
	КонецЕсли;

	Если ВариантПроизводства.Пустая() ТОгда
		Возврат;
	КонецЕсли;
	
	//Сначала очищаем
	СтрокаПлана = ЭтотОбъект.РеквизитТаблицаПлана.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого СтрокаПлана из СтрокаПлана Цикл
		ЭтотОбъект.РеквизитТаблицаПлана.Удалить(СтрокаПлана);
	КонецЦикла;
	
	СтрокиОперации = ЭтотОбъект.ПланПоОперциям.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого СтрокаПлана из СтрокиОперации Цикл
		ЭтотОбъект.ПланПоОперциям.Удалить(СтрокаПлана);
	КонецЦикла;
	
	
	//Заполняем
	Для Каждого СтрокаВариантаПроизводства из ВариантПроизводства.Состав Цикл //Берем содержимое техкарты
		 СтрокаПлана = ЭтотОбъект.РеквизитТаблицаПлана.Добавить();
		 СтрокаПлана.КодСтроки = Новый УникальныйИдентификатор;
		 СтрокаПлана.КлючСтроки = КлючСтроки;
		 СтрокаПлана.Номенклатура = СтрокаВариантаПроизводства.Сырье; //Добавляем сырье
		 СтрокаПлана.ГотоваяПродукция = ПроизводимаяНоменклатура;
		 СтрокаПлана.ПотребностьПоготовойПродукции = КолВоПроизводство * СтрокаВариантаПроизводства.Количество/?(ВариантПроизводства.Количество>0,ВариантПроизводства.Количество,1);
		 СтрокаПлана.ПланПроизводства = СтрокаПлана.ПотребностьПоготовойПродукции;
		 
		 Если ЕстьВариантыПроизводства(СтрокаПлана.Номенклатура) Тогда //Если эту часть сырья саму нужно произвести
			 //Проверяем, может она уже есть
			 СтрокиТовары = ЭтотОбъект.Товары.НайтиСтроки(Новый Структура("КодСтрокиРодитель",КлючСтроки));
			 Для Каждого СтрокаТовара из СтрокиТовары Цикл
				 ЭтотОбъект.Товары.Удалить(СтрокаТовара);
			 КонецЦикла;
			 
			 ОтборПоТовару= Новый Структура("Номенклатура, КодСтрокиРодитель",СтрокаПлана.Номенклатура, КлючСтроки);
			 НайденыСтроки = ЭтотОбъект.Товары.НайтиСтроки(ОтборПоТовару);
			 Если НайденыСтроки.Количество()=0 ТОгда
				 НовСтрока = ЭтотОбъект.Товары.Добавить();
				 НовСтрока.Выбрано = Истина;
				 НовСтрока.Номенклатура = СтрокаПлана.Номенклатура;
				 НовСтрока.ВПроизводство = СтрокаПлана.ПотребностьПоготовойПродукции;
				 //НовСтрока.МинимальныйОстаток = СтрокаПлана.Номенклатура.вт_МинимальныйЗапас;
				 //НовСтрока.МаксимальныйОстаток = СтрокаПлана.Номенклатура.вт_МаксимальныйЗапас;
				 НовСтрока.КодСтроки = СтрокаПлана.КодСтроки;
				 НовСтрока.КодСтрокиРодитель = КлючСтроки; //Ставим ссылку на родительский элемент - для кого делаем
				 НовСтрока.ВариантПроизводства = ПолучитьВариантПроизводстваПродукции(НовСтрока.Номенклатура); 
				 
				 ЗаполнитьЭлементыПроизводства(СтрокаПлана.Номенклатура, СтрокаПлана.ПланПроизводства, НовСтрока.КодСтроки); //рекурсивно вызываем заполнение производства самой этой детали
			 КонецЕсли;
			  Продолжить;
		 КонецЕсли;
		
	КонецЦикла;	
	
	//Заполняем операции
	Для Каждого СтрокаВариантаПроизводства из ВариантПроизводства.Операции Цикл //Берем содержимое техкарты - операции
		СтрокаПланаОпераций = ПланПоОперциям.Добавить();
		СтрокаПланаОпераций.КодСтроки = Новый УникальныйИдентификатор;
		СтрокаПланаОпераций.КлючСтроки = КлючСтроки;
		СтрокаПланаОпераций.ГотоваяПродукция = ПроизводимаяНоменклатура;
		СтрокаПланаОпераций.Номенклатура = СтрокаВариантаПроизводства.Операция;
		СтрокаПланаОпераций.Норма = КолВоПроизводство  *  СтрокаВариантаПроизводства.НормаВремени / ВариантПроизводства.Количество;
	КонецЦикла;
КонецПроцедуры	

Процедура ОбновитьТекущиеОстаткиПоПлануГотовойПродукции() Экспорт
	//По таблице Товары определить текущие остатки и скорректировать план в производство
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВТ_ПлановыеТовары.Номенклатура
	                      |ПОМЕСТИТЬ ВТ_ПЛАНОВЫЕ
	                      |ИЗ
	                      |	&ВТ_ПлановыеТовары КАК ВТ_ПлановыеТовары
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ПЛАНОВЫЕ.Номенклатура,
	                      |	естьnull(ТоварыОрганизацийОстатки.КоличествоОстаток,0) КАК КоличествоОстаток,
	                      |	естьnull(ТоварыНаСкладахОстатки.ВНаличииОстаток,0) КАК ВНаличииОстаток
	                      |ИЗ
	                      |	ВТ_ПЛАНОВЫЕ КАК ВТ_ПЛАНОВЫЕ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&ГраницаОстатка, Организация = &Организация) КАК ТоварыОрганизацийОстатки
	                      |		ПО ВТ_ПЛАНОВЫЕ.Номенклатура = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&ГраницаОстатка, Склад В (&Склады)) КАК ТоварыНаСкладахОстатки
	                      |		ПО ВТ_ПЛАНОВЫЕ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура");	
	МассивСклады = Новый Массив;
	МассивСклады.Добавить(ЭтотОбъект.СкладОсновной);
	МассивСклады.Добавить(ЭтотОбъект.СкладПроизводства);
	
	Запрос.УстановитьПараметр("ГраницаОстатка",Новый МоментВремени(ТекущаяДата()));
	Запрос.УстановитьПараметр("ВТ_ПлановыеТовары", ЭтотОбъект.Товары);
	Запрос.УстановитьПараметр("Склады",МассивСклады);
	Запрос.УстановитьПараметр("Организация",ЭтотОбъект.Организация);
	
	ТаблОстатки = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаПлана из ЭтотОбъект.Товары ЦИкл
		   ОтборСтрок = Новый Структура("Номенклатура",СтрокаПлана.Номенклатура);
		   НайденыСтроки = ТаблОстатки.НайтиСтроки(ОтборСтрок);
		   СтрокаПлана.ВсегоОстаток = 0;
		   Если НайденыСтроки.Количество()>0 Тогда
			   СтрокаПлана.ВсегоОстаток = ?(НайденыСтроки[0].КоличествоОстаток>0,НайденыСтроки[0].КоличествоОстаток, НайденыСтроки[0].ВНаличииОстаток);
		   КонецЕсли;
		   
	КонецЦикла;
	
	//Обновляем остатки по сырью
	Запрос.УстановитьПараметр("ВТ_ПлановыеТовары", ЭтотОбъект.РеквизитТаблицаПлана);
	ТаблОстатки = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаПлана из ЭтотОбъект.РеквизитТаблицаПлана ЦИкл
		   ОтборСтрок = Новый Структура("Номенклатура",СтрокаПлана.Номенклатура);
		   НайденыСтроки = ТаблОстатки.НайтиСтроки(ОтборСтрок);
		   СтрокаПлана.ТекущийОстаток = 0;
		   Если НайденыСтроки.Количество()>0 Тогда
			   СтрокаПлана.ТекущийОстаток = ?(НайденыСтроки[0].КоличествоОстаток>0,НайденыСтроки[0].КоличествоОстаток, НайденыСтроки[0].ВНаличииОстаток);
		   КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


Функция ЕстьВариантыПроизводства(пНоменклатура) Экспорт
	РезультатОтвета = Ложь;
	ВыборкаВариантов = Справочники.вт_ВариантыПроизводстваПоТехКартам.Выбрать(,пНоменклатура);
	Пока ВыборкаВариантов.Следующий() Цикл
		 РезультатОтвета = РезультатОтвета ИЛИ НЕ ВыборкаВариантов.ПометкаУдаления; //Нас интересует что бы был хотя бы один вариант прозводства не помеченный на удаление
	КонецЦикла;
	 
	Возврат РезультатОтвета;
КонецФункции


Процедура ОбработкаПроведения(Отказ, РежимПроведения) 
	ЗаписатьПлановуюСебестоимость();
	ЗаписатьПланПроизводства();
КонецПроцедуры	

Процедура ЗаписатьПлановуюСебестоимость()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	&Период КАК Период,
	                      |	&ПланЗаказ КАК ПланЗаказ,
						  |	вт_ПланПроизводстваРеквизитТаблицаПлана.Номенклатура,
	                      |	вт_ПланПроизводстваРеквизитТаблицаПлана.ГотоваяПродукция КАК КоррНоменклатура,
	                      |	вт_ПланПроизводстваРеквизитТаблицаПлана.ПлановаяЦена  КАК Себестоимость
	                      |ИЗ
	                      |	Документ.вт_ПланПроизводства.РеквизитТаблицаПлана КАК вт_ПланПроизводстваРеквизитТаблицаПлана
	                      |ГДЕ
	                      |	вт_ПланПроизводстваРеквизитТаблицаПлана.Ссылка = &Ссылка И вт_ПланПроизводстваРеквизитТаблицаПлана.ПлановаяЦена <> 0
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
						  |	&Период КАК Период,
						  |	&ПланЗаказ КАК ПланЗаказ,
	                      |	вт_ПланПроизводстваПланПоОперциям.Номенклатура,
	                      |	вт_ПланПроизводстваПланПоОперциям.ГотоваяПродукция,
	                      |	вт_ПланПроизводстваПланПоОперциям.ПлановаяЦена * вт_ПланПроизводстваПланПоОперциям.Норма
	                      |ИЗ
	                      |	Документ.вт_ПланПроизводства.ПланПоОперциям КАК вт_ПланПроизводстваПланПоОперциям
	                      |ГДЕ
	                      |	вт_ПланПроизводстваПланПоОперциям.Ссылка = &Ссылка
	                      | И вт_ПланПроизводстваПланПоОперциям.ПлановаяЦена * вт_ПланПроизводстваПланПоОперциям.Норма<>0
						  |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
						  |	&Период КАК Период,
						  |	&ПланЗаказ КАК ПланЗаказ,
	                      |	вт_ПланПроизводстваТовары.Номенклатура,
	                      |	NULL,
	                      |	вт_ПланПроизводстваТовары.ПлановаяЦена
	                      |ИЗ
	                      |	Документ.вт_ПланПроизводства.Товары КАК вт_ПланПроизводстваТовары
	                      |ГДЕ
	                      |	вт_ПланПроизводстваТовары.Ссылка = &Ссылка
	                      |	И вт_ПланПроизводстваТовары.КодСтрокиРодитель = &КодСтрокиРодительПустой
						  | И вт_ПланПроизводстваТовары.ПлановаяЦена <> 0");
		
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
		Запрос.УстановитьПараметр("ПланЗаказ",?(ЗначениеЗаполнено(ЭтотОбъект.ДокументОснования),ЭтотОбъект.ДокументОснования,ЭтотОбъект.Ссылка));
		Запрос.УстановитьПараметр("КодСтрокиРодительПустой", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
		Запрос.УстановитьПараметр("Период", ЭтотОбъект.Дата);
		ЭтотОбъект.Движения.вт_ПлановаяСебестоимостьВыпуска.Записывать=Истина;
		ЭтотОбъект.Движения.вт_ПлановаяСебестоимостьВыпуска.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Функция НайтиЗаказПроизводстваПоКодуПродукции(КодСтроки) Экспорт
	Если ЗначениеЗаполнено(ЭтотОбъект.ДокументОснования) Тогда
		Возврат ЭтотОбъект.ДокументОснования;
	КонецЕсли;
	
	МассивСтрокПоЗаказам = ЭтотОбъект.РеквизитПланПоЗаказам.НайтиСтроки(Новый Структура("КодСтроки",КодСтроки));
	Если МассивСтрокПоЗаказам.количество()>0 Тогда
		 Возврат МассивСтрокПоЗаказам[0].Заказ;
	КонецЕсли;	
	
	
	МассивСтрокПоТоварам = ЭтотОбъект.Товары.НайтиСтроки(Новый Структура("КодСтроки",КодСтроки));
	Для Каждого ЭлементСтрокиТовары из МассивСтрокПоТоварам Цикл
		ЗаказПроизводства = НайтиЗаказПроизводстваПоКодуПродукции(ЭлементСтрокиТовары.КодСтрокиРодитель);
		Если ЗаказПроизводства<>Неопределено Тогда
			Возврат ЗаказПроизводства;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Неопределено;
	 
КонецФункции

Процедура ЗаписатьПланПроизводства()
	
	ПустоеКод = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	
	Движения.вт_ПланПроизводстваТоваров.Записывать = Истина;
	Движения.ПланПроизводства.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		ЗаказДляЗаписи = Неопределено;
		Если ЗначениеЗаполнено(ДокументОснования) Тогда
			ЗаказДляЗаписи =   ДокументОснования;
		Иначе
			 ЗаказДляЗаписи = НайтиЗаказПроизводстваПоКодуПродукции(ТекСтрокаТовары.КодСтроки);
		КонецЕсли;	
		
		Движение = Движения.вт_ПланПроизводстваТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.ЗаказПроизводства = ЗаказДляЗаписи;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Количество = ТекСтрокаТовары.ВПроизводство;
		
		Движение = Движения.ПланПроизводства.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Количество = ТекСтрокаТовары.ВПроизводство;
		
	КонецЦикла;

	
КонецПроцедуры