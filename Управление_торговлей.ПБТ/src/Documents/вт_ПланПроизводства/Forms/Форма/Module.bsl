&НаСервере
Процедура УстановитьОтборПоЗаказамСервер()
  ЗАпрос = Новый Запрос("ВЫБРАТЬ
                        |	вт_ЗаказВПроизводствоОстатки.Номенклатура КАК Номенклатура,
                        |	вт_ЗаказВПроизводствоОстатки.Характеристика КАК Характеристика,
                        |	вт_ЗаказВПроизводствоОстатки.КоличествоОстаток КАК ВЗаказе,
                        |	вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства КАК Заказ,
                        |	ТоварыОрганизацийОстатки.КоличествоОстаток КАК ТекущийОстаток,
                        |	вт_ЗаказВПроизводствоТовары.ВариантПроизводства КАК ВариантПроизводства
                        |ИЗ
                        |	РегистрНакопления.вт_ЗаказВПроизводство.Остатки(
                        |			&Дата,
                        |			Организация = &Организация
                        |				И Склад = &Склад) КАК вт_ЗаказВПроизводствоОстатки
                        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
                        |				&Дата,
                        |				Организация = &Организация
                        |					И АналитикаУчетаНоменклатуры.МестоХранения В (&Склад)) КАК ТоварыОрганизацийОстатки
                        |		ПО вт_ЗаказВПроизводствоОстатки.Организация = ТоварыОрганизацийОстатки.Организация
                        |			И вт_ЗаказВПроизводствоОстатки.Склад = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.МестоХранения
                        |			И вт_ЗаказВПроизводствоОстатки.Номенклатура = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура
                        |			И вт_ЗаказВПроизводствоОстатки.Характеристика = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика
                        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ЗаказВПроизводство.Товары КАК вт_ЗаказВПроизводствоТовары
                        |		ПО вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства = вт_ЗаказВПроизводствоТовары.Ссылка
                        |			И вт_ЗаказВПроизводствоОстатки.Номенклатура = вт_ЗаказВПроизводствоТовары.Номенклатура
                        |			И вт_ЗаказВПроизводствоОстатки.Характеристика = вт_ЗаказВПроизводствоТовары.Характеристика");
						
						
 Запрос.УстановитьПараметр("Дата",КонецДня(Объект.Дата));
 Запрос.УстановитьПараметр("Организация",Объект.Организация);
 Запрос.УстановитьПараметр("Склад",Объект.СкладПроизводства);
 Объект.РеквизитПланПоЗаказам.Загрузить(Запрос.Выполнить().Выгрузить()); 
 Объект.Товары.Очистить();
 Объект.РеквизитТаблицаПлана.Очистить();
 
 ЗаполнитьПланГотовойПродукцииПоЗаказамСервер();
 
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПлануСервер()
	
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//					  |	втНоменклатура.Ссылка КАК Номенклатура,
	//					  |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ТекущийОстаток,
	//					  |	втНоменклатура.вт_МинимальныйЗапас как КритическийОстаток,
	//					  |	втНоменклатура.вт_МаксимальныйЗапас КАК МаксЗапас
	//					  |ИЗ
	//					  |	Справочник.Номенклатура КАК втНоменклатура
	//					  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	//					  |				&Дата,
	//					  |				Склад = &СкладПроизводство
	//					  |					ИЛИ Склад = &СкладОсновной
	//					  |						И Номенклатура.ВидНоменклатуры = &ПродукцияКомоды) КАК ТоварыНаСкладахОстатки
	//					  |		ПО втНоменклатура.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
	//					  |ГДЕ
	//					  |	втНоменклатура.вт_МинимальныйЗапас > 0
	//					  |	И втНоменклатура.вт_МаксимальныйЗапас > 0
	//					  |");
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//					  |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Ссылка,
	//					  |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) КАК ОстатокИзделия,
	//					  |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
	//					  |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас
	//					  |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ
	//					  |ИЗ
	//					  |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	//					  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	//					  |				&Дата,
	//					  |				Склад = &СкладПроизводство
	//					  |					ИЛИ Склад = &СкладОсновной) КАК ТоварыНаСкладахОстатки
	//					  |		ПО ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец = ТоварыНаСкладахОстатки.Номенклатура
	//					  |ГДЕ
	//					  |	(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас > 0
	//					  |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас > 0)
	//					  |
	//					  |ОБЪЕДИНИТЬ ВСЕ
	//					  |
	//					  |ВЫБРАТЬ
	//					  |	СпрНоменклатура.Ссылка,
	//					  |	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0),
	//					  |	СпрНоменклатура.вт_МинимальныйЗапас,
	//					  |	СпрНоменклатура.вт_МаксимальныйЗапас
	//					  |ИЗ
	//					  |	Справочник.Номенклатура КАК СпрНоменклатура
	//					  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	//					  |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатурыТовары.Номенклатура
	//					  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	//					  |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатуры.Владелец
	//					  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	//					  |				&Дата,
	//					  |				Склад = &СкладПроизводство
	//					  |					ИЛИ Склад = &СкладОсновной) КАК ТоварыНаСкладахОстатки
	//					  |		ПО СпрНоменклатура.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
	//					  |ГДЕ
	//					  |	(СпрНоменклатура.вт_МинимальныйЗапас > 0
	//					  |			ИЛИ СпрНоменклатура.вт_МаксимальныйЗапас > 0)
	//					  |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка, 1) = 1
	//					  |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, 1) = 1
	//					  |;
	//					  |
	//					  |////////////////////////////////////////////////////////////////////////////////
	//					  |ВЫБРАТЬ
	//					  |	втНоменклатура.Ссылка КАК Номенклатура,
	//					  |	СУММА(втНоменклатура.ОстатокИзделия) КАК ТекущийОстаток,
	//					  |	СУММА(втНоменклатура.вт_МинимальныйЗапас) КАК КритическийОстаток,
	//					  |	СУММА(втНоменклатура.вт_МаксимальныйЗапас) КАК МаксЗапас,
	//					  |	СУММА(ВЫБОР
	//					  |			КОГДА втНоменклатура.вт_МаксимальныйЗапас >= втНоменклатура.ОстатокИзделия
	//					  |				ТОГДА втНоменклатура.вт_МаксимальныйЗапас - втНоменклатура.ОстатокИзделия
	//					  |			ИНАЧЕ втНоменклатура.вт_МаксимальныйЗапас
	//					  |		КОНЕЦ) КАК ПланПроизводства,
	//					  |	втНоменклатура.Ссылка.Наименование КАК СсылкаНаименование
	//					  |ИЗ
	//					  |	ВТ_ИЗДЕЛИЯ КАК втНоменклатура
	//					  |ГДЕ
	//					  |	(втНоменклатура.ОстатокИзделия <= втНоменклатура.вт_МинимальныйЗапас
	//					  |			ИЛИ втНоменклатура.ОстатокИзделия >= втНоменклатура.вт_МинимальныйЗапас
	//					  |				И втНоменклатура.ОстатокИзделия <= втНоменклатура.вт_МаксимальныйЗапас)
	//					  |
	//					  |СГРУППИРОВАТЬ ПО
	//					  |	втНоменклатура.Ссылка,
	//					  |	втНоменклатура.Ссылка.Наименование
	//					  |
	//					  |УПОРЯДОЧИТЬ ПО
	//					  |	СсылкаНаименование");
	
	
 //Запрос = Новый Запрос("ВЫБРАТЬ
 //						 |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Ссылка,
 //						 |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) КАК ОстатокИзделия,
 //						 |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
 //						 |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас
 //						 |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ
 //						 |ИЗ
 //						 |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
 //						 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
 //						 |		ПО ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец = ТоварыНаСкладахОстатки.Номенклатура
 //						 |			И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
 //						 |				ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной)
 //						 |ГДЕ
 //						 |	(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас > 0
 //						 |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас > 0)
 //						 |
 //						 |ОБЪЕДИНИТЬ ВСЕ
 //						 |
 //						 |ВЫБРАТЬ
 //						 |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
 //						 |	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0),
 //						 |	0,
 //						 |	0
 //						 |ИЗ
 //						 |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
 //						 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
 //						 |		ПО ВариантыКомплектацииНоменклатурыТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
 //						 |			И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
 //						 |				ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной)
 //						 |ГДЕ
 //						 |	(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас > 0
 //						 |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас > 0)
 //						 |
 //						 |ОБЪЕДИНИТЬ ВСЕ
 //						 |
 //						 |ВЫБРАТЬ
 //						 |	СпрНоменклатура.Ссылка,
 //						 |	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0),
 //						 |	СпрНоменклатура.вт_МинимальныйЗапас,
 //						 |	СпрНоменклатура.вт_МаксимальныйЗапас
 //						 |ИЗ
 //						 |	Справочник.Номенклатура КАК СпрНоменклатура
 //						 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
 //						 |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатурыТовары.Номенклатура
 //						 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
 //						 |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатуры.Владелец
 //						 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
 //						 |		ПО СпрНоменклатура.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
 //						 |			И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
 //						 |				ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной)
 //						 |ГДЕ
 //						 |	(СпрНоменклатура.вт_МинимальныйЗапас > 0
 //						 |			ИЛИ СпрНоменклатура.вт_МаксимальныйЗапас > 0)
 //						 |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка, 1) = 1
 //						 |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, 1) = 1
 //						 |;
 //						 |
 //						 |////////////////////////////////////////////////////////////////////////////////
 //						 |ВЫБРАТЬ
 //						 |	втНоменклатура.Ссылка КАК Номенклатура,
 //						 |	СУММА(втНоменклатура.ОстатокИзделия) КАК ТекущийОстаток,
 //						 |	СУММА(втНоменклатура.вт_МинимальныйЗапас) КАК КритическийОстаток,
 //						 |	СУММА(втНоменклатура.вт_МаксимальныйЗапас) КАК МаксЗапас
 //						 |ПОМЕСТИТЬ ВТ_ПРЕД_ИТОГ
 //						 |ИЗ
 //						 |	ВТ_ИЗДЕЛИЯ КАК втНоменклатура
 //						 |
 //						 |СГРУППИРОВАТЬ ПО
 //						 |	втНоменклатура.Ссылка
 //						 |;
 //						 |
 //						 |////////////////////////////////////////////////////////////////////////////////
 //						 |ВЫБРАТЬ
 //						 |	втНоменклатура.Номенклатура,
 //						 |	втНоменклатура.ТекущийОстаток,
 //						 |	втНоменклатура.КритическийОстаток,
 //						 |	втНоменклатура.МаксЗапас,
 //						 |	ВЫБОР
 //						 |		КОГДА втНоменклатура.МаксЗапас - втНоменклатура.ТекущийОстаток > 0
 //						 |				И втНоменклатура.МаксЗапас > 0
 //						 |			ТОГДА втНоменклатура.МаксЗапас - втНоменклатура.ТекущийОстаток
 //						 |		ИНАЧЕ ВЫБОР
 //						 |				КОГДА втНоменклатура.КритическийОстаток - втНоменклатура.ТекущийОстаток > 0
 //						 |					ТОГДА втНоменклатура.КритическийОстаток - втНоменклатура.ТекущийОстаток
 //						 |				ИНАЧЕ 0
 //						 |			КОНЕЦ
 //						 |	КОНЕЦ КАК ПланПроизводства,
 //						 |	втНоменклатура.Номенклатура.Наименование КАК СсылкаНаименование
 //						 |ИЗ
 //						 |	ВТ_ПРЕД_ИТОГ КАК втНоменклатура
 //						 |ГДЕ
 //						 |	(втНоменклатура.ТекущийОстаток < втНоменклатура.КритическийОстаток
 //						 |			ИЛИ (втНоменклатура.ТекущийОстаток >= втНоменклатура.КритическийОстаток
 //						 |				И втНоменклатура.ТекущийОстаток < втНоменклатура.МаксЗапас))
 //						 |
 //						 |УПОРЯДОЧИТЬ ПО
 //						 |	втНоменклатура.Номенклатура.Наименование");
 
  //Запрос = Новый Запрос("ВЫБРАТЬ
  //					  |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Ссылка,
  //					  |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.Ссылка КАК НоменклатураОстатка,
  //					  |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок КАК КоэффУпаковки,
  //					  |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
  //					  |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас
  //					  |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ
  //					  |ИЗ
  //					  |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
  //					  |ГДЕ
  //					  |	(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас > 0
  //					  |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас > 0)
  //					  |;
  //					  |
  //					  |////////////////////////////////////////////////////////////////////////////////
  //					  |ВЫБРАТЬ
  //					  |	СпрНоменклатура.Ссылка,
  //					  |	СпрНоменклатура.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
  //					  |	СпрНоменклатура.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас
  //					  |ПОМЕСТИТЬ ВТ_ТОВАРЫ
  //					  |ИЗ
  //					  |	Справочник.Номенклатура КАК СпрНоменклатура
  //					  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
  //					  |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатурыТовары.Номенклатура
  //					  |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
  //					  |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатуры.Владелец
  //					  |ГДЕ
  //					  |	(СпрНоменклатура.вт_МинимальныйЗапас > 0
  //					  |			ИЛИ СпрНоменклатура.вт_МаксимальныйЗапас > 0)
  //					  |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка, 1) = 1
  //					  |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, 1) = 1
  //					  |;
  //					  |
  //					  |////////////////////////////////////////////////////////////////////////////////
  //					  |ВЫБРАТЬ
  //					  |	ВТ.Ссылка КАК Номенклатура,
  //					  |	ВТ.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
  //					  |	ВТ.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас,
  //					  |	ТоварыНаСкладахОстатки.ВНаличииОстаток * ВТ.КоэффУпаковки КАК Остаток
  //					  |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ_ОСТ
  //					  |ИЗ
  //					  |	ВТ_ИЗДЕЛИЯ КАК ВТ
  //					  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
  //					  |		ПО ВТ.НоменклатураОстатка = ТоварыНаСкладахОстатки.Номенклатура
  //					  |			И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
  //					  |				ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной)
  //					  |;
  //					  |
  //					  |////////////////////////////////////////////////////////////////////////////////
  //					  |ВЫБРАТЬ
  //					  |	ВТ.Ссылка,
  //					  |	ВТ.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
  //					  |	ВТ.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас,
  //					  |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК Остаток
  //					  |ПОМЕСТИТЬ ВТ_ТОВАРЫ_ОСТ
  //					  |ИЗ
  //					  |	ВТ_ТОВАРЫ КАК ВТ
  //					  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
  //					  |		ПО ВТ.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
  //					  |			И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
  //					  |				ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной)
  //					  |;
  //					  |
  //					  |////////////////////////////////////////////////////////////////////////////////
  //					  |ВЫБРАТЬ
  //					  |	ВТ_ТОВАРЫ_ОСТ.Ссылка,
  //					  |	ВТ_ТОВАРЫ_ОСТ.вт_МинимальныйЗапас,
  //					  |	ВТ_ТОВАРЫ_ОСТ.вт_МаксимальныйЗапас,
  //					  |	ВТ_ТОВАРЫ_ОСТ.Остаток
  //					  |ПОМЕСТИТЬ ВТ_ПРЕДИТОГ
  //					  |ИЗ
  //					  |	ВТ_ТОВАРЫ_ОСТ КАК ВТ_ТОВАРЫ_ОСТ
  //					  |
  //					  |ОБЪЕДИНИТЬ ВСЕ
  //					  |
  //					  |ВЫБРАТЬ
  //					  |	ВТ_ИЗДЕЛИЯ_ОСТ.Номенклатура,
  //					  |	СУММА(ВТ_ИЗДЕЛИЯ_ОСТ.вт_МинимальныйЗапас),
  //					  |	СУММА(ВТ_ИЗДЕЛИЯ_ОСТ.вт_МаксимальныйЗапас),
  //					  |	СУММА(ВТ_ИЗДЕЛИЯ_ОСТ.Остаток)
  //					  |ИЗ
  //					  |	ВТ_ИЗДЕЛИЯ_ОСТ КАК ВТ_ИЗДЕЛИЯ_ОСТ
  //					  |
  //					  |СГРУППИРОВАТЬ ПО
  //					  |	ВТ_ИЗДЕЛИЯ_ОСТ.Номенклатура
  //					  |;                              СкладРезерв
  //					  |
  //					  |////////////////////////////////////////////////////////////////////////////////
  //					  |ВЫБРАТЬ
  //					  |	ВТ_ПРЕДИТОГ.Ссылка КАК Номенклатура,
  //					  |	ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас КАК КритическийОстаток,
  //					  |	ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас КАК МаксЗапас,
  //					  |	ВТ_ПРЕДИТОГ.Остаток КАК ТекущийОстаток,
  //					  |	ВЫБОР
  //					  |		КОГДА ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток > 0
  //					  |				И ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас > 0
  //					  |			ТОГДА ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток
  //					  |		ИНАЧЕ ВЫБОР
  //					  |				КОГДА ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток > 0
  //					  |					ТОГДА ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток
  //					  |				ИНАЧЕ 0
  //					  |			КОНЕЦ
  //					  |	КОНЕЦ КАК ПланПроизводства
  //					  |ИЗ
  //					  |	ВТ_ПРЕДИТОГ КАК ВТ_ПРЕДИТОГ
  //					  |ГДЕ
  //					  |	(ВТ_ПРЕДИТОГ.Остаток < ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас
  //					  |			ИЛИ ВТ_ПРЕДИТОГ.Остаток >= ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас
  //					  |				И ВТ_ПРЕДИТОГ.Остаток < ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас)
  //					  |
  //					  |УПОРЯДОЧИТЬ ПО
  //					  |	ВТ_ПРЕДИТОГ.Ссылка.Наименование");

 //Запрос = Новый Запрос("ВЫБРАТЬ
 //					   |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Ссылка,
 //					   |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.Ссылка КАК НоменклатураОстатка,
 //					   |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок КАК КоэффУпаковки,
 //					   |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
 //					   |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас
 //					   |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ
 //					   |ИЗ
 //					   |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
 //					   |ГДЕ
 //					   |	(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас > 0
 //					   |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас > 0)
 //					   |;
 //					   |
 //					   |////////////////////////////////////////////////////////////////////////////////
 //					   |ВЫБРАТЬ
 //					   |	СпрНоменклатура.Ссылка,
 //					   |	СпрНоменклатура.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
 //					   |	СпрНоменклатура.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас
 //					   |ПОМЕСТИТЬ ВТ_ТОВАРЫ
 //					   |ИЗ
 //					   |	Справочник.Номенклатура КАК СпрНоменклатура
 //					   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
 //					   |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатурыТовары.Номенклатура
 //					   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
 //					   |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатуры.Владелец
 //					   |ГДЕ
 //					   |	(СпрНоменклатура.вт_МинимальныйЗапас > 0
 //					   |			ИЛИ СпрНоменклатура.вт_МаксимальныйЗапас > 0)
 //					   |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка, 1) = 1
 //					   |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, 1) = 1
 //					   |;
 //					   |
 //					   |////////////////////////////////////////////////////////////////////////////////
 //					   |ВЫБРАТЬ
 //					   |	ВТ.Ссылка КАК Номенклатура,
 //					   |	МИНИМУМ(ВТ.вт_МинимальныйЗапас) КАК вт_МинимальныйЗапас,
 //					   |	МАКСИМУМ(ВТ.вт_МаксимальныйЗапас) КАК вт_МаксимальныйЗапас,
 //					   |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток * ВТ.КоэффУпаковки) КАК Остаток,
 //					   |	ВТ.НоменклатураОстатка
 //					   |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ_ОСТ
 //					   |ИЗ
 //					   |	ВТ_ИЗДЕЛИЯ КАК ВТ
 //					   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
 //					   |		ПО ВТ.НоменклатураОстатка = ТоварыНаСкладахОстатки.Номенклатура
 //					   |			И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
 //					   |				ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной)
 //					   |
 //					   |СГРУППИРОВАТЬ ПО
 //					   |	ВТ.Ссылка,
 //					   |	ВТ.НоменклатураОстатка;
 //   					|////////////////////////////////////////////////////////////////////////////////
 //					   |ВЫБРАТЬ
 //					   |	ВТ.Ссылка,
 //					   |	ВТ.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
 //					   |	ВТ.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас,
 //					   |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК Остаток
 //					   |ПОМЕСТИТЬ ВТ_ТОВАРЫ_ОСТ
 //					   |ИЗ
 //					   |	ВТ_ТОВАРЫ КАК ВТ
 //					   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
 //					   |		ПО ВТ.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
 //					   |			И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
 //					   |				ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной)
 //					   |;
 //					   |
 //					   |////////////////////////////////////////////////////////////////////////////////
 //					   |ВЫБРАТЬ
 //					   |	ВТ_ТОВАРЫ_ОСТ.Ссылка,
 //					   |	ВТ_ТОВАРЫ_ОСТ.вт_МинимальныйЗапас,
 //					   |	ВТ_ТОВАРЫ_ОСТ.вт_МаксимальныйЗапас,
 //					   |	ВТ_ТОВАРЫ_ОСТ.Остаток
 //					   |ПОМЕСТИТЬ ВТ_ПРЕДИТОГ
 //					   |ИЗ
 //					   |	ВТ_ТОВАРЫ_ОСТ КАК ВТ_ТОВАРЫ_ОСТ
 //					   |
 //					   |ОБЪЕДИНИТЬ ВСЕ
 //					   |
 //					   |ВЫБРАТЬ
 //					   |	ВТ_ИЗДЕЛИЯ_ОСТ.Номенклатура,
 //					   |	СУММА(ВТ_ИЗДЕЛИЯ_ОСТ.вт_МинимальныйЗапас),
 //					   |	СУММА(ВТ_ИЗДЕЛИЯ_ОСТ.вт_МаксимальныйЗапас),
 //					   |	СУММА(ВТ_ИЗДЕЛИЯ_ОСТ.Остаток)
 //					   |ИЗ
 //					   |	ВТ_ИЗДЕЛИЯ_ОСТ КАК ВТ_ИЗДЕЛИЯ_ОСТ
 //					   |
 //					   |СГРУППИРОВАТЬ ПО
 //					   |	ВТ_ИЗДЕЛИЯ_ОСТ.Номенклатура
 //					   |;
 //					   |
 //					   |////////////////////////////////////////////////////////////////////////////////
 //					   |ВЫБРАТЬ
 //					   |	ВТ_ПРЕДИТОГ.Ссылка КАК Номенклатура,
 //					   |	ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас КАК КритическийОстаток,
 //					   |	ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас КАК МаксЗапас,
 //					   |	ВТ_ПРЕДИТОГ.Остаток КАК ТекущийОстаток,
 //					   |	ВЫБОР
 //					   |		КОГДА ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток > 0
 //					   |				И ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас > 0
 //					   |			ТОГДА ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток
 //					   |		ИНАЧЕ ВЫБОР
 //					   |				КОГДА ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток > 0
 //					   |					ТОГДА ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток
 //					   |				ИНАЧЕ 0
 //					   |			КОНЕЦ
 //					   |	КОНЕЦ КАК ПланПроизводства
 //					   |ИЗ
 //					   |	ВТ_ПРЕДИТОГ КАК ВТ_ПРЕДИТОГ
 //					   |ГДЕ
 //					   |	(ВТ_ПРЕДИТОГ.Остаток < ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас
 //					   |			ИЛИ ВТ_ПРЕДИТОГ.Остаток >= ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас
 //					   |				И ВТ_ПРЕДИТОГ.Остаток < ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас)
 //					   |
 //					   |УПОРЯДОЧИТЬ ПО
 //					   |	ВТ_ПРЕДИТОГ.Ссылка.Наименование");

 //МассивВидов = Новый Массив;
 //МассивВидов.Добавить(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товар (пр. ТМЦ)"));
 //МассивВидов.Добавить(Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Комплектующие"));
 //МассивВидов.Добавить(справочники.ВидыНоменклатуры.НайтиПоНаименованию("Готовая продукция ""Комоды"""));
 МассивВидов = ПолучитьВидыНоменклатурыДляОстатков();
 Если НЕ РеквизитРезерв Тогда
	Запрос = Новый Запрос("ВЫБРАТЬ
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Ссылка,
                        |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.Ссылка КАК НоменклатураОстатка,
                        |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок КАК КоэффУпаковки,
                        |	СУММА(ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас, 0)) КАК вт_МинимальныйЗапас,
                        |	СУММА(ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас, 0)) КАК вт_МаксимальныйЗапас
                        |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ
                        |ИЗ
                        |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
                        |ГДЕ
                        |	(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйЗапас > 0
                        |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйЗапас > 0) 
						|			И  ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ВидНоменклатуры В (&ВидыНоменклатуры)
                        |
                        |СГРУППИРОВАТЬ ПО
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
                        |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.Ссылка,
                        |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок
                        |
                        |ОБЪЕДИНИТЬ ВСЕ
                        |
                        |ВЫБРАТЬ РАЗЛИЧНЫЕ
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
                        |	1,
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура.вт_МинимальныйЗапас,
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура.вт_МаксимальныйЗапас
                        |ИЗ
                        |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
                        |ГДЕ
                        |	(ВариантыКомплектацииНоменклатурыТовары.Номенклатура.вт_МинимальныйЗапас > 0
                        |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Номенклатура.вт_МаксимальныйЗапас > 0)
						|			И ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ВидНоменклатуры В (&ВидыНоменклатуры)
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ.Ссылка КАК Номенклатура,
                        |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток * ВТ.КоэффУпаковки) КАК Остаток
                        |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ_ОСТ
                        |ИЗ
                        |	ВТ_ИЗДЕЛИЯ КАК ВТ
                        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
                        |		ПО (ВТ.НоменклатураОстатка = ТоварыНаСкладахОстатки.Номенклатура
                        |					И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
                        |						ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной) )
						|	ГДЕ ВТ.Ссылка.ВидНоменклатуры В (&ВидыНоменклатуры)
                        |				
                        |СГРУППИРОВАТЬ ПО
                        |	ВТ.Ссылка
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ_ИЗДЕЛИЯ.Ссылка,
                        |	СУММА(ВТ_ИЗДЕЛИЯ.вт_МинимальныйЗапас) КАК вт_МинимальныйЗапас,
                        |	СУММА(ВТ_ИЗДЕЛИЯ.вт_МаксимальныйЗапас) КАК вт_МаксимальныйЗапас ,
                        |	ЕСТЬNULL(ВТ_ИЗДЕЛИЯ_ОСТ.Остаток,0) КАК  Остаток
                        |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ
                        |ИЗ
                        |	ВТ_ИЗДЕЛИЯ КАК ВТ_ИЗДЕЛИЯ
                        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИЗДЕЛИЯ_ОСТ КАК ВТ_ИЗДЕЛИЯ_ОСТ
                        |		ПО ВТ_ИЗДЕЛИЯ.Ссылка = ВТ_ИЗДЕЛИЯ_ОСТ.Номенклатура
						|СГРУППИРОВАТЬ ПО
                        |	ВТ_ИЗДЕЛИЯ.Ссылка, ЕСТЬNULL(ВТ_ИЗДЕЛИЯ_ОСТ.Остаток,0)
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	СпрНоменклатура.Ссылка,
                        |	СпрНоменклатура.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
                        |	СпрНоменклатура.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас
                        |ПОМЕСТИТЬ ВТ_ТОВАРЫ
                        |ИЗ
                        |	Справочник.Номенклатура КАК СпрНоменклатура
                        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
                        |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатурыТовары.Номенклатура
                        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
                        |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатуры.Владелец
                        |ГДЕ
                        |	(СпрНоменклатура.вт_МинимальныйЗапас > 0
                        |			ИЛИ СпрНоменклатура.вт_МаксимальныйЗапас > 0)
                        |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка, 1) = 1
                        |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, 1) = 1
						|	И СпрНоменклатура.Ссылка.ВидНоменклатуры В (&ВидыНоменклатуры)
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ.Ссылка,
                        |	ВТ.вт_МинимальныйЗапас КАК вт_МинимальныйЗапас,
                        |	ВТ.вт_МаксимальныйЗапас КАК вт_МаксимальныйЗапас,
                        |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК Остаток
                        |ПОМЕСТИТЬ ВТ_ТОВАРЫ_ОСТ
                        |ИЗ
                        |	ВТ_ТОВАРЫ КАК ВТ
                        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
                        |		ПО ВТ.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
                        |			И (ТоварыНаСкладахОстатки.Склад = &СкладПроизводство
                        |				ИЛИ ТоварыНаСкладахОстатки.Склад = &СкладОсновной)
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ_ТОВАРЫ_ОСТ.Ссылка,
                        |	ВТ_ТОВАРЫ_ОСТ.вт_МинимальныйЗапас,
                        |	ВТ_ТОВАРЫ_ОСТ.вт_МаксимальныйЗапас,
                        |	ВТ_ТОВАРЫ_ОСТ.Остаток
                        |ПОМЕСТИТЬ ВТ_ПРЕДИТОГ
                        |ИЗ
                        |	ВТ_ТОВАРЫ_ОСТ КАК ВТ_ТОВАРЫ_ОСТ
                        |
                        |ОБЪЕДИНИТЬ ВСЕ
                        |
                        |ВЫБРАТЬ
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ.Ссылка,
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ.вт_МинимальныйЗапас,
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ.вт_МаксимальныйЗапас,
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ.Остаток
                        |ИЗ
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ КАК ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ_ПРЕДИТОГ.Ссылка КАК Номенклатура,
                        |	ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас КАК КритическийОстаток,
                        |	ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас КАК МаксЗапас,
                        |	ВТ_ПРЕДИТОГ.Остаток КАК ТекущийОстаток,
                        |	ВЫБОР
                        |		КОГДА ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток > 0
                        |				И ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас > 0
                        |			ТОГДА ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток
                        |		ИНАЧЕ ВЫБОР
                        |				КОГДА ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток > 0
                        |					ТОГДА ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток
                        |				ИНАЧЕ 0
                        |			КОНЕЦ
                        |	КОНЕЦ КАК ПланПроизводства
                        |ИЗ
                        |	ВТ_ПРЕДИТОГ КАК ВТ_ПРЕДИТОГ
 						|ГДЕ
 						|	(ВТ_ПРЕДИТОГ.Остаток < ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас
 						|			ИЛИ (ВТ_ПРЕДИТОГ.Остаток >= ВТ_ПРЕДИТОГ.вт_МинимальныйЗапас
 						|				И ВТ_ПРЕДИТОГ.Остаток < ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас))
                        |
                        |УПОРЯДОЧИТЬ ПО
                        |	ВТ_ПРЕДИТОГ.Ссылка.Наименование");	
		Запрос.УстановитьПараметр("СкладПроизводство", Объект.СкладПроизводства); // Справочники.Склады.НайтиПоНаименованию("Cклад Производства"));
		Запрос.УстановитьПараметр("СкладОсновной",Объект.СкладОсновной); //  Справочники.Склады.НайтиПоНаименованию("Основной"));	  
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура КАК Ссылка,
                        |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.Ссылка КАК НоменклатураОстатка,
                        |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок КАК КоэффУпаковки,
                        |	СУММА(ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйРезерв, 0)) КАК вт_МинимальныйРезерв,
                        |	СУММА(ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок * ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МаксимальныйРезерв, 0)) КАК вт_МаксимальныйРезерв
                        |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ
                        |ИЗ
                        |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
                        |ГДЕ
                        |	(ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйРезерв > 0
                        |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.вт_МинимальныйРезерв > 0) 
						|			И  ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ВидНоменклатуры В (&ВидыНоменклатуры)
                        |
                        |СГРУППИРОВАТЬ ПО
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
                        |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец.Ссылка,
                        |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок
                        |
                        |ОБЪЕДИНИТЬ ВСЕ
                        |
                        |ВЫБРАТЬ РАЗЛИЧНЫЕ
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
                        |	1,
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура.вт_МинимальныйРезерв,
                        |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура.вт_МаксимальныйРезерв
                        |ИЗ
                        |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
                        |ГДЕ
                        |	(ВариантыКомплектацииНоменклатурыТовары.Номенклатура.вт_МинимальныйРезерв > 0
                        |			ИЛИ ВариантыКомплектацииНоменклатурыТовары.Номенклатура.вт_МаксимальныйЗапас > 0)
						|			И ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ВидНоменклатуры В (&ВидыНоменклатуры)
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ.Ссылка КАК Номенклатура,
                        |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток * ВТ.КоэффУпаковки) КАК Остаток
                        |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ_ОСТ
                        |ИЗ
                        |	ВТ_ИЗДЕЛИЯ КАК ВТ
                        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
                        |		ПО (ВТ.НоменклатураОстатка = ТоварыНаСкладахОстатки.Номенклатура
                        |					И ТоварыНаСкладахОстатки.Склад = &СкладРезерв )
						|	ГДЕ ВТ.Ссылка.ВидНоменклатуры В (&ВидыНоменклатуры)
                        |				
                        |СГРУППИРОВАТЬ ПО
                        |	ВТ.Ссылка
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ_ИЗДЕЛИЯ.Ссылка,
                        |	СУММА(ВТ_ИЗДЕЛИЯ.вт_МинимальныйРезерв) КАК вт_МинимальныйРезерв,
                        |	СУММА(ВТ_ИЗДЕЛИЯ.вт_МаксимальныйРезерв) КАК вт_МаксимальныйРезерв ,
                        |	ЕСТЬNULL(ВТ_ИЗДЕЛИЯ_ОСТ.Остаток,0) КАК  Остаток
                        |ПОМЕСТИТЬ ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ
                        |ИЗ
                        |	ВТ_ИЗДЕЛИЯ КАК ВТ_ИЗДЕЛИЯ
                        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИЗДЕЛИЯ_ОСТ КАК ВТ_ИЗДЕЛИЯ_ОСТ
                        |		ПО ВТ_ИЗДЕЛИЯ.Ссылка = ВТ_ИЗДЕЛИЯ_ОСТ.Номенклатура
						|СГРУППИРОВАТЬ ПО
                        |	ВТ_ИЗДЕЛИЯ.Ссылка, ЕСТЬNULL(ВТ_ИЗДЕЛИЯ_ОСТ.Остаток,0)
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	СпрНоменклатура.Ссылка,
                        |	СпрНоменклатура.вт_МинимальныйРезерв КАК вт_МинимальныйРезерв,
                        |	СпрНоменклатура.вт_МаксимальныйРезерв КАК вт_МаксимальныйРезерв
                        |ПОМЕСТИТЬ ВТ_ТОВАРЫ
                        |ИЗ
                        |	Справочник.Номенклатура КАК СпрНоменклатура
                        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
                        |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатурыТовары.Номенклатура
                        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
                        |		ПО СпрНоменклатура.Ссылка = ВариантыКомплектацииНоменклатуры.Владелец
                        |ГДЕ
                        |	(СпрНоменклатура.вт_МинимальныйРезерв > 0
                        |			ИЛИ СпрНоменклатура.вт_МаксимальныйЗапас > 0)
                        |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Ссылка, 1) = 1
                        |	И ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, 1) = 1
						|	И СпрНоменклатура.Ссылка.ВидНоменклатуры В (&ВидыНоменклатуры)
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ.Ссылка,
                        |	ВТ.вт_МинимальныйРезерв КАК вт_МинимальныйРезерв,
                        |	ВТ.вт_МаксимальныйРезерв КАК вт_МаксимальныйРезерв,
                        |	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК Остаток
                        |ПОМЕСТИТЬ ВТ_ТОВАРЫ_ОСТ
                        |ИЗ
                        |	ВТ_ТОВАРЫ КАК ВТ
                        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
                        |		ПО ВТ.Ссылка = ТоварыНаСкладахОстатки.Номенклатура
                        |			И (ТоварыНаСкладахОстатки.Склад = &СкладРезерв)
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ_ТОВАРЫ_ОСТ.Ссылка,
                        |	ВТ_ТОВАРЫ_ОСТ.вт_МинимальныйРезерв,
                        |	ВТ_ТОВАРЫ_ОСТ.вт_МаксимальныйРезерв,
                        |	ВТ_ТОВАРЫ_ОСТ.Остаток
                        |ПОМЕСТИТЬ ВТ_ПРЕДИТОГ
                        |ИЗ
                        |	ВТ_ТОВАРЫ_ОСТ КАК ВТ_ТОВАРЫ_ОСТ
                        |
                        |ОБЪЕДИНИТЬ ВСЕ
                        |
                        |ВЫБРАТЬ
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ.Ссылка,
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ.вт_МинимальныйРезерв,
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ.вт_МаксимальныйРезерв,
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ.Остаток
                        |ИЗ
                        |	ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ КАК ВТ_ИЗДЕЛИЯ_ОСТ_ИТОГ
                        |;
                        |
                        |////////////////////////////////////////////////////////////////////////////////
                        |ВЫБРАТЬ
                        |	ВТ_ПРЕДИТОГ.Ссылка КАК Номенклатура,
                        |	ВТ_ПРЕДИТОГ.вт_МинимальныйРезерв КАК КритическийОстаток,
                        |	ВТ_ПРЕДИТОГ.вт_МаксимальныйРезерв КАК МаксЗапас,
                        |	ВТ_ПРЕДИТОГ.Остаток КАК ТекущийОстаток,
                        |	ВЫБОР
                        |		КОГДА ВТ_ПРЕДИТОГ.вт_МаксимальныйЗапас - ВТ_ПРЕДИТОГ.Остаток > 0
                        |				И ВТ_ПРЕДИТОГ.вт_МаксимальныйРезерв > 0
                        |			ТОГДА ВТ_ПРЕДИТОГ.вт_МаксимальныйРезерв - ВТ_ПРЕДИТОГ.Остаток
                        |		ИНАЧЕ ВЫБОР
                        |				КОГДА ВТ_ПРЕДИТОГ.вт_МинимальныйРезерв - ВТ_ПРЕДИТОГ.Остаток > 0
                        |					ТОГДА ВТ_ПРЕДИТОГ.вт_МинимальныйРезерв - ВТ_ПРЕДИТОГ.Остаток
                        |				ИНАЧЕ 0
                        |			КОНЕЦ
                        |	КОНЕЦ КАК ПланПроизводства
                        |ИЗ
                        |	ВТ_ПРЕДИТОГ КАК ВТ_ПРЕДИТОГ
 						|ГДЕ
 						|	(ВТ_ПРЕДИТОГ.Остаток < ВТ_ПРЕДИТОГ.вт_МинимальныйРезерв
 						|			ИЛИ (ВТ_ПРЕДИТОГ.Остаток >= ВТ_ПРЕДИТОГ.вт_МинимальныйРезерв
 						|				И ВТ_ПРЕДИТОГ.Остаток < ВТ_ПРЕДИТОГ.вт_МаксимальныйРезерв))
                        |
                        |УПОРЯДОЧИТЬ ПО
                        |	ВТ_ПРЕДИТОГ.Ссылка.Наименование");

		Запрос.УстановитьПараметр("СкладРезерв", Справочники.Склады.НайтиПоНаименованию("Cклад Резерв")); 	
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", КонецДня(Объект.Дата));
	//Запрос.УстановитьПараметр("ПродукцияКомоды", Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Готовая продукция ""Комоды"""));	
	Запрос.УстановитьПараметр("ВидыНоменклатуры", МассивВидов);
	
	оБЪЕКТ.РеквизитТаблицаПлана.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
КонецПроцедуры	

&НаКлиенте
Процедура КомандаЗаполнитьПлан(Команда)
	ЗаполнитьПланГотовойПродукцииКлиент();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//МенюОтчеты.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюОтчеты);
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.СтатусПланаПроизводства=Перечисления.вт_СтатусыПроизводства.Ожидание;
		Объект.СкладПроизводства = КонстантыСервер.ПолучитьЗначениеКонстанты("вт_СкладПроизводства"); 
		Объект.СкладОсновной = Объект.СкладПроизводства; //Константы.вт_ОсновнойСклад.Получить();
		
	КонецЕсли;
	
	//	СкладРезерв = Справочники.Склады.НайтиПоНаименованию("Склад Резерв");
	РеквизитРезерв = Ложь;
	
	ПустойУникИдентификатор = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);

	Если Объект.Ссылка.Пустая() ТОгда
		 Объект.ВидПланирования = ?(ЗначениеЗаполнено(Объект.ДокументОснования), Перечисления.вт_ВидыПланированияПроизводства.ПоЗаказам, Перечисления.вт_ВидыПланированияПроизводства.ПоОстаткамИЛимитам);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечать(Команда)
	Если НЕ Объект.Проведен ТОгда
		Предупреждение("Документ должен быть проведен!");
		Возврат;
	КонецЕсли;	
	
	ТабДок = ПечатьТаблДокументСервер();
	
	//ТабДок.Показать("План производства");
 	ОбластиОбъектов = Неопределено;
    
    ИдентификаторПечатнойФормы = "ПФ_ПланПроизводства_ПоДеталям";
    
    КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
    ПечатнаяФорма = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'ПланПроизводства_ПоДеталям'");
    ПечатнаяФорма.ТабличныйДокумент = ТабДок;
    ПечатнаяФорма.ИмяФайлаПечатнойФормы = НСтр("ru = 'ПланПроизводства_ПоДеталям'");
    
    УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, ОбластиОбъектов);	   
		
КонецПроцедуры

&НаСервере
Функция ПечатьТаблДокументСервер()
	ТаблДок = Новый ТабличныйДокумент;
	Макет = документы.вт_ПланПроизводства.ПолучитьМакет("Макет");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	СтрокаОбл = Макет.ПолучитьОбласть("Строка");
	ПодвалОбл = Макет.ПолучитьОбласть("Подвал");
	
	Шапка.Параметры.ДатаПлана = Формат(Объект.Дата, "ДЛФ=D");
	ТаблДок.Вывести(Шапка);
	
	ВсегоПлан = 0;
	//++
	//ТаблПланПроизводства = Объект.РеквизитТаблицаПлана.Выгрузить();
	//ТаблПланПроизводства.Свернуть("ГотоваяПродукция","ПланПроизводства");
	
	ТаблПланПроизводства = Объект.Товары.Выгрузить();
	ТаблПланПроизводства.Свернуть("Номенклатура,КодСтрокиРодитель","ВПроизводство");
	Для Каждого СтрокаТовара из ТаблПланПроизводства Цикл
		Если СтрокаТовара.КодСтрокиРодитель = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
			СтрокаОбл.Параметры.Продукция = СтрокаТовара.Номенклатура;
			СтрокаОбл.Параметры.едизм = СтрокаТовара.Номенклатура.ЕдиницаИзмерения; 
			СтрокаОбл.Параметры.ПланКоличество = СтрокаТовара.ВПроизводство;
			ВсегоПлан = ВсегоПлан + СтрокаТовара.ВПроизводство;	
			ТаблДок.Вывести(СтрокаОбл);
		КонецЕсли;
	КонецЦикла;	
	
	//Для Каждого СтрокаТовара из Объект.РеквизитТаблицаПлана Цикл
	//	//СтрокаОбл.Параметры.Продукция = СтрокаТовара.Номенклатура;
	//	СтрокаОбл.Параметры.Продукция = СтрокаТовара.ГотоваяПродукция;
	//	СтрокаОбл.Параметры.едизм = СтрокаТовара.ГотоваяПродукция.ЕдиницаИзмерения; 
	//	СтрокаОбл.Параметры.ПланКоличество = СтрокаТовара. ПланПроизводства;
	//	ВсегоПлан = ВсегоПлан + СтрокаТовара. ПланПроизводства;	
	//	
	//	ТаблДок.Вывести(СтрокаОбл);
	//	
	//КонецЦикла;
	//--
	
	ПодвалОбл.Параметры.ИтогоПлан = ВсегоПлан;
	ТаблДок.Вывести(ПодвалОбл);
	
	ТаблДок.ОтображатьГруппировки=Ложь;
	ТаблДок.ОтображатьЗаголовки=Ложь;
	ТаблДок.ОтображатьСетку=Ложь;
	ТаблДок.ТолькоПросмотр=Истина;
	Возврат ТаблДок;
КонецФункции	

&НаКлиенте
Процедура ЗаполнитьПланГотовойПродукцииКлиент()
	Если Объект.ВидПланирования=ПредопределенноеЗначение("Перечисление.вт_ВидыПланированияПроизводства.ПоЗаказам") тогда
		ЗаполнитьПланГотовойПродукцииПоЗаказамСервер();
	Иначе	
		ЗаполнитьПланГотовойПродукцииСервер();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПланГотовойПродукцииПоЗаказамСервер()
	
	Объект.Товары.Очистить();
	
	Для Каждого СтрокаПлана из Объект.РеквизитПланПоЗаказам цикл
		СтрокаПлана.КодСтроки = Новый УникальныйИдентификатор;
		
		НовСтрока = Объект.Товары.Добавить();
		НовСтрока.Выбрано = Истина;
		НовСтрока.Номенклатура = СтрокаПлана.Номенклатура;
		НовСтрока.ВПроизводство = СтрокаПлана.ВЗаказе;
		НовСтрока.МинимальныйОстаток = НовСтрока.ВПроизводство;
		НовСтрока.МаксимальныйОстаток = НовСтрока.ВПроизводство;
		НовСтрока.КодСтроки = СтрокаПлана.КодСтроки;
		НовСтрока.ВариантПроизводства = СтрокаПлана.ВариантПроизводства;
	КонецЦикла;	 
	
	Об = РеквизитФормыВЗначение("Объект");
	Для Каждого СтрокаТовара из Объект.Товары цикл
		Об.ЗаполнитьЭлементыПроизводства(СтрокаТовара.Номенклатура, СтрокаТовара.ВПроизводство, СтрокаТовара.КодСтроки);
	КонецЦикла;
	Об.ОбновитьТекущиеОстаткиПоПлануГотовойПродукции();
	ЗначениеВРеквизитФормы(Об,"Объект");
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПланГотовойПродукцииСервер()
	Обрекв = РеквизитФормыВЗначение("Объект");
	Обрекв.Товары.Очистить();
	Обрекв.ОстаткиТоваровПоскладам.Очистить();
	Обрекв.РеквизитТаблицаПлана.Очистить();
	
	СкладыДляОстатков = Новый массив;
	СкладыДляОстатков.Добавить(Объект.СкладПроизводства);
	//СкладыДляОстатков.Добавить(Обрекв.СкладОсновной);
	//СкладыДляОстатков.Добавить(Обрекв.СкладПроизводства);
	//
	//Определяем у кого есть варианты по тех картам, либо есть комплектующие, у которых есть варианты по тех.картам
	

	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	//                      |	ЕСТЬNULL(ТЗМинимальныйОстаток.Ссылка, ТЗМаксимальныйОстаток.Ссылка) КАК СсылкаНоменклатура,
	//                      |	ЕСТЬNULL(ТЗМинимальныйОстаток.Значение, 0) КАК МинимальныйЗапас,
	//                      |	ЕСТЬNULL(ТЗМаксимальныйОстаток.Значение, 0) КАК МаксимальныйЗапас,
	//                      |	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
	//                      |ПОМЕСТИТЬ ВТ_МИНМАКС_неИсп
	//                      |ИЗ
	//                      |	Справочник.Номенклатура.ДополнительныеРеквизиты КАК ТЗМинимальныйОстаток
	//                      |		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ТЗМаксимальныйОстаток
	//                      |		ПО ТЗМинимальныйОстаток.Ссылка = ТЗМаксимальныйОстаток.Ссылка
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	//                      |		ПО (ТЗМинимальныйОстаток.Ссылка = ХарактеристикиНоменклатуры.Владелец
	//                      |				ИЛИ ТЗМинимальныйОстаток.Ссылка.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец)
	//                      |ГДЕ
	//                      |	ТЗМинимальныйОстаток.Свойство.Заголовок = ""Минимальный остаток""
	//                      |	И ТЗМаксимальныйОстаток.Свойство.Заголовок = ""Максимальный остаток""
	//                      |	И (ЕСТЬNULL(ТЗМинимальныйОстаток.Значение, 0) > 0
	//                      |			ИЛИ ЕСТЬNULL(ТЗМаксимальныйОстаток.Значение, 0) > 0) ;
	//					  |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ТЗМинимальныйОстаток.Номенклатура КАК СсылкаНоменклатура,
	                      |	ЕСТЬNULL(ТЗМинимальныйОстаток.МинимальноеКоличествоЗапаса, 0) КАК МинимальныйЗапас,
	                      |	ЕСТЬNULL(ТЗМинимальныйОстаток.МаксимальноеКоличествоЗапаса, 0) КАК МаксимальныйЗапас,
	                      |	ТЗМинимальныйОстаток.Характеристика КАК Характеристика
	                      |ПОМЕСТИТЬ ВТ_МИНМАКС
	                      |ИЗ
	                      |	РегистрСведений.ТоварныеОграничения КАК ТЗМинимальныйОстаток
	                      |ГДЕ
	                      |	ТЗМинимальныйОстаток.Склад В (&МассивСкладов);
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	СпрНоменклатура.СсылкаНоменклатура КАК Номенклатура,
	                      |	СпрНоменклатура.МинимальныйЗапас КАК МинимальныйЗапас,
	                      |	СпрНоменклатура.МаксимальныйЗапас КАК МаксимальныйЗапас,
	                      |	СпрНоменклатура.Характеристика КАК Характеристика
	                      |ПОМЕСТИТЬ ВТ_ТОВАРЫ
	                      |ИЗ
	                      |	ВТ_МИНМАКС КАК СпрНоменклатура
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.вт_ВариантыПроизводстваПоТехКартам КАК вт_ВариантыПроизводстваПоТехКартам
	                      |		ПО (вт_ВариантыПроизводстваПоТехКартам.Владелец = СпрНоменклатура.СсылкаНоменклатура
	                      |				И вт_ВариантыПроизводстваПоТехКартам.Характеристика = СпрНоменклатура.Характеристика)
	                      |			И (вт_ВариантыПроизводстваПоТехКартам.ПометкаУдаления = ЛОЖЬ)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) КАК ВНаличииОстаток,
	                      |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	                      |	ВТ_ТОВАРЫ.Номенклатура КАК Номенклатура,
	                      |	ВТ_ТОВАРЫ.Характеристика КАК Характеристика
	                      |ПОМЕСТИТЬ ВТ_ТОВАРЫОСТАТКИ
	                      |ИЗ
	                      |	ВТ_ТОВАРЫ КАК ВТ_ТОВАРЫ
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	                      |				&ДатаОстатка,
	                      |				(Номенклатура, Характеристика) В
	                      |						(ВЫБРАТЬ
	                      |							ВТ.Номенклатура,
	                      |							ВТ.Характеристика
	                      |						ИЗ
	                      |							ВТ_ТОВАРЫ КАК ВТ)
	                      |					И Склад В (&МассивСкладов)) КАК ТоварыНаСкладахОстатки
	                      |		ПО ВТ_ТОВАРЫ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
						  | И ВТ_ТОВАРЫ.Характеристика = ТоварыНаСкладахОстатки.Характеристика
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТОВАРЫОСТАТКИ.Номенклатура КАК Номенклатура,
	                      |	СУММА(ВТ_ТОВАРЫОСТАТКИ.ВНаличииОстаток) КАК ВНаличииОстаток,
	                      |	ВТ_ТОВАРЫОСТАТКИ.Характеристика КАК Характеристика
	                      |ПОМЕСТИТЬ ВТ_ОБЩИЕ_ТОВАРЫОСТАТКИ
	                      |ИЗ
	                      |	ВТ_ТОВАРЫОСТАТКИ КАК ВТ_ТОВАРЫОСТАТКИ
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ТОВАРЫОСТАТКИ.Номенклатура,
	                      |	ВТ_ТОВАРЫОСТАТКИ.Характеристика
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТОВАРЫ.Номенклатура КАК Номенклатура,
	                      |	ЕСТЬNULL(ВТ_ОБЩИЕ_ТОВАРЫОСТАТКИ.ВНаличииОстаток, 0) КАК ВНаличииОстаток,
	                      |	ВТ_ТОВАРЫ.МинимальныйЗапас КАК МинимальныйЗапас,
	                      |	ВТ_ТОВАРЫ.МаксимальныйЗапас КАК МаксимальныйЗапас,
	                      |	ВТ_ТОВАРЫ.Характеристика КАК Характеристика
	                      |ПОМЕСТИТЬ ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА
	                      |ИЗ
	                      |	ВТ_ТОВАРЫ КАК ВТ_ТОВАРЫ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОБЩИЕ_ТОВАРЫОСТАТКИ КАК ВТ_ОБЩИЕ_ТОВАРЫОСТАТКИ
	                      |		ПО ВТ_ТОВАРЫ.Номенклатура = ВТ_ОБЩИЕ_ТОВАРЫОСТАТКИ.Номенклатура
	                      |			И ВТ_ТОВАРЫ.Характеристика = ВТ_ОБЩИЕ_ТОВАРЫОСТАТКИ.Характеристика
	                      |ГДЕ
	                      |	ВТ_ТОВАРЫ.МинимальныйЗапас > 0
	                      |	И ЕСТЬNULL(ВТ_ОБЩИЕ_ТОВАРЫОСТАТКИ.ВНаличииОстаток, 0) <= ВТ_ТОВАРЫ.МинимальныйЗапас
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА.Номенклатура КАК Номенклатура,
	                      |	ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА.ВНаличииОстаток КАК ВНаличииОстаток,
	                      |	ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА.МинимальныйЗапас КАК МинимальныйЗапас,
	                      |	ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА.МаксимальныйЗапас КАК МаксимальныйЗапас,
	                      |	ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА.Характеристика КАК Характеристика
	                      |ИЗ
	                      |	ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА КАК ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА.ВНаличииОстаток,
	                      |	ВТ_ТОВАРЫ_ДЛЯ_ПРОИЗВОДСТВА.Номенклатура.Наименование");
	
	
	Запрос.УстановитьПараметр("ДатаОстатка", Новый МоментВремени(Объект.Дата,Объект.Ссылка));
	Запрос.УстановитьПараметр("МассивСкладов",СкладыДляОстатков);
	
	РезультатВыбора = Запрос.Выполнить();
	ВыборкаПоТоварам = РезультатВыбора.Выбрать();//ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоТоварам.Следующий() Цикл
		СтрокаТовара = Обрекв.Товары.Добавить();
		СтрокаТовара.КодСтроки = Новый УникальныйИдентификатор;
		СтрокаТовара.Номенклатура = ВыборкаПоТоварам.Номенклатура;
		СтрокаТовара.Характеристика = ВыборкаПоТоварам.Характеристика;

		СтрокаТовара.МинимальныйОстаток =  ВыборкаПоТоварам.МинимальныйЗапас;// СтрокаТовара.Номенклатура.вт_МинимальныйЗапас;
		СтрокаТовара.МаксимальныйОстаток = ВыборкаПоТоварам.МаксимальныйЗапас;//СтрокаТовара.Номенклатура.вт_МаксимальныйЗапас;
		СтрокаТовара.ВсегоОстаток = ВыборкаПоТоварам.ВНаличииОстаток;
		СтрокаТовара.ВПроизводство = 0;
		Если СтрокаТовара.МаксимальныйОстаток>0 И ВыборкаПоТоварам.ВНаличииОстаток<СтрокаТовара.МаксимальныйОстаток Тогда //Если задана верхняя граница запасов
			Если ВыборкаПоТоварам.ВНаличииОстаток>0 Тогда //Подгоняем производство до максимального остатка
				СтрокаТовара.ВПроизводство = СтрокаТовара.МаксимальныйОстаток - ВыборкаПоТоварам.ВНаличииОстаток;
			Иначе
				СтрокаТовара.ВПроизводство = СтрокаТовара.МаксимальныйОстаток;
			КонецЕсли;	
		Иначе  //В противном случае делаем только по нижней границе
			Если СтрокаТовара.МинимальныйОстаток>0 И ВыборкаПоТоварам.ВНаличииОстаток<СтрокаТовара.МинимальныйОстаток Тогда
				СтрокаТовара.ВПроизводство = СтрокаТовара.МинимальныйОстаток - ВыборкаПоТоварам.ВНаличииОстаток;   
			КонецЕсли;	
		КонецЕсли;
		
		//Заполняем что нам требуется для производства этой продукции
		Обрекв.ЗаполнитьЭлементыПроизводства(СтрокаТовара.Номенклатура, СтрокаТовара.ВПроизводство, СтрокаТовара.КодСтроки);

		//ВыборкапоСкладу = ВыборкаПоТоварам.Выбрать();
		//Пока ВыборкапоСкладу.Следующий() Цикл
		//	СтрокаОстатка = Обрекв.ОстаткиТоваровПоскладам.Добавить();
		//	СтрокаОстатка.КлючСтроки =  СтрокаТовара.КодСтроки;
		//	СтрокаОстатка.Номенклатура =   ВыборкаПоТоварам.Номенклатура;
		//	СтрокаОстатка.Склад =   ВыборкапоСкладу.Склад;
		//	СтрокаОстатка.Остаток =   ВыборкапоСкладу.ВНаличииОстаток;
		//КонецЦикла;  
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Обрекв,"Объект");

	
КонецПроцедуры                                                                 

&НаКлиенте
Процедура Группа3ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если  Элементы.группа3.ТекущаяСтраница=элементы.группа4 Тогда
		Если (НЕ Объект.Проведен ИЛИ Объект.Ссылка.Пустая()) ИЛИ (Объект.РеквизитТаблицаПлана.Количество()=0 И Объект.Товары.Количество()>0) Тогда
			//Если Вопрос("Перезаполнить план по деталям?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
				//ПерезаполнитьПланПоПроизводствуКомплектующихСервер();
			//КонецЕсли;
		КонецЕсли;
		Группа6ПриСменеСтраницыНаСервере();
	ИначеЕсли Элементы.группа3.ТекущаяСтраница=элементы.Группа11 ТОгда
		//ЗаполнитьСтруктуруПроизводства();
	ИначеЕсли Элементы.группа3.ТекущаяСтраница=элементы.Группа5 Тогда
		//Элементы.Товары.ОтборСтрок=Новый ФиксированнаяСтруктура(Новый Структура("КодСтрокиРодитель",Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")));
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура СортироватьРеквизитПланПоЗаказам()
	мТаблица = Объект.РеквизитПланПоЗаказам.Выгрузить();	
	мТаблица.Колонки.Добавить("ТребуемаяДата");
	Для Каждого мСтрока Из мТаблица Цикл
		мСтрока.ТребуемаяДата = мСтрока.Заказ.ТребуемаяДата;
	КонецЦикла;	
	мТаблица.Сортировать("ТребуемаяДата");
	
	Номер = 1;
	Для Каждого мСтрока Из мТаблица Цикл
		мСтрока.НомерСтроки = Номер;
		Номер = Номер + 1;
    КонецЦикла;
	Объект.РеквизитПланПоЗаказам.Очистить();
	Объект.РеквизитПланПоЗаказам.Загрузить(мТаблица);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруПроизводства()
	ТЗОстаткиПоКомплектующим.Очистить();
	
	ДеревоПроизв = РеквизитФормыВЗначение("ДеревоПроизводства");
	ДеревоПроизв.Строки.Очистить();
	ИтогоЧасов=0;
	
	СортироватьРеквизитПланПоЗаказам();
	
	Если Объект.РеквизитПланПоЗаказам.Количество()>0 тогда //Строим по заказам
		
		Для Каждого СтрокаПродукция из Объект.РеквизитПланПоЗаказам цикл
			пГотоваяПродукция = СтрокаПродукция.Номенклатура;
			ВсегоОпераций=0;
			ВсегоЧасовПоОперациям = 0;
			
			СтрокаЗаказаДерева = ДеревоПроизв.Строки.Добавить();
			СтрокаЗаказаДерева.Номенклатура = СтрокаПродукция.Заказ;
			
			СтрокаДерева = СтрокаЗаказаДерева.Строки.Добавить();
			
			СтрокаДерева.КодСтроки = СтрокаПродукция.КодСтроки;
			СтрокаДерева.Номенклатура = СтрокаПродукция.Номенклатура;
			СтрокаДерева.Характеристика = СтрокаПродукция.Характеристика;
			
			СтрокаДерева.ВариантПроизводства = СтрокаПРодукция.ВариантПроизводства;
			СтрокаДерева.Количество = СтрокаПродукция.ВЗаказе;
			
			СтрокаДерева.Запас = ПолучитьЗапасДляДерева(СтрокаДерева.Номенклатура,СтрокаДерева.Количество);
			
			СуммаИтог = 0;
			ЗаполнитьЗависимыеДанныеПроизводства(СтрокаДерева, СтрокаПродукция.КодСтроки, СуммаИтог);
			
			СтрокаДерева.Сумма = СуммаИтог;
			Если СтрокаДерева.Количество > 0 Тогда
				СтрокаДерева.Цена = СтрокаДерева.Сумма / СтрокаДерева.Количество;
				//СтрокаПродукция.ПлановаяЦена = СтрокаДерева.Цена;
			КонецЕсли;
			
		КонецЦикла;	
		
	Иначе //По списку товаров	
		
		МассивПродукция = Объект.Товары.НайтиСтроки(Новый Структура("КодСтрокиРодитель",ПустойУникИдентификатор));
		
		Для Каждого СтрокаПродукция из МассивПродукция цикл
			пГотоваяПродукция = СтрокаПродукция.Номенклатура;
			ВсегоОпераций=0;
			ВсегоЧасовПоОперациям = 0;
			
			СтрокаДерева = ДеревоПроизв.Строки.Добавить();
			
			СтрокаДерева.КодСтроки = СтрокаПродукция.КодСтроки;
			СтрокаДерева.Номенклатура = СтрокаПродукция.Номенклатура;
			СтрокаДерева.Характеристика = СтрокаПродукция.Характеристика;
			СтрокаДерева.ВариантПроизводства = СтрокаПРодукция.ВариантПроизводства;
			СтрокаДерева.Количество = СтрокаПродукция.ВПроизводство;
			
			СтрокаДерева.Запас = ПолучитьЗапасДляДерева(СтрокаДерева.Номенклатура,СтрокаДерева.Количество);
			
			СуммаИтог = 0;
			ЗаполнитьЗависимыеДанныеПроизводства(СтрокаДерева, СтрокаПродукция.КодСтроки, СуммаИтог);
			
			СтрокаДерева.Сумма = СуммаИтог;
			Если СтрокаДерева.Количество > 0 Тогда
				СтрокаДерева.Цена = СтрокаДерева.Сумма / СтрокаДерева.Количество;
				//СтрокаПродукция.ПлановаяЦена = СтрокаДерева.Цена;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	
	
	ЗначениеВРеквизитФормы(ДеревоПроизв,"ДеревоПроизводства");
	
КонецПроцедуры


//заполняет или корректирует таблицу с остатком сырья при построении структуры производства
//Функция возврашает сколько показать в колонке доступного запаса
&НаСервере
Функция ПолучитьЗапасДляДерева(Товар, КоличествоТовара)
	
	МассивСтрок = ТЗОстаткиПоКомплектующим.НайтиСтроки(Новый Структура("Номенклатура",Товар ));
	РезультатКоличество = 0;
	НеРаспределено      = 0;
	Если МассивСтрок.Количество()=0 Тогда  //Если в таблице его еще нет
		 //Получаем остаток
		ТЗРег = РегистрыНакопления.ТоварыНаСкладах.Остатки(ТекущаяДата(),Новый Структура("Номенклатура,Склад", Товар,Объект.СкладПроизводства),"Номенклатура","ВНаличии");
		ВНаличии = ?(ТЗРег.Количество()>0, ТЗРег[0].ВНаличии,0);
		
		СтрокаОстатки = ТЗОстаткиПоКомплектующим.Добавить();
		СтрокаОстатки.Номенклатура = Товар;
		СтрокаОстатки.Остаток        = ВНаличии; //Исходный запас
		
		РезультатКоличество        = СтрокаОстатки.Остаток; //Это вернем 
		
		НеРаспределено             = СтрокаОстатки.Остаток -  КоличествоТовара;
		СтрокаОстатки.ОсталосьРаспределить = НеРаспределено; //Это для будущих строк если потребуется
		
	Иначе //Если товар уже был в таблице
		РезультатКоличество = МассивСтрок[0].ОсталосьРаспределить; //Это вернем что бы показать
		МассивСтрок[0].ОсталосьРаспределить = МассивСтрок[0].ОсталосьРаспределить - КоличествоТовара; //Это для будущих строк
	КонецЕсли;
	
	Возврат РезультатКоличество;
	
КонецФункции


&НаСервере
Функция ПолучитьПлановуюЦену(пНоменклатура)
 Таблцен =	РегистрыСведений.ЦеныНоменклатуры.СрезПоследних(ТекущаяДата(),Новый Структура("Номенклатура, ВидЦены",пНоменклатура,Объект.НормативныйВидЦен));
 Если Таблцен.Количество()=0 тогда
	 Возврат 0;
 Иначе
	 Возврат Таблцен[0].Цена;
 КонецЕсли;	 
КонецФункции	

&НаСервере
Процедура ЗаполнитьЗависимыеДанныеПроизводства(СтрокаДерева, КлючСтроки, СуммаИтог)
	//Добавляем операции
	ЧасовПоВыпуску = 0;
	МассивОпераций = Объект.ПланПоОперциям.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого ЭлементОперации из МассивОпераций Цикл
		СтрокаСырье = СтрокаДерева.Строки.Добавить();
		СтрокаСырье.КодСтроки = ЭлементОперации.КодСтроки;
		СтрокаСырье.Номенклатура = ЭлементОперации.Номенклатура;
		СтрокаСырье.Количество = ЭлементОперации.Норма;
		СтрокаСырье.ЭтоРабота = Истина;
		СтрокаСырье.КлючСтроки = КлючСтроки;
		СтрокаСырье.Цена = ЭлементОперации.ПлановаяЦена;
		//Если ЭлементОперации.СтоимостьНормы =0 тогда
		//	ЭлементОперации.СтоимостьНормы = ПолучитьПлановуюЦену(СтрокаСырье.Номенклатура);
		//КонецЕсли;	
		СтрокаСырье.Цена = ЭлементОперации.ПлановаяЦена;
		СтрокаСырье.Сумма = СтрокаСырье.Цена * СтрокаСырье.Количество;
		
		СуммаИтог = СуммаИтог + СтрокаСырье.Сумма;
		
		ЧасовПоВыпуску = ЧасовПоВыпуску + ЭлементОперации.Норма;
	КонецЦикла;	
	
	ИтогоЧасов = ИтогоЧасов + ЧасовПоВыпуску;
	
	Если МассивОпераций.Количество()=0 Тогда
		ИтогоЧасов = ИтогоЧасов + СтрокаДерева.ВариантПроизводства.ВремяПроизводстваЧас * СтрокаДерева.Количество / ?(СтрокаДерева.ВариантПроизводства.Количество<>0,СтрокаДерева.ВариантПроизводства.Количество,1);
	КонецЕсли;	
	
	//Добавляем сырье
	МассивСырье = Объект.РеквизитТаблицаПлана.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого ЭлементСырье из МассивСырье Цикл
		СтрокаСырье = СтрокаДерева.Строки.Добавить();
		СтрокаСырье.КодСтроки = ЭлементСырье.КодСтроки;
		СтрокаСырье.Номенклатура = ЭлементСырье.Номенклатура;
		СтрокаСырье.Количество = ЭлементСырье.ПотребностьПоготовойПродукции;
		
		СтрокаСырье.Запас = ПолучитьЗапасДляДерева(СтрокаСырье.Номенклатура,СтрокаСырье.Количество);

		СтрокаСырье.КлючСтроки = КлючСтроки;
		//Пытаемся загрузить - а вдруг у него есть свой вариант производства
		МассивТовары = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, КодСтрокиРодитель",Элементсырье.Номенклатура, КлючСтроки));
		Если МассивТовары.Количество() > 0 Тогда //Значит это полуфабрикат
			СтрокаСырье.ВариантПроизводства = МассивТовары[0].ВариантПроизводства;
			СтрокаСырье.Цена = МассивТовары[0].ПлановаяЦена;
			
			СуммаПродукции = 0;
			ЗаполнитьЗависимыеДанныеПроизводства(СтрокаСырье, МассивТовары[0].КодСтроки, СуммаПродукции);
			СтрокаСырье.Сумма = СуммаПродукции;
			
			Если СтрокаСырье.Количество > 0 И СтрокаСырье.Цена=0 Тогда
				СтрокаСырье.Цена = СтрокаСырье.Сумма / СтрокаСырье.Количество;
				//ЭлементСырье.ПлановаяЦена = СтрокаСырье.Цена;
			КонецЕсли;

		Иначе
			СтрокаСырье.ЭтоСырье = Истина;
			Если СтрокаСырье.Цена = 0 Тогда
				//ЭлементСырье.ПлановаяЦена = ПолучитьПлановуюЦену(СтрокаСырье.Номенклатура);
				СтрокаСырье.Цена = ЭлементСырье.ПлановаяЦена;
			КонецЕсли; 	
			СтрокаСырье.Сумма = СтрокаСырье.Цена * СтрокаСырье.Количество;
		КонецЕсли;	
		
		СуммаИтог = СуммаИтог + СтрокаСырье.Сумма;

	КонецЦикла;
	
КонецПроцедуры	
	
&НаСервере
Функция ПолучитьМинМаксОстаток(СсылкаНоменклатура, ИмяРеквизита)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	НоменклатураДополнительныеРеквизиты.Значение КАК Значение
	                      |ИЗ
	                      |	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	                      |ГДЕ
	                      |	НоменклатураДополнительныеРеквизиты.Ссылка = &Ссылка
	                      |	И НоменклатураДополнительныеРеквизиты.Свойство.Заголовок = &Заголовок");
	Запрос.УстановитьПараметр("Ссылка",СсылкаНоменклатура);
	Запрос.УстановитьПараметр("Заголовок",ИмяРеквизита);
	
	ЗначРеквизита = 0;
	выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		  ЗначРеквизита = Выборка.Значение;
	КонецЕсли;
	
	Возврат ЗначРеквизита;
КонецФункции

&НаСервере
Процедура ПерезаполнитьПланПоПроизводствуКомплектующихСервер()
	Объект.РеквизитТаблицаПлана.Очистить();
	Объект.ОстаткиКомплектовПоСкладам.Очистить();
	Если НЕ РеквизитРезерв Тогда
			СкладыДляОстатков = Новый массив;
			СкладыДляОстатков.Добавить(Объект.СкладОсновной);
			СкладыДляОстатков.Добавить(Объект.СкладПроизводства);			
	Иначе	
			СкладыДляОстатков = Новый массив;
			СкладыДляОстатков.Добавить(СкладРезерв);
	КонецЕсли;	
	//Определяем из каких комплектующих состоит готовая продукция и если эти комплектующие нужно производить, то выводим их
	ВидыНоменклатурыДляОстатков = ПолучитьВидыНоменклатурыДляОстатков();
	
	
	
	//Получаем таблицу остатков по изделиям
	текстЗапрос = "ВЫБРАТЬ
	              |	Т.Номенклатура КАК Продукция
	              |ПОМЕСТИТЬ ВТ_ПРОДУКЦИЯ
	              |ИЗ
	              |	&Т КАК Т
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	              |	ВТ.Продукция КАК Продукция,
	              |	ВариантыКомплектацииНоменклатурыТовары.Количество КАК Коэффициент
	              |ПОМЕСТИТЬ ВТ_КОМПЛ
	              |ИЗ
	              |	ВТ_ПРОДУКЦИЯ КАК ВТ
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	              |			ПО ВТ.Продукция = ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец
				  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.вт_ВариантыПроизводстваПоТехКартам КАК ВариантыПроизводства 
				  |			ПО  ВариантыПроизводства.Владелец = ВариантыКомплектацииНоменклатурыТовары.Номенклатура 
	              |ГДЕ
	              |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Основной = ИСТИНА
	              |
				  |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ВТ_КОМПЛ.Номенклатура
	              |ПОМЕСТИТЬ ВТ_КОМПЛ_УНИК
	              |ИЗ
	              |	ВТ_КОМПЛ КАК ВТ_КОМПЛ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВТ_КОМПЛ.Номенклатура КАК Изделие,
	              |	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстаткиПродукции.ВНаличииОстаток, 0) * ВТ_КОМПЛ.Коэффициент) КАК Остаток,
	              |	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстаткиПродукции.ВНаличииОстаток, 0) * ВТ_КОМПЛ.Коэффициент) КАК УменьшаемыйОстаток
	              |ПОМЕСТИТЬ ВТ_ОСТАТКИ_ГОТОВОЙ
	              |ИЗ
	              |	ВТ_КОМПЛ КАК ВТ_КОМПЛ
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	              |				&ДатаОстатка,
	              |				Номенклатура В
	              |						(ВЫБРАТЬ
	              |							ВТ.Продукция
	              |						ИЗ
	              |							ВТ_КОМПЛ КАК ВТ)
	              |					И Склад В (&МассивСкладов)) КАК ТоварыНаСкладахОстаткиПродукции
	              |		ПО ВТ_КОМПЛ.Продукция = ТоварыНаСкладахОстаткиПродукции.Номенклатура
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВТ_КОМПЛ.Номенклатура
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВТ_КОМПЛ.Номенклатура КАК Изделие,
	              |	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0)) КАК Остаток,
	              |	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0)) КАК УменьшаемыйОстаток
	              |ПОМЕСТИТЬ ВТ_ОСТАТКИ_ИЗДЕЛИЙ
	              |ИЗ
	              |	ВТ_КОМПЛ_УНИК КАК ВТ_КОМПЛ
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	              |				&ДатаОстатка,
	              |				Номенклатура В
	              |						(ВЫБРАТЬ
	              |							ВТ.Номенклатура
	              |						ИЗ
	              |							ВТ_КОМПЛ КАК ВТ)
	              |					И Склад В (&МассивСкладов)) КАК ТоварыНаСкладахОстатки
	              |		ПО ВТ_КОМПЛ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВТ_КОМПЛ.Номенклатура
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВТ.Изделие КАК Изделие,
	              |	ВТ.Остаток КАК Остаток,
	              |	ВТ.УменьшаемыйОстаток КАК УменьшаемыйОстаток
	              |ПОМЕСТИТЬ ВТ_ОСТАТКИ
	              |ИЗ
	              |	ВТ_ОСТАТКИ_ИЗДЕЛИЙ КАК ВТ
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ВТ.Изделие,
	              |	ВТ.Остаток,
	              |	ВТ.УменьшаемыйОстаток
	              |ИЗ
	              |	ВТ_ОСТАТКИ_ГОТОВОЙ КАК ВТ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВТ_ОСТАТКИ.Изделие,
	              |	СУММА(ВТ_ОСТАТКИ.Остаток) КАК Остаток,
	              |	СУММА(ВТ_ОСТАТКИ.УменьшаемыйОстаток) КАК УменьшаемыйОстаток
	              |ИЗ
	              |	ВТ_ОСТАТКИ КАК ВТ_ОСТАТКИ
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВТ_ОСТАТКИ.Изделие";
				  
					  
			  
	Запрос = Новый Запрос(текстЗапрос);
	Запрос.УстановитьПараметр("ВидНоменклатуры",ВидыНоменклатурыДляОстатков);					 
	Запрос.УстановитьПараметр("ДатаОстатка", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("МассивСкладов",СкладыДляОстатков);
	
	ОтборВыбранныеТовары = Новый Структура("Выбрано",Истина);
	МассивСтроки = Объект.товары.НайтиСтроки(ОтборВыбранныеТовары);
	Запрос.УстановитьПараметр("Т",Объект.Товары.Выгрузить(МассивСтроки));
	ТаблОстаткиИзделий = Запрос.Выполнить().Выгрузить();

	
	Запрос= Новый Запрос("ВЫБРАТЬ
	                     |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	                     |	ВариантыКомплектацииНоменклатурыТовары.КоличествоУпаковок,
	                     |	ВариантыКомплектацииНоменклатурыТовары.Количество
	                     |ПОМЕСТИТЬ ВТ_КОМПЛ
	                     |ИЗ
	                     |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	                     |ГДЕ
	                     |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец = &Владелец
	                     |	И ВариантыКомплектацииНоменклатурыТовары.Ссылка.Основной = ИСТИНА
	                     |	И ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ВидНоменклатуры В (&ВидНоменклатуры)
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ВТ_КОМПЛ.Номенклатура КАК Номенклатура,
	                     |	ЕСТЬNULL(ВТ_КОМПЛ.Количество, 0) КАК Количество,
	                     |	ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) КАК Остаток,
	                     |	ТоварыНаСкладахОстатки.Склад КАК Склад
	                     |ИЗ
	                     |	ВТ_КОМПЛ КАК ВТ_КОМПЛ
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	                     |				&ДатаОстатка,
	                     |				Номенклатура В
	                     |						(ВЫБРАТЬ
	                     |							ВТ.Номенклатура
	                     |						ИЗ
	                     |							ВТ_КОМПЛ КАК ВТ)
	                     |					И Склад В (&МассивСкладов)) КАК ТоварыНаСкладахОстатки
	                     |		ПО ВТ_КОМПЛ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	                     |ИТОГИ
	                     |	МАКСИМУМ(Количество),
	                     |	СУММА(Остаток)
	                     |ПО
	                     |	Номенклатура,
	                     |	Склад");
						 
	Запрос.УстановитьПараметр("ВидНоменклатуры",ВидыНоменклатурыДляОстатков);					 
	Запрос.УстановитьПараметр("ДатаОстатка", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("МассивСкладов",СкладыДляОстатков);
	
	ОтборПоискаИзделия = Новый Структура("Изделие");
	Для Каждого строкаТовар из Объект.Товары Цикл //Цикл по готовой продукции - по товарам
		Если НЕ строкаТовар.выбрано ТОгда
			Продолжить;
		КонецЕсли;	
		 ГотоваяПродукция = СтрокаТовар.Номенклатура;
		 МаксЗапасГП = ПолучитьМинМаксОстаток(ГотоваяПродукция, "Максимальный остаток");
		 МинЗапасГП = ПолучитьМинМаксОстаток(ГотоваяПродукция,  "Минимальный остаток");
		 
		 ПроизвестиГотовойПродукции = СтрокаТовар.ВПроизводство;
		 Запрос.УстановитьПараметр("Владелец",ГотоваяПродукция);
		 Выборкакомплектующих = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //Выбираем остатки по комплектующим для этой готовой продукции
		 ФлагОтсутствияКомплектующих = Истина;
		 Пока Выборкакомплектующих.Следующий() Цикл //Сначала идем по общим остаткам комплектующих
			  ФлагОтсутствияКомплектующих = Ложь;
			  НеобходимоПроизвести = ПроизвестиГотовойПродукции * Выборкакомплектующих.Количество; //Потребность в производстве изделия исходя из потребности товара
			  //ОстатокИзделия = Выборкакомплектующих.Остаток; //Сколько сейчас есть изделия на складах
			  ОтборПоискаИзделия.Изделие = Выборкакомплектующих.Номенклатура;
			  найденыСтрокиИзделия = ТаблОстаткиИзделий.НайтиСтроки(ОтборПоискаИзделия);
			  //Если НЕ РеквизитРезерв Тогда
			  	МаксЗапасИзделия = МаксЗапасГП * Выборкакомплектующих.Количество;
			  //Иначе
			  //  МаксЗапасИзделия = ГотоваяПродукция.вт_МаксимальныйРезерв * Выборкакомплектующих.Количество;
			  //КонецЕсли;	
			  //Если НеобходимоПроизвести<=ОстатокИзделия И ОстатокИзделия>МаксЗапасИзделия Тогда //Текущего остатка достаточно
			  //	Продолжить;
			  //КонецЕсли;	 
		 //++
    		  Если Не ПроверитьНаличиеВариантыПроизводстваПоТехКартам(Выборкакомплектующих.Номенклатура) Тогда
    			  Продолжить;
    		  КонецЕсли; 	  
    	 //-- 

			  СтрокаПланаКомплектующих = Объект.РеквизитТаблицаПлана.Добавить();
			  СтрокаПланаКомплектующих.Номенклатура = Выборкакомплектующих.Номенклатура;
			  СтрокаПланаКомплектующих.ГотоваяПродукция = ГотоваяПродукция;
			  СтрокаПланаКомплектующих.ПотребностьПоготовойПродукции = НеобходимоПроизвести;
			  
			  //Это остаток для последующей группировки
			  ОстатокИзделия = ?(найденыСтрокиИзделия.Количество()>0,найденыСтрокиИзделия[0].Остаток,0);
			  СтрокаПланаКомплектующих.ТекущийОстаток= ОстатокИзделия;
			  
			  //Это остаток для уменьшаемого остатка
			  ОстатокИзделия = ?(найденыСтрокиИзделия.Количество()>0,найденыСтрокиИзделия[0].УменьшаемыйОстаток,0);
			  
			  Если СтрокаПланаКомплектующих.ПотребностьПоготовойПродукции>МаксЗапасИзделия И ОстатокИзделия<СтрокаПланаКомплектующих.ПотребностьПоготовойПродукции Тогда
				  СтрокаПланаКомплектующих.ПланПроизводства = СтрокаПланаКомплектующих.ПотребностьПоготовойПродукции - МаксЗапасИзделия;
			  ИначеЕсли ОстатокИзделия<МаксЗапасИзделия Тогда 
				  СтрокаПланаКомплектующих.ПланПроизводства = МаксЗапасИзделия - ОстатокИзделия;
			  ИначеЕсли ОстатокИзделия<НеобходимоПроизвести Тогда 	  
				  СтрокаПланаКомплектующих.ПланПроизводства = НеобходимоПроизвести - ОстатокИзделия;
			  КонецЕсли;
			  
			  Если ОстатокИзделия >= МаксЗапасИзделия И ОстатокИзделия > 0 Тогда
				  найденыСтрокиИзделия[0].УменьшаемыйОстаток = найденыСтрокиИзделия[0].УменьшаемыйОстаток - МаксЗапасИзделия;			   	  
			  ИначеЕсли ОстатокИзделия > 0 и  ОстатокИзделия < МаксЗапасИзделия Тогда
				  найденыСтрокиИзделия[0].УменьшаемыйОстаток = 0;
			  КонецЕсли; 	  
			  //Если Не РеквизитРезерв Тогда
			  	СтрокаПланаКомплектующих.КритическийОстаток = МинЗапасГП *Выборкакомплектующих.Количество;
			  //Иначе
			  //  СтрокаПланаКомплектующих.КритическийОстаток = ГотоваяПродукция.вт_МинимальныйРезерв*Выборкакомплектующих.Количество;
			  //КонецЕсли;	
				
			  СтрокаПланаКомплектующих.МаксЗапас = МаксЗапасИзделия;
			  
			  
			  //Теперь запоминаем остатки изделия по складам
			  ОбходПоСкладам = Выборкакомплектующих.Выбрать();
			  Пока ОбходПоСкладам.Следующий() Цикл
				  ОтборПоКомплектам = Новый Структура("Номенклатура,Склад",Выборкакомплектующих.Номенклатура, Выборкакомплектующих.Склад);
				  МассивОстатков = Объект.ОстаткиКомплектовПоСкладам.НайтиСтроки(ОтборПоКомплектам);
				  Если МассивОстатков.количество()>0 тогда
					  Продолжить;
				  КонецЕсли;
				  СтрокаОстатка = Объект.ОстаткиКомплектовПоСкладам.Добавить();
				  СтрокаОстатка.Номенклатура = Выборкакомплектующих.Номенклатура;
				  СтрокаОстатка.Склад = ОбходПоСкладам.Склад;
				  СтрокаОстатка.Остаток =  ОбходПоСкладам.Остаток;   
				  
			  КонецЦикла;	  
		  КонецЦикла;	
    	   
    	 Если ФлагОтсутствияКомплектующих И ПроверитьНаличиеВариантыПроизводстваПоТехКартам(ГотоваяПродукция) Тогда
    	 	СтрокаПланаКомплектующих = Объект.РеквизитТаблицаПлана.Добавить();
    		СтрокаПланаКомплектующих.Номенклатура 				   = ГотоваяПродукция;
    		СтрокаПланаКомплектующих.ТекущийОстаток 			   = СтрокаТовар.ВсегоОстаток;
    		СтрокаПланаКомплектующих.МаксЗапас                     = СтрокаТовар.МаксимальныйОстаток;
    		СтрокаПланаКомплектующих.КритическийОстаток            = СтрокаТовар.МинимальныйОстаток;
    		СтрокаПланаКомплектующих.ПланПроизводства              = ПроизвестиГотовойПродукции;
    		СтрокаПланаКомплектующих.ГотоваяПродукция 			   = ГотоваяПродукция;
    		СтрокаПланаКомплектующих.ПотребностьПоготовойПродукции = ПроизвестиГотовойПродукции;
    	 
    	 КонецЕсли;	 
	 КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Группа6ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.Группа6.ТекущаяСтраница = Элементы.Группа8 Тогда
		Группа6ПриСменеСтраницыНаСервере();
	КонецЕсли;
КонецПроцедуры
                                     
&НаСервере
Процедура Группа6ПриСменеСтраницыНаСервере()
	  
	ТаблПлана = Объект.РеквизитТаблицаПлана.Выгрузить(); //Выгружаем плоскую таблицу по изделиям
	
	 //по каждому изделию остаток не изменяется, а планы производства, потребность, критические остатки суммируются суммируются, т.к. это показатели в разрезе конечного товара
	ТаблПлана.Свернуть("Номенклатура,ТекущийОстаток","ПланПроизводства,ПотребностьПоготовойПродукции,МаксЗапас,КритическийОстаток");
	ТаблПлана.Сортировать("Номенклатура Возр");
	ЗначениеДерево = ДанныеФормыВЗначение(РеквизитДеревоПлана,Тип("ДеревоЗначений"));
	ЗначениеДерево.Строки.Очистить();
	Для каждого СтрокаПлана из  ТаблПлана Цикл
		Если СтрокаПлана.ТекущийОстаток >= СтрокаПлана.ПланПроизводства
			И
			СтрокаПлана.ТекущийОстаток >= СтрокаПлана.МаксЗапас
			И
			СтрокаПлана.МаксЗапас>0
			
			ТОгда
		КонецЕсли;	
		Если 
			СтрокаПлана.ПланПроизводства<=0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПоКомплекту = ЗначениеДерево.Строки.Добавить();
		СтрокаПоКомплекту.Изделие = СтрокаПлана.Номенклатура;
		СтрокаПоКомплекту.ТекущийОстаток = СтрокаПлана.ТекущийОстаток;
		СтрокаПоКомплекту.ПотребностьГотовойПродукции = СтрокаПлана.ПотребностьПоготовойПродукции;
		СтрокаПоКомплекту.МинОстаток = СтрокаПлана.КритическийОстаток;
		СтрокаПоКомплекту.МаксОстаток = СтрокаПлана.МаксЗапас;
		СтрокаПоКомплекту.ПланПроизводства = СтрокаПлана.ПланПроизводства;
		
		//Если СтрокаПлана.ПотребностьПоготовойПродукции>СтрокаПлана.МаксЗапас И СтрокаПлана.ТекущийОстаток<СтрокаПлана.ПотребностьПоготовойПродукции Тогда
		//	СтрокаПоКомплекту.ПланПроизводства = СтрокаПлана.ПотребностьПоготовойПродукции - СтрокаПлана.МаксЗапас;
		//ИначеЕсли  СтрокаПлана.ТекущийОстаток < СтрокаПлана.МаксЗапас Тогда 
		//	СтрокаПоКомплекту.ПланПроизводства = СтрокаПлана.МаксЗапас - СтрокаПлана.ТекущийОстаток;
		//КонецЕсли; 
		
		                                 
		
		//Заполняем колонки остатков по складам
		ОтборПоКомплектам = Новый Структура("Номенклатура",СтрокаПлана.Номенклатура);
		МассивОстатков = Объект.ОстаткиКомплектовПоСкладам.НайтиСтроки(ОтборПоКомплектам);
		Для Каждого строкаОстаткаПоСкладу из МассивОстатков Цикл
			Если строкаОстаткаПоСкладу.Склад = Объект.СкладОсновной Тогда
				СтрокаПоКомплекту.ОстатокОсновной = строкаОстаткаПоСкладу.Остаток; 
			ИначеЕсли строкаОстаткаПоСкладу.Склад = Объект.СкладПроизводства Тогда
				СтрокаПоКомплекту.ОстатокПроизводство = строкаОстаткаПоСкладу.Остаток; 
			ИначеЕсли строкаОстаткаПоСкладу.Склад = СкладРезерв Тогда
				СтрокаПоКомплекту.ОстатокРезерв = строкаОстаткаПоСкладу.Остаток; 	
			КонецЕсли;
		КонецЦикла;
		
		
		ОтборСтрокПоИзделию  = Новый Структура("Номенклатура", СтрокаПлана.Номенклатура);
		ОтборТоваров = Объект.РеквизитТаблицаПлана.НайтиСтроки(ОтборСтрокПоИзделию);
		Для Каждого СтрокаТоваров из ОтборТоваров Цикл
			строкаПоКомплектуТовар = СтрокаПоКомплекту.Строки.Добавить();
			строкаПоКомплектуТовар.Изделие = СтрокаТоваров.ГотоваяПродукция;
			строкаПоКомплектуТовар.Товар = СтрокаТоваров.Номенклатура;
			строкаПоКомплектуТовар.ПотребностьГотовойПродукции = СтрокаТоваров.ПотребностьПоготовойПродукции;
			строкаПоКомплектуТовар.ПланПроизводства = СтрокаТоваров.ПланПроизводства;
			//строкаПоКомплектуТовар.ТекущийОстаток = СтрокаТоваров.ТекущийОстаток;
		КонецЦикла;	
		
	КонецЦикла;	
	
	ЗначениеВДанныеФормы(ЗначениеДерево,РеквизитДеревоПлана);
КонецПроцедуры                       

&НаКлиенте
Процедура КомандаЗаполнитьКомплекты(Команда)
	//ПерезаполнитьПланПоПроизводствуКомплектующихСервер();
	Группа6ПриСменеСтраницыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтборТолькоВыделенных(Команда)
	ФиксОтбор = Неопределено;
	Элементы.ТоварыКнопкаОтборВыделенных.Пометка = НЕ Элементы.ТоварыКнопкаОтборВыделенных.Пометка;
	Если Элементы.ТоварыКнопкаОтборВыделенных.Пометка Тогда
		ФиксОтбор = Новый ФиксированнаяСтруктура("Выбрано",ИСТИНА);
	КонецЕсли;
	
	Элементы.Товары.ОтборСтрок = ФиксОтбор;

КонецПроцедуры

&НаКлиенте
Процедура КомандаВыделитьВсе(Команда)
	для Каждого СтрокаТовары из Объект.Товары Цикл
		СтрокаТовары.Выбрано=истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьВыделение(Команда)
	для Каждого СтрокаТовары из Объект.Товары Цикл
		СтрокаТовары.Выбрано=ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьВидыНоменклатурыДляОстатков()
	мВидыНоменклатурыКомплектующие = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вт_ВидыНоменклатурыКомплектующие.ВидыНоменклатурыКомплектующих
		|ИЗ
		|	РегистрСведений.вт_ВидыНоменклатурыКомплектующие КАК вт_ВидыНоменклатурыКомплектующие";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если  Не РезультатЗапроса.Пустой() Тогда 	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ВидыНоменклатурыКомплектующих<>Неопределено 
				И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ВидыНоменклатурыКомплектующих) Тогда
					мВидыНоменклатурыКомплектующие.Добавить(ВыборкаДетальныеЗаписи.ВидыНоменклатурыКомплектующих);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	Возврат мВидыНоменклатурыКомплектующие;
КонецФункции

&НаСервере
Функция ПроверитьНаличиеВариантыПроизводстваПоТехКартам(ГотоваяПродукция)
	пОтвет = Ложь;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вт_ВариантыПроизводстваПоТехКартам.Ссылка
		|ИЗ
		|	Справочник.вт_ВариантыПроизводстваПоТехКартам КАК вт_ВариантыПроизводстваПоТехКартам
		|ГДЕ
		|	вт_ВариантыПроизводстваПоТехКартам.Владелец = &ГотоваяПродукция";
	
	Запрос.УстановитьПараметр("ГотоваяПродукция", ГотоваяПродукция);	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда  	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Ссылка<>Неопределено Тогда
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка) Тогда
					пОтвет = Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	Возврат пОтвет;	
КонецФункции	

&НаКлиенте
Процедура КомандаРасчитатьВременноРесурсныеЗатраты(Команда)
	ВозвращаемыеДанные = ОткрытьФормуМодально("Документ.вт_ПланПроизводства.Форма.ФормаВыбораСебестоимости");
	ТабДок = КомандаРасчитатьВременноРесурсныеЗатратыНаСервере(ВозвращаемыеДанные);
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Функция КомандаРасчитатьВременноРесурсныеЗатратыНаСервере(ВозвращаемыеДанные)	

	ТаблДок = Новый ТабличныйДокумент;
	Макет = документы.вт_ПланПроизводства.ПолучитьМакет("МакетРасчетаВременноРесурсныхЗатрат");
	ОбластьШапка 	 = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок"); 
	ОбластьСтрока	 = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог		 = Макет.ПолучитьОбласть("Итог");
	ОбластьПодвал 	 = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьШапка.Параметры.ПланПроизводства = Строка(Объект.Ссылка);
	ОбластьШапка.Параметры.ТипЦен = ?(ВозвращаемыеДанные.ПоСебестоимости,"Себестоимости","виду цен "+Строка(ВозвращаемыеДанные.ПоВидуЦен));	
	ТаблДок.Вывести(ОбластьШапка);
	ТаблДок.Вывести(ОбластьЗаголовок);
	
	Нпп = 1;
	ИтогоКоличество = 0;
	ИтогоПлановоеВремяПроизводства = 0;
	ИтогоПлановаяСтоимость = 0;	
	ИтогоСтоимостьСырья = 0;
	НачалоСтрокиОбъединения = 8;
	СтрокаДок = 8;
	Для Каждого СтрокаТовара из Объект.РеквизитТаблицаПлана Цикл
		ОбластьСтрока.Параметры.Нпп = Нпп; 
		ОбластьСтрока.Параметры.ГотоваяПродукция  = СтрокаТовара.Номенклатура;
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = СтрокаТовара.Номенклатура.ЕдиницаИзмерения; 
		ОбластьСтрока.Параметры.Количество = СтрокаТовара. ПланПроизводства;
		пВариантПроизводства = ПолучитьВариантПроизводстваПродукции(СтрокаТовара.Номенклатура);
		ОбластьСтрока.Параметры.ПлановоеВремяПроизводства = СтрокаТовара. ПланПроизводства * пВариантПроизводства.Время;
		ДанныеПоГотовойПродукции = ПолучитьДанныеПоСтоимостиСырья(пВариантПроизводства.Ссылка,ВозвращаемыеДанные);	
		ПлановаяСтоимость = 0;
		Если ДанныеПоГотовойПродукции.Количество()>0 Тогда
			ПлановаяСтоимость = ДанныеПоГотовойПродукции.Итог("СтоимостьСырья") * СтрокаТовара. ПланПроизводства; 
			ОбластьСтрока.Параметры.ПлановаяСтоимость = Формат(ПлановаяСтоимость,"ЧДЦ=2");
			НачалоСтрокиОбъединения = СтрокаДок - 1; 
			Для Каждого СтрокаТаб Из ДанныеПоГотовойПродукции Цикл 
				ОбластьСтрока.Параметры.Сырье = СтрокаТаб.Сырье;
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияСырья = СтрокаТаб.ЕдИзм;
				ОбластьСтрока.Параметры.КоличествоСырья = СтрокаТаб.Количество * СтрокаТовара. ПланПроизводства;
				ОбластьСтрока.Параметры.СтоимостьСырья = Формат(СтрокаТаб.СтоимостьСырья * СтрокаТовара. ПланПроизводства,"ЧДЦ=2");;
				ТаблДок.Вывести(ОбластьСтрока);
				СтрокаДок = СтрокаДок + 1;
				ОбластьСтрока.Параметры.Нпп = ""; 
				ОбластьСтрока.Параметры.ГотоваяПродукция  = "";
				ОбластьСтрока.Параметры.ЕдиницаИзмерения = ""; 
				ОбластьСтрока.Параметры.Количество = "";
				ОбластьСтрока.Параметры.ПлановоеВремяПроизводства = "";
				ОбластьСтрока.Параметры.ПлановаяСтоимость = "";
				ОбластьСтрока.Параметры.Сырье = ""; 
				ОбластьСтрока.Параметры.ЕдиницаИзмеренияСырья = "";
				ОбластьСтрока.Параметры.КоличествоСырья = "";
				ОбластьСтрока.Параметры.СтоимостьСырья = "";  
				ИтогоСтоимостьСырья = ИтогоСтоимостьСырья + СтрокаТаб.СтоимостьСырья * СтрокаТовара. ПланПроизводства;
			КонецЦикла;
			Область = ТаблДок.Область(НачалоСтрокиОбъединения+1,2,СтрокаДок-1,2);
			Область.Объединить();		
			Область = ТаблДок.Область(НачалоСтрокиОбъединения+1,3,СтрокаДок-1,3);
			Область.Объединить();		
			Область = ТаблДок.Область(НачалоСтрокиОбъединения+1,4,СтрокаДок-1,4);
			Область.Объединить();		
			Область = ТаблДок.Область(НачалоСтрокиОбъединения+1,5,СтрокаДок-1,5);
			Область.Объединить();		
			Область = ТаблДок.Область(НачалоСтрокиОбъединения+1,6,СтрокаДок-1,6);
			Область.Объединить();
			Область = ТаблДок.Область(НачалоСтрокиОбъединения+1,7,СтрокаДок-1,7);
			Область.Объединить();
		Иначе
			ТаблДок.Вывести(ОбластьСтрока);
			СтрокаДок = СтрокаДок + 1;
		КонецЕсли;
		
		Нпп = Нпп + 1;
		ИтогоКоличество = ИтогоКоличество + СтрокаТовара. ПланПроизводства;	
		ИтогоПлановоеВремяПроизводства = ИтогоПлановоеВремяПроизводства + СтрокаТовара. ПланПроизводства * пВариантПроизводства.Время;
		ИтогоПлановаяСтоимость = ИтогоПлановаяСтоимость + ПлановаяСтоимость;
	КонецЦикла;
	ОбластьИтог.Параметры.ИтогоКоличество = ИтогоКоличество;
	ОбластьИтог.Параметры.ИтогоПлановоеВремяПроизводства = ИтогоПлановоеВремяПроизводства;
	ОбластьИтог.Параметры.ИтогоПлановаяСтоимость = Формат(ИтогоПлановаяСтоимость,"ЧДЦ=2");
	ОбластьИтог.Параметры.ИтогоСтоимостьСырья = Формат(ИтогоСтоимостьСырья,"ЧДЦ=2"); 
	ТаблДок.Вывести(ОбластьИтог);
	ТаблДок.Вывести(ОбластьПодвал);
	
	ТаблДок.АвтоМасштаб = Истина;
	ТаблДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТаблДок.ФиксацияСверху = 8;	
	ТаблДок.ОтображатьГруппировки=Ложь;
	ТаблДок.ОтображатьЗаголовки=Ложь;
	ТаблДок.ОтображатьСетку=Ложь;
	ТаблДок.ТолькоПросмотр=Истина;
	ТаблДок.ПолеСверху = 5;
	ТаблДок.ПолеСнизу  = 5;
	ТаблДок.ПолеСлева  = 5;
	ТаблДок.ПолеСправа = 5;

	Возврат ТаблДок;

КонецФункции

&НаСервере
Функция ПолучитьВариантПроизводстваПродукции(пГотоваяПродукция)
	пВариантПроизводства = Новый Структура("Ссылка,Время",Справочники.вт_ВариантыПроизводстваПоТехКартам.ПустаяСсылка(),0);	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вт_ВариантыПроизводстваПоТехКартам.ВремяПроизводстваСек,
		|	вт_ВариантыПроизводстваПоТехКартам.Ссылка
		|ИЗ
		|	Справочник.вт_ВариантыПроизводстваПоТехКартам КАК вт_ВариантыПроизводстваПоТехКартам
		|ГДЕ
		|	вт_ВариантыПроизводстваПоТехКартам.Владелец = &Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	вт_ВариантыПроизводстваПоТехКартам.Основной"; 	
	Запрос.УстановитьПараметр("Владелец", пГотоваяПродукция);	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		ВыборкаДетальныеЗаписи.Следующий();
		Если ВыборкаДетальныеЗаписи.Ссылка <> Неопределено Тогда
			пВариантПроизводства.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
			пВариантПроизводства.Время = ВыборкаДетальныеЗаписи.ВремяПроизводстваСек;
		КонецЕсли;	
	КонецЕсли;
	Возврат пВариантПроизводства;
КонецФункции

&НаСервере
Функция ПолучитьДанныеПоСтоимостиСырья(пВариантПроизводства,ВозвращаемыеДанные)
	ТаблицаСтоимостиСырья = Новый ТаблицаЗначений;
	ТаблицаСтоимостиСырья.Колонки.Добавить("Сырье");
	ТаблицаСтоимостиСырья.Колонки.Добавить("ЕдИзм");
	ТаблицаСтоимостиСырья.Колонки.Добавить("Количество");
	ТаблицаСтоимостиСырья.Колонки.Добавить("СтоимостьСырья");	
	Запрос = Новый Запрос;
	Если ВозвращаемыеДанные.ПоСебестоимости Тогда  		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	вт_ВариантыПроизводстваПоТехКартамСостав.Сырье,
			|	вт_ВариантыПроизводстваПоТехКартамСостав.Количество,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(СебестоимостьТоваровОстатки.КоличествоОстаток, 0) <> 0
			|			ТОГДА вт_ВариантыПроизводстваПоТехКартамСостав.Количество * ЕСТЬNULL(СебестоимостьТоваровОстатки.СтоимостьОстаток, 0) / ЕСТЬNULL(СебестоимостьТоваровОстатки.КоличествоОстаток, 0)
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СтоимостьСырья,
			|	вт_ВариантыПроизводстваПоТехКартамСостав.Сырье.ЕдиницаИзмерения КАК ЕдИзм
			|ИЗ
			|	Справочник.вт_ВариантыПроизводстваПоТехКартам.Состав КАК вт_ВариантыПроизводстваПоТехКартамСостав
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки КАК СебестоимостьТоваровОстатки
			|		ПО вт_ВариантыПроизводстваПоТехКартамСостав.Сырье = СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Номенклатура.Ссылка
			|ГДЕ
			|	вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка = &Ссылка";	
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	вт_ВариантыПроизводстваПоТехКартамСостав.Сырье,
			|	вт_ВариантыПроизводстваПоТехКартамСостав.Количество,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * вт_ВариантыПроизводстваПоТехКартамСостав.Количество КАК СтоимостьСырья,
			|	вт_ВариантыПроизводстваПоТехКартамСостав.Сырье.ЕдиницаИзмерения КАК ЕдИзм
			|ИЗ
			|	Справочник.вт_ВариантыПроизводстваПоТехКартам.Состав КАК вт_ВариантыПроизводстваПоТехКартамСостав
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				,
			|				ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО вт_ВариантыПроизводстваПоТехКартамСостав.Сырье = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|ГДЕ
			|	вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("ВидЦены",ВозвращаемыеДанные.ПоВидуЦен);				
	КонецЕсли;	
	Запрос.УстановитьПараметр("Ссылка",пВариантПроизводства);	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Сырье <> Неопределено Тогда
				СтрокаТаб = ТаблицаСтоимостиСырья.Добавить();
				СтрокаТаб.Сырье = ВыборкаДетальныеЗаписи.Сырье;
				СтрокаТаб.ЕдИзм = ВыборкаДетальныеЗаписи.ЕдИзм; 
				СтрокаТаб.Количество = ВыборкаДетальныеЗаписи.Количество;
				СтрокаТаб.СтоимостьСырья = ВыборкаДетальныеЗаписи.СтоимостьСырья;  				
			КонецЕсли;
		КонецЦикла	
	КонецЕсли;  	
	Возврат ТаблицаСтоимостиСырья;
КонецФункции

&НаКлиенте
Процедура КомандаРасчитатьСебестоимость(Команда)
	ТабДок = КомандаРасчитатьСебестоимостьНаСервере();
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Функция  КомандаРасчитатьСебестоимостьНаСервере()
	ТаблДок = Новый ТабличныйДокумент;
	Макет = документы.вт_ПланПроизводства.ПолучитьМакет("МакетРасчетаСебестоимости");
	ОбластьШапка 	 		      = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокОсновная      = Макет.ПолучитьОбласть("Заголовок|Основная");
	ОбластьЗаголовокКолонкаЦен    = Макет.ПолучитьОбласть("Заголовок|КолонкаЦен");
	ОбластьЗаголовокПраваяГраница = Макет.ПолучитьОбласть("Заголовок|ПраваяГраница");
	ОбластьСтрокаОсновная	 	  = Макет.ПолучитьОбласть("Строка|Основная");
	ОбластьСтрокаКолонкаЦен       = Макет.ПолучитьОбласть("Строка|КолонкаЦен");
	ОбластьСтрокаКолонкаЦен1      = Макет.ПолучитьОбласть("Строка|КолонкаЦен1");	
	ОбластьСтрокаПраваяГраница 	  = Макет.ПолучитьОбласть("Строка|ПраваяГраница");  
	ОбластьИтогОсновная		 	  = Макет.ПолучитьОбласть("Итог|Основная");
	ОбластьИтогКолонкаЦен    	  = Макет.ПолучитьОбласть("Итог|КолонкаЦен");
	ОбластьИтогПраваяГраница 	  = Макет.ПолучитьОбласть("Итог|ПраваяГраница");	
	ОбластьПодвал 	 		 	  = Макет.ПолучитьОбласть("Подвал");	
	
	ОбластьШапка.Параметры.ПланПроизводства = Строка(Объект.Ссылка);
	ТаблДок.Вывести(ОбластьШапка);
	ТаблДок.Вывести(ОбластьЗаголовокОсновная);
	Выборка = Справочники.ВидыЦен.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьЗаголовокКолонкаЦен.Параметры.ВидЦен = Выборка.Наименование;
		ТаблДок.Присоединить(ОбластьЗаголовокКолонкаЦен);
		ОбластьЗаголовокКолонкаЦен.Параметры.ВидЦен = "";
	КонецЦикла;	
	ТаблДок.Присоединить(ОбластьЗаголовокПраваяГраница);	
	Нпп = 1;		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабРеквизитТаблицаПлана.Номенклатура,
		|	ТабРеквизитТаблицаПлана.ТекущийОстаток,
		|	ТабРеквизитТаблицаПлана.МаксЗапас,
		|	ТабРеквизитТаблицаПлана.КритическийОстаток,
		|	ТабРеквизитТаблицаПлана.ПланПроизводства,
		|	ТабРеквизитТаблицаПлана.ГотоваяПродукция,
		|	ТабРеквизитТаблицаПлана.ПотребностьПоготовойПродукции
		|ПОМЕСТИТЬ ВТ_РеквизитТаблицаПлана
		|ИЗ
		|	&ТабРеквизитТаблицаПлана КАК ТабРеквизитТаблицаПлана
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РеквизитТаблицаПлана.ГотоваяПродукция,
		|	ВТ_РеквизитТаблицаПлана.Номенклатура,
		|	0 КАК Себестоимость
		|ИЗ
		|	ВТ_РеквизитТаблицаПлана КАК ВТ_РеквизитТаблицаПлана";
	Запрос.УстановитьПараметр("ТабРеквизитТаблицаПлана",Объект.РеквизитТаблицаПлана.Выгрузить());	
	ТаблицаСебестоимости = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТовара из ТаблицаСебестоимости Цикл
		пВариантПроизводства = ПолучитьВариантПроизводстваПродукции(СтрокаТовара.Номенклатура);
		СтрокаТовара.Себестоимость = ПолучитьПлановуюСебестоимостьЕдПоВариантуПроизводства(пВариантПроизводства.Ссылка);
	КонецЦикла;	
	ТаблицаСебестоимости.Свернуть("ГотоваяПродукция","Себестоимость");
	Для Каждого СтрокаТовара из ТаблицаСебестоимости Цикл  
		ОбластьСтрокаОсновная.Параметры.Нпп = Нпп; 
		ОбластьСтрокаОсновная.Параметры.ГотоваяПродукция  = СтрокаТовара.ГотоваяПродукция;
		ОбластьСтрокаОсновная.Параметры.ЕдиницаИзмерения = СтрокаТовара.ГотоваяПродукция.ЕдиницаИзмерения; 
		ОбластьСтрокаОсновная.Параметры.Себестоимость = Формат(СтрокаТовара.Себестоимость,"ЧДЦ=2; ЧН=0.00");
		ТаблДок.Вывести(ОбластьСтрокаОсновная);
	    Выборка = Справочники.ВидыЦен.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЦенаПоВидуЦен = ПолучитьЦенуГотовойПродукцииПоВидуЦен(Выборка.Ссылка,СтрокаТовара.ГотоваяПродукция);
			Если СтрокаТовара.Себестоимость >= ЦенаПоВидуЦен Тогда 
				ОбластьСтрокаКолонкаЦен1.Параметры.Цена = Формат(ЦенаПоВидуЦен,"ЧДЦ=2; ЧН=0.00");
				ТаблДок.Присоединить(ОбластьСтрокаКолонкаЦен1);
			Иначе
				ОбластьСтрокаКолонкаЦен.Параметры.Цена = Формат(ЦенаПоВидуЦен,"ЧДЦ=2; ЧН=0.00");
				ТаблДок.Присоединить(ОбластьСтрокаКолонкаЦен); 
			КонецЕсли;	
		КонецЦикла;	
		Нпп = Нпп + 1;
		ТаблДок.Присоединить(ОбластьСтрокаПраваяГраница);
	КонецЦикла;
	
	ТаблДок.Вывести(ОбластьИтогОсновная);
	Выборка = Справочники.ВидыЦен.Выбрать();
	Пока Выборка.Следующий() Цикл		
		ТаблДок.Присоединить(ОбластьИтогКолонкаЦен);		
	КонецЦикла;	
	ТаблДок.Присоединить(ОбластьИтогПраваяГраница);
	ТаблДок.Вывести(ОбластьПодвал);
	
	ТаблДок.АвтоМасштаб = Истина;
	ТаблДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТаблДок.ФиксацияСверху = 8;	
	ТаблДок.ОтображатьГруппировки=Ложь;
	ТаблДок.ОтображатьЗаголовки=Ложь;
	ТаблДок.ОтображатьСетку=Ложь;
	ТаблДок.ТолькоПросмотр=Истина;
	ТаблДок.ПолеСверху = 5;
	ТаблДок.ПолеСнизу  = 5;
	ТаблДок.ПолеСлева  = 5;
	ТаблДок.ПолеСправа = 5;

	Возврат ТаблДок;

КонецФункции

&НаСервере
Функция ПолучитьПлановуюСебестоимостьЕдПоВариантуПроизводства(пВариантПроизводства)
	пСебестоимость = 0;
	Запрос = Новый Запрос;		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СебестоимостьТоваровОстатки.КоличествоОстаток, 0) <> 0
		|			ТОГДА вт_ВариантыПроизводстваПоТехКартамСостав.Количество * ЕСТЬNULL(СебестоимостьТоваровОстатки.СтоимостьОстаток, 0) / ЕСТЬNULL(СебестоимостьТоваровОстатки.КоличествоОстаток, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СтоимостьСырья
		|ИЗ
		|	Справочник.вт_ВариантыПроизводстваПоТехКартам.Состав КАК вт_ВариантыПроизводстваПоТехКартамСостав
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки КАК СебестоимостьТоваровОстатки
		|		ПО вт_ВариантыПроизводстваПоТехКартамСостав.Сырье = СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Номенклатура.Ссылка
		|ГДЕ
		|	вт_ВариантыПроизводстваПоТехКартамСостав.Ссылка = &Ссылка";	
	Запрос.УстановитьПараметр("Ссылка",пВариантПроизводства);	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.СтоимостьСырья <> Неопределено Тогда
				пСебестоимость = пСебестоимость + ВыборкаДетальныеЗаписи.СтоимостьСырья;  				
			КонецЕсли;
		КонецЦикла	
	КонецЕсли;  	
	Возврат пСебестоимость;	
КонецФункции	

&НаСервере
Функция ПолучитьЦенуГотовойПродукцииПоВидуЦен(пВидЦен,пГотоваяПродукция)
	пЦена = 0;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
		|ГДЕ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
		|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены";  	
	Запрос.УстановитьПараметр("ВидЦены", пВидЦен);
	Запрос.УстановитьПараметр("Номенклатура", пГотоваяПродукция);	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		ВыборкаДетальныеЗаписи.Следующий();
		Если ВыборкаДетальныеЗаписи.Цена <> Неопределено Тогда
			пЦена = ВыборкаДетальныеЗаписи.Цена;  				
		КонецЕсли;			
	КонецЕсли;  	
	Возврат пЦена;
КонецФункции	

&НаСервере
Функция ЭтоКомплект(пНоменклатура)
	ЭтоКомплект = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыКомплектацииНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|ГДЕ
		|	ВариантыКомплектацииНоменклатуры.Владелец = &пНоменклатура";
	
	Запрос.УстановитьПараметр("пНоменклатура", пНоменклатура); 	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда   		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Ссылка<>Неопределено Тогда
				Если Не ВыборкаДетальныеЗаписи.Ссылка.Пустая() Тогда
					ЭтоКомплект = Истина;
					Прервать;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	Возврат ЭтоКомплект; 	
КонецФункции	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Ссылка.Пустая() И Объект.Товары.Количество()>0 тогда 
		//Значит скорее всего был ввод на основании
		//ПерезаполнитьПланПоПроизводствуКомплектующихСервер();
		Группа6ПриСменеСтраницыНаСервере();
	КонецЕсли;
	ЗаполнитьСтруктуруПроизводства();

	Элементы.Товары.ОтборСтрок=Новый ФиксированнаяСтруктура(Новый Структура("КодСтрокиРодитель",Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")));
	
	Элементы.Группа13ЗаполнениеПлана.Видимость = НЕ ЗначениеЗаполнено(Объект.ДокументОснования);
	Элементы.ГруппаПланПоЗаказам.Видимость =  Элементы.Группа13ЗаполнениеПлана.Видимость;
	Элементы.ДокументОснования.Видимость = ЗначениеЗаполнено(Объект.ДокументОснования);
	
	//Элементы.Группа11.Видимость = ЗначениеЗаполнено(Объект.ДокументОснования); //Показываем только если введено на основание одного заказа, для которого и будем строить дерево и считать себестоимости
	
	УстановитьВидимостьВидимостьВидаПланирования();
	УстановитьВидимостьГруппЗаполненияПланов();
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьГруппЗаполненияПланов()
 Элементы.ГруппаПланПоЗаказам.Видимость = Объект.ВидПланирования = ПредопределенноеЗначение("Перечисление.вт_ВидыПланированияПроизводства.ПоЗаказам");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьВидимостьВидаПланирования()
	Элементы.ВидПланирования.Видимость =  НЕ ЗначениеЗаполнено(Объект.ДокументОснования);
КонецПроцедуры	

&НаСервере
Процедура ТоварыВариантПроизводстваПриИзмененииНаСервере()
	ТекСтрока = Элементы.Товары.ТекущиеДанные;
    Об = РеквизитФормыВЗначение("Объект");
	Об.ЗаполнитьЭлементыПроизводства(ТекСтрока.Номенклатура, ТекСтрока.ВПроизводство, ТекСтрока.КодСтроки);
	ЗначениеВРеквизитФормы(Об,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВариантПроизводстваПриИзменении(Элемент)
	ТоварыВариантПроизводстваПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элементы.Товары.ТекущиеДанные.КодСтроки = Новый УникальныйИдентификатор;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТоварыВПроизводствоПриИзмененииНаСервере(НомерСтроки)
	ТекСтрока = Объект.Товары.НайтиПоИдентификатору(НомерСтроки);
	Если ТекСтрока.КодСтрокиРодитель <> ПустойУникИдентификатор Тогда
		ПересчитатьПоРецептурам(ТекСтрока.КодСтрокиРодитель, ТекСтрока.ВПроизводство, ТекСтрока.ВариантПроизводства);
	Иначе
		ПересчитатьПоРецептурам(ТекСтрока.КодСтроки, ТекСтрока.ВПроизводство, ТекСтрока.ВариантПроизводства);
	КонецЕсли;
	//Об = РеквизитФормыВЗначение("Объект");
	//Об.ЗаполнитьЭлементыПроизводства(ТекСтрока.Номенклатура, ТекСтрока.ВПроизводство, ТекСтрока.КодСтроки);
	//ЗначениеВРеквизитФормы(Об,"Объект");
КонецПроцедуры

&НаСервере
Процедура ПересчитатьПоРецептурам(КлючСтроки, ВПроизводство, Рецептура)
	МассивСтрок = Объект.РеквизитТаблицаПлана.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого СтрокаСырья из МассивСтрок Цикл
		СтрокиСостава = Рецептура.Состав.НайтиСтроки(Новый Структура("Сырье",СтрокаСырья.Номенклатура));
		Если СтрокиСостава.Количество()>0 тогда
			СтрокаВариантаПроизводства = СтрокиСостава[0];
			СтрокаСырья.ПланПроизводства =  ВПроизводство * СтрокаВариантаПроизводства.Количество/?(Рецептура.Количество>0,Рецептура.Количество,1); 
		КонецЕсли;	
		
		//Посмотрим есть ли эта позиция в Товарах, т.е. является ли полуфабрикатом
		МассивТовары = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, КодСтроки", СтрокаСырья.Номенклатура, СтрокаСырья.КодСтроки ));
		Если МассивТовары.Количество()>0 Тогда
			  ПересчитатьПоРецептурам(МассивТовары[0].КодСтроки, СтрокаСырья.ПланПроизводства, МассивТовары[0].ВариантПроизводства);
		КонецЕсли;	
		 
	КонецЦикла;
	
	МассивСтрок = Объект.ПланПоОперциям.НайтиСтроки(Новый Структура("КлючСтроки",КлючСтроки));
	Для Каждого СтрокаОперация из МассивСтрок Цикл
		СтрокиСостава = Рецептура.Операции.НайтиСтроки(Новый Структура("Операция",СтрокаОперация.Номенклатура));
		Если СтрокиСостава.Количество()>0 тогда
			СтрокаВариантаПроизводства = СтрокиСостава[0];
			СтрокаОперация.Норма = ВПроизводство * СтрокаВариантаПроизводства.НормаВремени/?(Рецептура.Количество>0,Рецептура.Количество,1);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ТоварыВПроизводствоПриИзменении(Элемент)
	ТоварыВПроизводствоПриИзмененииНаСервере(Элементы.Товары.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказыватьПродукцию(Команда)
	СтруктураОтбора = Неопределено;
	Если Элементы.ТоварыКомандаПоказыватьПродукцию.Пометка Тогда
		 СтруктураОтбора = Новый ФиксированнаяСтруктура(Новый Структура("КодСтрокиРодитель",Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")));
	КонецЕсли; 	 
	Элементы.Товары.ОтборСтрок = СтруктураОтбора;
	Элементы.ТоварыКомандаПоказыватьПродукцию.Пометка = НЕ Элементы.ТоварыКомандаПоказыватьПродукцию.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьПланПроизводства(Команда)
	ЗаполнитьСтруктуруПроизводства();
КонецПроцедуры

&НаСервере
Процедура ДеревоПроизводстваНоменклатураПриИзмененииНаСервере()
	Дерево = РеквизитФормыВЗначение("ДеревоПроизводства");
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПроизводстваНоменклатураПриИзменении(Элемент)
	ДеревоПроизводстваНоменклатураПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДеревоПроизводстваКоличествоПриИзмененииНаСервере(Номенклатура, КлючСтроки, Количество, ЭтоСырье, ЭтоРабота)
	//Последовательно ищем в каждой строке
	Если ЭтоСырье ТОгда
		МассивСтрок = Объект.РеквизитТаблицаПлана.НайтиСтроки(Новый Структура("Номенклатура,КлючСтроки",Номенклатура, КлючСтроки));
		Если МассивСтрок.Количество()>0 тогда
			МассивСтрок[0].ПланПроизводства = Количество;
			МассивСтрок[0].ПотребностьПоготовойПродукции = Количество;
		КонецЕсли;
		
	ИначеЕсли ЭтоРабота ТОгда
		МассивСтрок = Объект.ПланПоОперциям.НайтиСтроки(Новый Структура("Номенклатура,КлючСтроки",Номенклатура, КлючСтроки));
		Если МассивСтрок.Количество()>0 тогда
			МассивСтрок[0].Норма = Количество;
		КонецЕсли;
		
	ИначеЕсли НЕ ЭтоСырье И НЕ ЭтоРабота ТОгда
		МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура,КодСтроки",Номенклатура, КлючСтроки));
		Если МассивСтрок.Количество()>0 тогда
			МассивСтрок[0].Количество = Количество;
		КонецЕсли;

	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьВверхСуммы(КлючСтроки, Номенклатура)
	 Дерево = РеквизитФормыВЗначение("ДеревоПроизводства");
	 МассивСтрок = Дерево.Строки.НайтиСтроки(Новый Структура("Номенклатура,КлючСтроки",Номенклатура, КлючСтроки),Истина);
	 Если МассивСтрок.Количество()=0 Тогда
		 Сообщить("Не найдено строк!");
		 Возврат;
	 КонецЕсли;	 
	 
	 //Идем вверх по строкам и просчитываем все итоги какие есть
	 СтрокаДерева = МассивСтрок[0];
	 Пока СтрокаДерева.Родитель <> Неопределено Цикл
		  СтрокаДерева = СтрокаДерева.Родитель;
		  СуммаСтроки = 0;
		  Для Каждого СтрокаДоча из СтрокаДерева.Строки Цикл
			  СуммаСтроки = СуммаСтроки + СтрокаДоча.Сумма;
		  КонецЦикла;
		  СтрокаДерева.Сумма = СуммаСтроки;
		  СтрокаДерева.Цена = СтрокаДерева.Сумма / СтрокаДерева.Количество;
		  
		  СтрокиТовары = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура,КодСтроки",СтрокаДерева.Номенклатура, СтрокаДерева.Ключстроки));
		  Если СтрокиТовары.Количество() > 0 Тогда
			   СтрокиТовары[0].ПлановаяЦена = СтрокаДерева.Цена;
		  КонецЕсли;	  
		  
	 КонецЦикла;
	 
	 ЗначениеВРеквизитФормы(Дерево,"ДеревоПроизводства");
	 
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПроизводстваКоличествоПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ДеревоПроизводства.ТекущаяСтрока;
	ТекДанные = Элементы.ДеревоПроизводства.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Цена * ТекДанные.Количество;
	
	КлючСтроки = ТекДанные.КлючСтроки;
	Номенклатура = ТекДанные.Номенклатура;
	
	ДеревоПроизводстваКоличествоПриИзмененииНаСервере(Номенклатура, КлючСтроки, ТекДанные.Количество, ТекДанные.ЭтоСырье, ТекДанные.ЭтоРабота);
	
	ПересчитатьВверхСуммы(КлючСтроки, Номенклатура);
//	Элементы.ДеревоПроизводства.Развернуть(ТекДанные.ПолучитьИдентификатор(), истина);
КонецПроцедуры

&НаСервере
Процедура ДеревоПроизводстваЦенаПриИзмененииНаСервере(КлючСтроки, Номенклатура, Цена,  ЭтоСырье, ЭтоРабота)
	Если ЭтоСырье ТОгда
		МассивСтрок = Объект.РеквизитТаблицаПлана.НайтиСтроки(Новый Структура("Номенклатура,КлючСтроки",Номенклатура, КлючСтроки));
		Если МассивСтрок.Количество()>0 тогда
			МассивСтрок[0].ПлановаяЦена = Цена;
		КонецЕсли;
		
	ИначеЕсли ЭтоРабота ТОгда
		МассивСтрок = Объект.ПланПоОперциям.НайтиСтроки(Новый Структура("Номенклатура,КлючСтроки",Номенклатура, КлючСтроки));
		Если МассивСтрок.Количество()>0 тогда
			МассивСтрок[0].ПлановаяЦена = Цена;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПроизводстваЦенаПриИзменении(Элемент)
	ТекДанные = Элементы.ДеревоПроизводства.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Цена * ТекДанные.Количество;
	КлючСтроки = ТекДанные.КлючСтроки;
	Номенклатура = ТекДанные.Номенклатура;
	
	ДеревоПроизводстваЦенаПриИзмененииНаСервере(КлючСтроки, Номенклатура,ТекДанные.Цена, ТекДанные.Этосырье, ТекДанные.ЭтоРабота);
	
	ПересчитатьВверхСуммы(КлючСтроки, Номенклатура);	
КонецПроцедуры

&НаСервере
Процедура КомандаОбновитьОстаткиНаСервере()
	ОбРекв = РеквизитФормыВЗначение("Объект");
	ОбРекв.ОбновитьТекущиеОстаткиПоПлануГотовойПродукции();
	Объект.РеквизитТаблицаПлана.Загрузить(ОбРекв.РеквизитТаблицаПлана.Выгрузить());
	Объект.Товары.Загрузить(ОбРекв.Товары.Выгрузить());
	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьОстатки(Команда)
	КомандаОбновитьОстаткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьПланНаСервере()
	ЭтаФорма.Записать();
	НЗ = РегистрыСведений.вт_ГрафикВыполненияПроизводства.СоздатьНаборЗаписей();
	НЗ.Отбор.ДокументОснование.Установить(Объект.Ссылка);
	НЗ.Прочитать();
	ВремНаборЗаписей = НЗ.Выгрузить();
	НЗ.Очистить();
	
	ТаблицаПлана = Новый ТаблицаЗначений;
	ТаблицаПлана.Колонки.Добавить("ДатаНачала");
	ТаблицаПлана.Колонки.Добавить("ДатаОкончания");
	ТаблицаПлана.Колонки.Добавить("Номенклатура");
	ТаблицаПлана.Колонки.Добавить("Операция");
	ТаблицаПлана.Колонки.Добавить("Заказ");

	ЗаполнитьТаблицуГрафикПроизводства(ТаблицаПлана);	
	
	ТаблицаПлана.Колонки.Добавить("ДокументОснование");
	ТаблицаПлана.ЗаполнитьЗначения(Объект.Ссылка,"ДокументОснование");
	ТаблицаПлана.Колонки.Добавить("Период");
	ТаблицаПлана.ЗаполнитьЗначения(Объект.Дата,"Период");
	
	//++20200312
	ТаблицаПлана.Колонки.Добавить("ОбрабатываетсяРегламентнымЗаданием");
	ТаблицаПлана.ЗаполнитьЗначения(Объект.ОтчетПроизводстваФормироватьРегламентнымЗаданием,"ОбрабатываетсяРегламентнымЗаданием");
	
	ТаблицаПлана.Колонки.Добавить("ОтчетПроизводства");
	Для Каждого СтрокаВремНабора Из ВремНаборЗаписей Цикл
		Если СтрокаВремНабора.ОтчетПроизводства <> Документы.вт_ОтчетПроизводства.ПустаяСсылка() Тогда
			СтруктураОтбора = Новый Структура("Номенклатура, Заказ", 
			СтрокаВремНабора.Номенклатура, СтрокаВремНабора.Заказ);
			НайденыСтроки = ТаблицаПлана.НайтиСтроки(СтруктураОтбора);
			Для Каждого НайденнаяСтрока Из НайденыСтроки Цикл			
				НайденнаяСтрока.ОтчетПроизводства = СтрокаВремНабора.ОтчетПроизводства;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
	//--20200312
	НЗ.Загрузить(ТаблицаПлана);
	
	НЗ.Записать(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуГрафикПроизводства(ТаблицаПлана)
	
	МассивПродукция = Объект.Товары.НайтиСтроки(Новый Структура("КодСтрокиРодитель",ПустойУникИдентификатор));
    ДатаНачала = Объект.Дата;	
	Для Каждого СтрокаПродукция из МассивПродукция цикл
		ВсегоОпераций=0;
		ВсегоЧасовПоОперациям = 0; 		
		
		ЗаполнитьЭтапыТаблицыГрафика(ТаблицаПлана, СтрокаПродукция.Номенклатура, СтрокаПродукция.ВариантПРоизводства, СтрокаПродукция.КодСтроки, ДатаНачала);
				
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьЭтапыТаблицыГрафика(ТаблицаПлана, Номенклатура, ВариантПроизводства, КодСтроки, ДатаСтарта);
	
	Об = РеквизитФормыВЗначение("Объект");
	
	ПФ = Объект.Товары.НайтиСтроки(Новый Структура("КодСтрокиРодитель",КодСтроки));
	Для Каждого СтрокаПФ из ПФ Цикл
		ЗаполнитьЭтапыТаблицыГрафика(ТаблицаПлана, СтрокаПФ.Номенклатура, СтрокаПФ.ВариантПроизводства, СтрокаПФ.КодСтроки, ДатаСтарта);
	КонецЦикла;
	
	МассивСтрокиТовары = Объект.Товары.НайтиСтроки( Новый Структура("КодСтроки",КодСтроки));
	СтрокаТовары = МассивСтрокиТовары[0];
	
	СтрокиПоОперациям = Объект.ПланПоОперциям.НайтиСтроки(Новый Структура("КлючСтроки",КодСтроки));
	для Каждого СтрокаОпераций из СтрокиПоОперациям Цикл //Определяем длительность по входящим в нее операциям
		СтрокаПлана = ТаблицаПлана.Добавить();
		СтрокаПлана.Номенклатура = Номенклатура;
		СтрокаПлана.ДатаНачала = ДатаСтарта;
		СтрокаПлана.Операция = СтрокаОпераций.Номенклатура;
		СтрокаПлана.Заказ    = Об.НайтиЗаказПроизводстваПоКодуПродукции(КодСтроки); 
		СтрокаПлана.ДатаОкончания = ДатаСтарта +  СтрокаОпераций.Норма;// * СтрокаТовары.ВПроизводство / ВариантПроизводства.Количество;
		ДатаСтарта = СтрокаПлана.ДатаОкончания;
	КонецЦикла;	
	
	Если СтрокиПоОперациям.Количество()=0 Тогда //Если операций нет, то берем длительность из варианта производства
		СтрокаПлана = ТаблицаПлана.Добавить();
		СтрокаПлана.Номенклатура = Номенклатура;
		СтрокаПлана.ДатаНачала = ДатаСтарта;
		СтрокаПлана.Заказ = Об.НайтиЗаказПроизводстваПоКодуПродукции(КодСтроки); 
		СтрокаПлана.ДатаОкончания = ДатаСтарта +  СтрокаТовары.ВПроизводство / ВариантПроизводства.Количество * ?(ВариантПроизводства.ВремяПроизводстваЧас>0,ВариантПроизводства.ВремяПроизводстваЧас*60*60,ВариантПроизводства.ВремяПроизводстваСек);// * СтрокаТовары.ВПроизводство / ?(ВариантПроизводства.Количество<>0,ВариантПроизводства.Количество, 1);
		ДатаСтарта = СтрокаПлана.ДатаОкончания;
	КонецЕсли;	
	
КонецПроцедуры	



&НаКлиенте
Процедура СформироватьПлан(Команда)
	СформироватьПланНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	//МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры


 &НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

 &НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура КомандаРасчетПлановыхЦен(Команда)
	КомандаРасчетПлановыхЦенНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаРасчетПлановыхЦенНаСервере()
	
	ДеревоВыпуска = РеквизитФормыВЗначение("ДеревоПроизводства");
	
	//ОбрРасчета = Обработки.вт_РасчетыПлановойСебестоимости.Создать();
	//ОбрРасчета.ПланПроизводства = Объект.Ссылка;
	//ОбрРасчета.ВидЦены = Объект.НормативныйВидЦен;
	//ОбрРасчета.ЗаполнитьПлановуюСебестоимостьВыпуска(Объект.СпособРасчетаСебестоимости, ДеревоВыпуска);
	//
	Обр = Обработки.вт_РасчетыПлановойСебестоимости.Создать();
	МассивНоменклХарактеристик = Обр.ПолучитьНоменклатурыДерева(ДеревоВыпуска);
	ТаблицаЦен = Обр.ПолучитьЦеныПоВариантуРасчета(МассивНоменклХарактеристик,  Объект.Организация, ТекущаяДата(),Объект.СпособРасчетаСебестоимости);
	
	Обр.ЗаполнитьДеревоЦенами(ДеревоВыпуска, ТаблицаЦен);
	Обр.РасчетПромежуточныхВыпусковДерева(ДеревоВыпуска);
	
	
	ЗначениеВРеквизитФормы(ДеревоВыпуска,"ДеревоПроизводства");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьПлановыеЦены(Команда)
	КомандаЗаписатьПлановыеЦеныНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаЗаписатьПлановыеЦеныНаСервере()

	ОбрРасчета = Обработки.вт_РасчетыПлановойСебестоимости.Создать();
	
	ОбФорма = РеквизитФормыВЗначение("Объект");
	ОбрРасчета.СкопироватьЦеныДереваВТаблицы(РеквизитФормыВЗначение("ДеревоПроизводства"),ОбФорма );
	
	Объект.Товары.Загрузить(ОбФорма.Товары.Выгрузить());
	Объект.РеквизитТаблицаПлана.Загрузить(ОбФорма.РеквизитТаблицаПлана.Выгрузить());
	Объект.ПланПоОперциям.Загрузить(ОбФорма.ПланПоОперциям.Выгрузить());
	
	ЭтаФорма.Записать();
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьДиаграмму(Команда)
	КомандаЗаполнитьДиаграммуНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьДиаграммуНаСервере()
	СформироватьПланНаСервере();
	ОбоДГ = Обработки.вт_ДиаграммаГантаПоПроцессам.Создать();
	ОбоДГ.ПланЗаказ = Объект.Ссылка;
	ГруппировкаПоОснованию = НЕ ЗначениеЗаполнено(Объект.ДокументОснования);
	ОбоДГ.СформироватьДиаграммуГанта(ДиаграммаГанта, ГруппировкаПоОснованию);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	ИнфоСтруктура = Новый Структура("КодСтроки, Номенклатура");
	ЗаполнитьЗначенияСвойств(ИнфоСтруктура,ТекДанные);
	УдалениеСтрокиПродукции(ИнфоСтруктура);
	ЗаполнитьСтруктуруПроизводства();
КонецПроцедуры

&НаСервере
Процедура УдалениеСтрокиПродукции(ДанныеСтроки)
	Обр = Обработки.вт_РасчетыПлановойСебестоимости.Создать();
	ОбФормы = РеквизитФормыВЗначение("Объект");
	Обр.УдалениеПланаПроизводстваПродукции(ДанныеСтроки,ОбФормы);
	Объект.РеквизитТаблицаПлана.Загрузить(ОбФормы.РеквизитТаблицаПлана.Выгрузить());
	Объект.ПланПоОперциям.Загрузить(ОбФормы.ПланПоОперциям.Выгрузить());
	
	ДеревоВЫпуска=РеквизитФормыВЗначение("ДеревоПроизводства");
	Обр.ПостроитьДеревоВыпуска(ДеревоВЫпуска, ОбФормы);
	ЗначениеВРеквизитФормы(ДеревоВЫпуска,"ДеревоПроизводства");
	
КонецПроцедуры	

&НаКлиенте
Процедура КомандаЗаполнитьПоЗаказамНаПроизводство(Команда)
	УстановитьОтборПоЗаказамСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПроизводстваПриИзменении(Элемент)
	Объект.СкладОсновной = Объект.СкладПроизводства;
КонецПроцедуры

&НаКлиенте
Процедура ПотребностьСырьяПроизводстваПечать(Команда)
	ТабДок = СформироватьПечФормуПотребностьНаСервере();
		
	ТабДок.ОтображатьГруппировки=Ложь;
	ТабДок.ОтображатьЗаголовки=Ложь;
	ТабДок.ОтображатьСетку=Ложь;
	ТабДок.ТолькоПросмотр=Истина;
	//ТабДок.Показать("Потребность сырья производства");
	
	ОбластиОбъектов = Неопределено;
	
	ИдентификаторПечатнойФормы = "ПФ_ПланПотребностиСырья";
	
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
	ПечатнаяФорма = УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
	ПечатнаяФорма.СинонимМакета = НСтр("ru = 'ПФ_ПланПотребностиСырья'");
	ПечатнаяФорма.ТабличныйДокумент = ТабДок;
	ПечатнаяФорма.ИмяФайлаПечатнойФормы = НСтр("ru = 'ПФ_ПланПотребностиСырья'");
	
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, ОбластиОбъектов);	   
	
	
КонецПроцедуры

&НаСервере
Функция СформироватьПечФормуПотребностьНаСервере()
	ТаблицаИзДерева = ВТЗНаСервере();
	мТаблица = ТаблицаИзДерева.Скопировать(Новый Структура("ЭтоСырье",Истина));	
	мТаблица2 = Новый ТаблицаЗначений;
	мТаблица2.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	КЧ = Новый КвалификаторыЧисла(15,3);
	ОписаниеТиповЧ = Новый ОписаниеТипов("Число",,,КЧ);
	мТаблица2.Колонки.Добавить("Количество",ОписаниеТиповЧ);
	мТаблица2.Колонки.Добавить("Запас",ОписаниеТиповЧ);
	Для Каждого мСтрока Из мТаблица Цикл
		мСтр =  мТаблица2.Добавить();
	    ЗаполнитьЗначенияСвойств(мСтр,мСтрока);
	КонецЦикла;		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	мТабл.Номенклатура КАК Номенклатура,
	               |	мТабл.Количество КАК Количество,
	               |	мТабл.Запас КАК Запас
	               |ПОМЕСТИТЬ мТабл
	               |ИЗ        
	               |	&мТабл1 КАК мТабл
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	мТабл.Номенклатура КАК Номенклатура,
	               |	СУММА(мТабл.Количество) КАК Количество,
	               |	МАКСИМУМ(мТабл.Запас) КАК Запас
	               |ИЗ
	               |	мТабл КАК мТабл
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	мТабл.Номенклатура";
	
	Запрос.УстановитьПараметр("мТабл1", мТаблица2);
	
	мТаблица1 = Запрос.Выполнить().Выгрузить();
	
		
	ТаблДок = Новый ТабличныйДокумент;
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	Макет = ОбъектЗначение.ПолучитьМакет("ПотребностьСырья");

	ОблЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОблШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
    ОблСтрока = Макет.ПолучитьОбласть("мСтрока");
	
	ОблЗаголовок.Параметры.Организация = Объект.Организация;
	ОблЗаголовок.Параметры.НомерДокумента = Объект.Номер;
	ОблЗаголовок.Параметры.ДатаДокумента = Объект.Дата;
	ТаблДок.Вывести(ОблЗаголовок);
	ТаблДок.Вывести(ОблШапка);
	
	НомерПП = 1;
	Для Каждого СтрокаТбл Из мТаблица1 Цикл
		ОблСтрока.Параметры.НомерПП = НомерПП;
		ОблСтрока.Параметры.Номенклатура = СтрокаТбл.Номенклатура;
		ОблСтрока.Параметры.Код = СтрокаТбл.Номенклатура.Код;
		ОблСтрока.Параметры.ЕдИзм = СтрокаТбл.Номенклатура.ЕдиницаИзмерения;
		ОблСтрока.Параметры.ПоНорме = СтрокаТбл.Количество;
		ОблСтрока.Параметры.СУчетомОстатка = СтрокаТбл.Запас;
		ТаблДок.Вывести(ОблСтрока);
		НомерПП = НомерПП + 1;
	КонецЦикла;
	
	Возврат ТаблДок;
		
КонецФункции

&НаСервере
Функция ВТЗНаСервере()
   тДерево = РеквизитФормыВЗначение("ДеревоПроизводства");
   тТаблица = Новый ТаблицаЗначений;
   тТаблица.Колонки.Добавить("ГУИД");
   тТаблица.Колонки.Добавить("Родитель");
   
   Для Каждого КолонкаДерева Из  тДерево.Колонки Цикл
	   тТаблица.Колонки.Добавить(КолонкаДерева.Имя);
   КонецЦикла;
   //тТаблица = РеквизитФормыВЗначение("Таблица");    
 
   ПреобразоватьВТЗРекурсия(тДерево, тТаблица, Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
   тДерево.Строки.Очистить();
 
   //ЗначениеВРеквизитФормы(тТаблица, "Таблица");
   //ЗначениеВРеквизитФормы(тДерево, "Дерево");
   Возврат тТаблица;
КонецФункции 

&НаСервере
Процедура ПреобразоватьВТЗРекурсия(тДерево, тТаблица, ГУИД)
   Для Каждого тСтр Из тДерево.Строки Цикл
      нСтр = тТаблица.Добавить();
	  ЗаполнитьЗначенияСвойств(нСтр,тСтр); 
      //нСтр.Колонка1 = тСтр.Колонка1;
      //нСтр.Колонка2 = тСтр.Колонка2;
      нСтр.Родитель = ГУИД;
      нСтр.ГУИД = Новый УникальныйИдентификатор();
 
      Если тСтр.Строки.Количество()>0 Тогда
         ПреобразоватьВТЗРекурсия(тСтр, тТаблица, нСтр.ГУИД);
      КонецЕсли;
  КонецЦикла;
  
КонецПроцедуры

&НаКлиенте
Процедура ВидПланированияПриИзменении(Элемент)
	УстановитьВидимостьГруппЗаполненияПланов();
	Объект.РеквизитПланПоЗаказам.Очистить();
КонецПроцедуры


