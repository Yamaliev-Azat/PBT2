
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Если передавали сырье
	Если ВидОперацииВозвратаСырья = Перечисления.вт_ВидОперацииВозвратаСырья.ОтПроизводителя ТОгда
		// регистр вт_ДавальческоеСырьеПереданное Расход
		
		Движения.вт_ДавальческоеСырьеПереданное.Записывать = Истина;
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.вт_ДавальческоеСырьеПереданное.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Партнер = Партнер;
			Движение.Контрагент = Контрагент;
			Движение.Договор = Договор;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Характеристика = ТекСтрокаТовары.Характеристика;
			Движение.Количество = ТекСтрокаТовары.Количество;
		КонецЦикла;
		
		//Отберем данные, что бы понять снимать резерв или нет
		//В запросе пытаемся определить резервы, которые остались на текущую дату и были сформированы передачей давальческого сырья этого контрагенту
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	вт_ВозвратДавальческогоСырьяТовары.Номенклатура КАК Номенклатура,
		                      |	вт_ВозвратДавальческогоСырьяТовары.Характеристика КАК Характеристика,
		                      |	СУММА(вт_ВозвратДавальческогоСырьяТовары.Количество) КАК Количество,
		                      |	вт_ВозвратДавальческогоСырьяТовары.Ссылка.Склад КАК Склад
		                      |ПОМЕСТИТЬ ВТ_ТОВАРЫ
		                      |ИЗ
		                      |	Документ.вт_ВозвратДавальческогоСырья.Товары КАК вт_ВозвратДавальческогоСырьяТовары
		                      |ГДЕ
		                      |	вт_ВозвратДавальческогоСырьяТовары.Ссылка = &Ссылка
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	вт_ВозвратДавальческогоСырьяТовары.Номенклатура,
		                      |	вт_ВозвратДавальческогоСырьяТовары.Характеристика,
		                      |	вт_ВозвратДавальческогоСырьяТовары.Ссылка.Склад
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	СвободныеОстаткиОстаткиИОбороты.Номенклатура КАК Номенклатура,
		                      |	СвободныеОстаткиОстаткиИОбороты.Характеристика КАК Характеристика,
		                      |	СУММА(СвободныеОстаткиОстаткиИОбороты.ВРезервеСоСкладаКонечныйОстаток) КАК ВРезервеСоСкладаКонечныйОстаток,
		                      |	СвободныеОстаткиОстаткиИОбороты.Склад КАК Склад
		                      |ПОМЕСТИТЬ ВТ_РЕЗЕРВЫ
		                      |ИЗ
		                      |	РегистрНакопления.СвободныеОстатки.ОстаткиИОбороты(
		                      |			,
		                      |			&НаДату,
		                      |			Период,
		                      |			,
		                      |			(Номенклатура, Характеристика, Склад) В
		                      |				(ВЫБРАТЬ
		                      |					ВТ_ТОВАРЫ.Номенклатура КАК Номенклатура,
		                      |					ВТ_ТОВАРЫ.Характеристика КАК Характеристика,
		                      |					ВТ_ТОВАРЫ.Склад КАК Склад
		                      |				ИЗ
		                      |					ВТ_ТОВАРЫ КАК ВТ_ТОВАРЫ)) КАК СвободныеОстаткиОстаткиИОбороты
		                      |ГДЕ
		                      |	СвободныеОстаткиОстаткиИОбороты.ВРезервеСоСкладаКонечныйОстаток > 0
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	СвободныеОстаткиОстаткиИОбороты.Номенклатура,
		                      |	СвободныеОстаткиОстаткиИОбороты.Характеристика,
		                      |	СвободныеОстаткиОстаткиИОбороты.Склад
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ_РЕЗЕРВЫ.Номенклатура КАК Номенклатура,
		                      |	ВТ_РЕЗЕРВЫ.Характеристика КАК Характеристика,
		                      |	ВТ_РЕЗЕРВЫ.ВРезервеСоСкладаКонечныйОстаток КАК ВРезервеСоСкладаКонечныйОстаток,
		                      |	ВТ_РЕЗЕРВЫ.Склад КАК Склад,
		                      |	ВТ_ТОВАРЫ.Количество КАК Количество
		                      |ИЗ
		                      |	ВТ_РЕЗЕРВЫ КАК ВТ_РЕЗЕРВЫ
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТОВАРЫ КАК ВТ_ТОВАРЫ
		                      |		ПО ВТ_РЕЗЕРВЫ.Номенклатура = ВТ_ТОВАРЫ.Номенклатура
		                      |			И ВТ_РЕЗЕРВЫ.Характеристика = ВТ_ТОВАРЫ.Характеристика
		                      |			И ВТ_РЕЗЕРВЫ.Склад = ВТ_ТОВАРЫ.Склад
		                      |");
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("НаДату", ЭтотОбъект.Дата);
		Запрос.УстановитьПараметр("Партнер", Партнер);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Договор", Договор);

		Выборка = Запрос.Выполнить().Выбрать();
		
		Движения.СвободныеОстатки.Записывать = Истина;
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.СвободныеОстатки.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Характеристика = Выборка.Характеристика;
			Движение.Склад = Склад;
			Движение.ВРезервеСоСклада = МИН(Выборка.Количество, Выборка.ВРезервеСоСкладаКонечныйОстаток);
		КонецЦикла;	
		
		
		
	ИначеЕсли ВидОперацииВозвратаСырья = Перечисления.вт_ВидОперацииВозвратаСырья.Заказчику ТОгда
		// регистр вт_ДавальческоеСырьеПолученное Расход
		
		Движения.вт_ДавальческоеСырьеПолученное.Записывать = Истина;
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.вт_ДавальческоеСырьеПолученное.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Партнер = Партнер;
			Движение.Контрагент = Контрагент;
			Движение.Договор = Договор;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Характеристика = ТекСтрокаТовары.Характеристика;
			Движение.Количество = ТекСтрокаТовары.Количество;
		КонецЦикла;		
	КонецЕсли;
	
	
	ВозвратСырья = ?(ВидОперацииВозвратаСырья = Перечисления.вт_ВидОперацииВозвратаСырья.ОтПроизводителя,Истина, Ложь);
	
	//ДвиженияПоРеглРегистрам();
	
	//Предполагается, что когда мы передали сырье, мы сделали движение только по двум регламентированным регистрам	
	//Следовательно возвращаем их обратно
	
	//регистр свободные остатки
	//Движения.СвободныеОстатки.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.СвободныеОстатки.Добавить();
	//	Движение.ВидДвижения = ?(ВозвратСырья,ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход);
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
	//	Движение.Характеристика = ТекСтрокаТовары.Характеристика;
	//	Движение.Склад = Склад;
	//	Движение.ВРезервеСоСклада = ТекСтрокаТовары.Количество;
	//	Движение.ВНаличии = ТекСтрокаТовары.Количество;
	//КонецЦикла;

	//// регистр ТоварыНаСкладах Расход
	//Движения.ТоварыНаСкладах.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.ТоварыНаСкладах.Добавить();
	//	Движение.ВидДвижения =  ?(ВозвратСырья, ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход);
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
	//	Движение.Характеристика = ТекСтрокаТовары.Характеристика;
	//	Движение.Склад = Склад;
	//	Движение.ВНаличии = ТекСтрокаТовары.Количество;
	//КонецЦикла;
	
	
КонецПроцедуры



Функция ПолучитьПервуюСтатьюДоходов()
	Выборка=ПланыВидовХарактеристик.СтатьиДоходов.Выбрать();
	Если Выборка.Следующий() ТОгда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ПланыВидовХарактеристик.СтатьиДоходов.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьПервоеПодразделение()
	
	Выборка = Справочники.СтруктураПредприятия.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.СтруктураПредприятия.ПустаяСсылка();
	
КонецФункции	


Процедура ДвиженияПоРеглРегистрам()
	//Возьмем движения по регистрам, аналогичные оприходование товаров
    //Возвращаем сырье обратно на склад
	
	ДокОприходование = Документы.СписаниеНедостачТоваров.СоздатьДокумент();
	ДокОприходование.Дата = Дата;
	ДокОприходование.Склад = Склад;
	ДокОприходование.Организация =  Организация;
	ДокОприходование.Подразделение = ПолучитьПервоеПодразделение();
	
	
	ТаблТовары = ЭтотОбъект.Товары.Выгрузить();
	ТаблТовары.Свернуть("Номенклатура,Характеристика","Количество");
	ТаблТовары.Колонки.Добавить("Цена");
	ТаблТовары.Колонки.Добавить("Сумма");
	ТаблТовары.Колонки.Добавить("ВидЗапасов");
	
	ТаблТовары.ЗаполнитьЗначения(1,"Цена");
	ТаблТовары.ЗаполнитьЗначения(1,"Сумма");
	
	ДокОприходование.Товары.Загрузить(ТаблТовары);
	
	ДокОприходование.Записать(РежимЗаписиДокумента.Проведение);
	
	ДвижДокСборка = ДокОприходование.Движения;
	
	МД_ДокСборка = ДокОприходование.метаданные().Движения;
	МД_ЭтотОбъект = ЭтотОбъект.метаданные().Движения;
	МД_Массив = Новый Массив;
	Для каждого МД_СтрЭтотОбъект из МД_ЭтотОбъект цикл
		Для каждого МД_СтрДокСборка из МД_ДокСборка цикл
			Если МД_СтрДокСборка.Имя = МД_СтрЭтотОбъект.Имя тогда
				МД_Массив.Добавить(МД_СтрЭтотОбъект.Имя);
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	ДвижСебестоимость = новый ТаблицаЗначений;
	Для каждого ЭлементМД_Массив из МД_Массив цикл
		
		ДвижСебестоимость = ДвижДокСборка[ЭлементМД_Массив].выгрузить();
		ДвижСебестоимость.Колонки.Удалить("Регистратор");
		
			Движения[ЭлементМД_Массив].Записывать = Истина;
			Движения[ЭлементМД_Массив].Загрузить(ДвижСебестоимость);
			
			//Для каждого СтрокаДвижСебестоимость Из ДвижСебестоимость Цикл
			//	НоваяСтрокаДвижСебестоимость = Движения[ЭлементМД_Массив].Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрокаДвижСебестоимость, СтрокаДвижСебестоимость);
			//КонецЦикла;
		
	КонецЦикла;
	
	Попытка  
		ДокОприходование.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Исключение
	КонецПопытки;	
	ДокОприходование.УстановитьПометкуУдаления(Истина);
	
	УдалитьДанныеДокументов(ДокОприходование.Ссылка);
	
	ДокОприходование.ОбменДанными.Загрузка=истина;
	ДокОприходование.Удалить();	
	
КонецПроцедуры	

Процедура УдалитьДанныеДокументов(ДокСсылка)
	НЗ = РегистрыСведений.РеестрДокументов.СоздатьНаборЗаписей();
	НЗ.Отбор.Ссылка.Установить(ДокСсылка);
	НЗ.Прочитать();
	НЗ.Очистить();
	НЗ.Записать(Истина);	
КонецПроцедуры
