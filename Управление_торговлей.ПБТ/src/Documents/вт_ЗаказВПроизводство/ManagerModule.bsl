////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры	

Функция ПечатьЗаказВпроизводство(МассивОбъектов) Экспорт
    
    ТабДок = Новый ТабличныйДокумент;
          
    ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
    ЗапросПоДокументам.Текст =
    "ВЫБРАТЬ
    |	Документ.Ссылка КАК Ссылка,
    |	Документ.Номер КАК Номер,
    |	Документ.Дата КАК Дата,
    |	Документ.Склад КАК Склад,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
    |	Документ.Организация КАК Организация,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
    |	Документ.Контрагент,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК КонтрагентПредставление,
    |	Документ.Партнер,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Партнер) КАК ПартнерПредставление,
    |	Документ.ДокументОснование,
    |	Документ.Организация.Префикс КАК Префикс,
    |	Документ.Товары.(
    |		НомерСтроки КАК НомерСтроки,
    |		Номенклатура КАК Номенклатура,
    |		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
    |		Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
    |		Характеристика КАК Характеристика,
    |		ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Товары.Номенклатура.ЕдиницаИзмерения) КАК Упаковка,
    |		Количество КАК Количество
    |	) КАК ТаблицаТовары,
    |	Документ.ТребуемаяДата
    |ИЗ
    |	Документ.вт_ЗаказВПроизводство КАК Документ
    |ГДЕ
    |	Документ.Ссылка В(&МассивОбъектов)
    |
    |УПОРЯДОЧИТЬ ПО
    |	НомерСтроки";
    РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
    
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказВПроизводство";
	
	Макет = ПолучитьМакет("ПФ_MXL_ЗаказВПроизводство");
	
	ОбластьШапки     = "ШапкаТаблицы";    
	ОбластьСтроки    = "Строка";
    	
    ПервыйДокумент = Истина;
    ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
	
    Пока ВыборкаДокументы.Следующий() Цикл
    	
    	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
    	
    	Если Не ПервыйДокумент Тогда
    		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
    	КонецЕсли;
    	ПервыйДокумент = Ложь;
    	
    	// Вывод заголовка.
    	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
        ОбластьМакета.Параметры.ТекстЗаголовка = ВыборкаДокументы.Ссылка;
        ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, ВыборкаДокументы.Ссылка);
		ОбластьМакета.Параметры.Клиент = ВыборкаДокументы.ПартнерПредставление;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ВыборкаДокументы.ТребуемаяДата <> Дата(1,1,1) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СобратьКДате");
			ОбластьМакета.Параметры.ТребуемаяДата = Формат(ВыборкаДокументы.ТребуемаяДата,"ДЛФ=DD"); 
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		    	    	
    	// Вывод шапки отчета.
    	ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		
		ТабДокумент.Вывести(ОбластьМакета);
    	
    	// Вывод строк документа.        
        ВыборкаПоСтрокам = ВыборкаДокументы.ТаблицаТовары.Выбрать(); 
		ИтогоКоличество = 0;
        Пока ВыборкаПоСтрокам.Следующий() Цикл                          
                                 		
    		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
    		ОбластьМакета.Параметры.Заполнить(ВыборкаПоСтрокам);
    		
    		ОбластьМакета.Параметры.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
    			ВыборкаПоСтрокам.НоменклатураПредставление,
    			ВыборкаПоСтрокам.ХарактеристикаПредставление
    		);
    		
    		ТабДокумент.Вывести(ОбластьМакета);                
        	ИтогоКоличество = ИтогоКоличество + ВыборкаПоСтрокам.Количество;           
		КонецЦикла;    
		//Вывод Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итог");
		ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
        ТабДокумент.Вывести(ОбластьМакета);
    	
    	// Вывод подписей.
    	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
    	ОбластьМакета.Параметры.ОтветственныйПредставление = "/                                        /";
    	ТабДокумент.Вывести(ОбластьМакета);
    	
    	//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
    	
    КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьЗаказВпроизводствоСОстатком(МассивОбъектов) Экспорт
    
    ТабДок = Новый ТабличныйДокумент;
		          
    ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
    ЗапросПоДокументам.Текст =
    "ВЫБРАТЬ
    |	Документ.Ссылка КАК Ссылка,
    |	Документ.Номер КАК Номер,
    |	Документ.Дата КАК Дата,
    |	Документ.Склад КАК Склад,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
    |	Документ.Организация КАК Организация,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
    |	Документ.Контрагент,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК КонтрагентПредставление,
    |	Документ.Партнер,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Партнер) КАК ПартнерПредставление,
    |	Документ.ДокументОснование,
    |	Документ.Организация.Префикс КАК Префикс,
    |	Документ.Товары.(
    |		НомерСтроки КАК НомерСтроки,
    |		Номенклатура КАК Номенклатура,
    |		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
    |		Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
    |		Характеристика КАК Характеристика,
    |		ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Товары.Номенклатура.ЕдиницаИзмерения) КАК Упаковка,
    |		Количество КАК Количество
    |	) КАК ТаблицаТовары,
    |	Документ.ТребуемаяДата
    |ИЗ
    |	Документ.вт_ЗаказВПроизводство КАК Документ
    |ГДЕ
    |	Документ.Ссылка В(&МассивОбъектов)
    |
    |УПОРЯДОЧИТЬ ПО
    |	НомерСтроки";
    РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
    
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказВПроизводство";
	
	Макет = ПолучитьМакет("ПФ_MXL_ЗаказВПроизводствоСОстатком");
	
	ОбластьШапки     = "ШапкаТаблицы";    
	ОбластьСтроки    = "Строка";
    	
    ПервыйДокумент = Истина;
    ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
    Пока ВыборкаДокументы.Следующий() Цикл
    	
    	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
    	
    	Если Не ПервыйДокумент Тогда
    		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
    	КонецЕсли;
    	ПервыйДокумент = Ложь;
    	
    	// Вывод заголовка.
    	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
        ОбластьМакета.Параметры.ТекстЗаголовка = ВыборкаДокументы.Ссылка;
        ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, ВыборкаДокументы.Ссылка);
		ОбластьМакета.Параметры.Клиент = ВыборкаДокументы.ПартнерПредставление;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ВыборкаДокументы.ТребуемаяДата <> Дата(1,1,1) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СобратьКДате");
			ОбластьМакета.Параметры.ТребуемаяДата = Формат(ВыборкаДокументы.ТребуемаяДата,"ДЛФ=DD"); 
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		    	    	
    	// Вывод шапки отчета.
    	ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		
		ТабДокумент.Вывести(ОбластьМакета);
    	
    	// Вывод строк документа.        
        ВыборкаПоСтрокам = ВыборкаДокументы.ТаблицаТовары.Выбрать(); 
		ИтогоКоличество = 0;
		ИтогоОстаток = 0;
        Пока ВыборкаПоСтрокам.Следующий() Цикл                          
                                 		
    		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
    		ОбластьМакета.Параметры.Заполнить(ВыборкаПоСтрокам);
    		
    		ОбластьМакета.Параметры.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
    			ВыборкаПоСтрокам.НоменклатураПредставление,
    			ВыборкаПоСтрокам.ХарактеристикаПредставление
    		);
			
			ТипОперацииНоменклатуры = ПолучитьТипНоменклатуры(ВыборкаПоСтрокам.Номенклатура);
			ОбластьМакета.Параметры.ТипОперации	= ТипОперацииНоменклатуры; 
			ТекОстаток = ПолучитьОстатокНоменклатуры(ВыборкаПоСтрокам.Номенклатура,ВыборкаПоСтрокам.Характеристика,ВыборкаДокументы.Склад, ВыборкаДокументы.Дата); 
			ОбластьМакета.Параметры.Остаток	= ТекОстаток;
			
			ИтогоКоличество = ИтогоКоличество + ВыборкаПоСтрокам.Количество;
			ИтогоОстаток = ИтогоОстаток + ТекОстаток;
			
    		ТабДокумент.Вывести(ОбластьМакета);  
			
			//Если ТипОперацииНоменклатуры = "Комплектация" Тогда
			//	СоставКомплекта = ПолучитьСоставКомплектаДляПроизводства(ВыборкаПоСтрокам.Номенклатура, ВыборкаПоСтрокам.Количество, ВыборкаДокументы.Склад, ВыборкаДокументы.Дата);
			//	Для каждого Комплект Из СоставКомплекта Цикл
			//		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
			//		ОбластьМакета.Параметры.НоменклатураПредставление = Комплект.Пропуск + НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			//			Комплект.НоменклатураПредставление,
			//			Комплект.ХарактеристикаПредставление
			//		);
			//		ОбластьМакета.Параметры.Количество	= Комплект.Количество;
			//		ОбластьМакета.Параметры.Упаковка	= Комплект.ЕдИзм;

			//		ОбластьМакета.Параметры.ТипОперации	= Комплект.ТипНоменклатуры; 
			//		ОбластьМакета.Параметры.Остаток		= Комплект.Остаток;	
			//		ТабДокумент.Вывести(ОбластьМакета);
			//		ИтогоКоличество = ИтогоКоличество + Комплект.Количество;
			//		ИтогоОстаток = ИтогоОстаток + Комплект.Остаток;
			//	КонецЦикла;	
			//КонецЕсли;	
        	           
		КонецЦикла; 
		//Вывод Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итог");
		ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьМакета.Параметры.ИтогоОстаток = ИтогоОстаток;
        ТабДокумент.Вывести(ОбластьМакета);

    	
    	// Вывод подписей.
    	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
    	ОбластьМакета.Параметры.ОтветственныйПредставление = "/                                        /";
    	ТабДокумент.Вывести(ОбластьМакета);
    	
    	//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
    	
    КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьЗаказНаряда(МассивОбъектов) Экспорт
	ТабДок = Новый ТабличныйДокумент;
		          
    ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
    ЗапросПоДокументам.Текст =
    "ВЫБРАТЬ
    |	Документ.Ссылка КАК Ссылка,
    |	Документ.Номер КАК Номер,
    |	Документ.Дата КАК Дата,
    |	Документ.Склад КАК Склад,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
    |	Документ.Организация КАК Организация,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
    |	Документ.Контрагент КАК Контрагент,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК КонтрагентПредставление,
    |	Документ.Партнер КАК Партнер,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Партнер) КАК ПартнерПредставление,
    |	Документ.ДокументОснование КАК ДокументОснование,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Исполнитель) КАК ИсполнительПредставление,
    |	Документ.Организация.Префикс КАК Префикс,
    |	Документ.Товары.(
    |		НомерСтроки КАК НомерСтроки,
    |		Номенклатура КАК Номенклатура,
    |		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
    |		Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
    |		Характеристика КАК Характеристика,
    |		ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Товары.Номенклатура.ЕдиницаИзмерения) КАК Упаковка,
    |		Количество КАК Количество,
    |		КоличествоУпаковок КАК КоличествоУпаковок,
    |		Цена КАК Цена,
    |		Сумма КАК Сумма
    |	) КАК ТаблицаТовары,
    |	Документ.ТребуемаяДата КАК ТребуемаяДата,
    |	Документ.ДокументОснование.Дата КАК ДатаЗаказа
    |ИЗ
    |	Документ.вт_ЗаказВПроизводство КАК Документ
    |ГДЕ
    |	Документ.Ссылка В(&МассивОбъектов)
    |
    |УПОРЯДОЧИТЬ ПО
    |	НомерСтроки";
    РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
    
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказНаряд";
	
	Макет = ПолучитьМакет("ПФ_MXL_ЗаказНаряд");
	
	ОбластьШапки     = "ШапкаТаблицы";    
	ОбластьСтроки    = "СтрокаТовары";
    	
    ПервыйДокумент = Истина;
    ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
    Пока ВыборкаДокументы.Следующий() Цикл
    	
    	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
    	
    	Если Не ПервыйДокумент Тогда
    		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
    	КонецЕсли;
    	ПервыйДокумент = Ложь;
    	
    	// Вывод заголовка.
    	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = "Заказ-наряд № "+
		СокрЛП(ВыборкаДокументы.Номер)+
		" от "+Формат(ВыборкаДокументы.Дата,"ДЛФ=DD");
		//ВыборкаДокументы.Ссылка;
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = 
		ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(ВыборкаДокументы.ИсполнительПредставление)+
		"("+ВыборкаДокументы.ОрганизацияПредставление+")"; 
		//ВыборкаДокументы.ИсполнительПредставление;
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
       // ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, ВыборкаДокументы.Ссылка);
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ВыборкаДокументы.ПартнерПредставление;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		//Если ВыборкаДокументы.ТребуемаяДата <> Дата(1,1,1) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Сроки");  
		Если ЗначениеЗаполнено(ВыборкаДокументы.ДатаЗаказа) Тогда
			ОбластьМакета.Параметры.ДатаДокумента = Формат(ВыборкаДокументы.ДатаЗаказа,"ДЛФ=DD");
		Иначе	
			ОбластьМакета.Параметры.ДатаДокумента = Формат(ВыборкаДокументы.Дата,"ДЛФ=DD");
		КонецЕсли;
		
		ОбластьМакета.Параметры.Старт =  Формат(ВыборкаДокументы.Дата,"ДЛФ=DD");
		Если ЗначениеЗаполнено(ВыборкаДокументы.ТребуемаяДата) Тогда
			ОбластьМакета.Параметры.Финиш = Формат(ВыборкаДокументы.ТребуемаяДата,"ДЛФ=DD");	
		Иначе	
			ОбластьМакета.Параметры.Финиш = Формат(ВыборкаДокументы.Дата,"ДЛФ=DD");
		КонецЕсли;
		//ТребуемаяДата = Формат(ВыборкаДокументы.ТребуемаяДата,"ДЛФ=DD"); 
		ТабДокумент.Вывести(ОбластьМакета);
		//КонецЕсли;
		    	    	
    	// Вывод шапки отчета.
    	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыТовары");
		
		ТабДокумент.Вывести(ОбластьМакета);
    	
    	// Вывод строк документа.        
        ВыборкаПоСтрокам = ВыборкаДокументы.ТаблицаТовары.Выбрать(); 
		ИтогоКоличество = 0;
		ИтогоОстаток = 0;
		ИтогоСумма = 0;
		НомерСтроки = 1;
        Пока ВыборкаПоСтрокам.Следующий() Цикл                          
                                 		
    		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
    		ОбластьМакета.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Количество) Тогда
				ОбластьМакета.Параметры.Количество = ВыборкаПоСтрокам.КоличествоУпаковок;
			КонецЕсли;	
			ОбластьМакета.Параметры.ЕдиницаИзмерения = ВыборкаПоСтрокам.Номенклатура.ЕдиницаИзмерения;
    		
    		ОбластьМакета.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
    			ВыборкаПоСтрокам.НоменклатураПредставление,
    			ВыборкаПоСтрокам.ХарактеристикаПредставление
    		);
			
			//ТипОперацииНоменклатуры = ПолучитьТипНоменклатуры(ВыборкаПоСтрокам.Номенклатура);
			//ОбластьМакета.Параметры.ТипОперации	= ТипОперацииНоменклатуры; 
			ТекОстаток = ПолучитьОстатокНоменклатуры(ВыборкаПоСтрокам.Номенклатура,ВыборкаПоСтрокам.Характеристика,ВыборкаДокументы.Склад, ВыборкаДокументы.Дата); 
			//ОбластьМакета.Параметры.Остаток	= ТекОстаток;
			
			ИтогоКоличество = ИтогоКоличество + ВыборкаПоСтрокам.Количество;
			ИтогоОстаток = ИтогоОстаток + ТекОстаток;
			ИтогоСумма = ИтогоСумма + ВыборкаПоСтрокам.Сумма;
			
    		ТабДокумент.Вывести(ОбластьМакета);  
			
			//Если ТипОперацииНоменклатуры = "Комплектация" Тогда
			//	СоставКомплекта = ПолучитьСоставКомплектаДляПроизводства(ВыборкаПоСтрокам.Номенклатура, ВыборкаПоСтрокам.Количество, ВыборкаДокументы.Склад, ВыборкаДокументы.Дата);
			//	Для каждого Комплект Из СоставКомплекта Цикл
			//		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
			//		ОбластьМакета.Параметры.НоменклатураПредставление = Комплект.Пропуск + НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			//			Комплект.НоменклатураПредставление,
			//			Комплект.ХарактеристикаПредставление
			//		);
			//		ОбластьМакета.Параметры.Количество	= Комплект.Количество;
			//		ОбластьМакета.Параметры.Упаковка	= Комплект.ЕдИзм;

			//		ОбластьМакета.Параметры.ТипОперации	= Комплект.ТипНоменклатуры; 
			//		ОбластьМакета.Параметры.Остаток		= Комплект.Остаток;	
			//		ТабДокумент.Вывести(ОбластьМакета);
			//		ИтогоКоличество = ИтогоКоличество + Комплект.Количество;
			//		ИтогоОстаток = ИтогоОстаток + Комплект.Остаток;
			//	КонецЦикла;	
			//КонецЕсли;	
        	           
		КонецЦикла; 
		//Вывод Итого
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоТовары");
		ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьМакета.Параметры.Всего = ИтогоСумма;
		//ОбластьМакета.Параметры.ИтогоОстаток = ИтогоОстаток;
        ТабДокумент.Вывести(ОбластьМакета);

    	
		// Вывод подписей.
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		//ОбластьМакета.Параметры.ОтветственныйПредставление = "/                                        /";
		//ОбластьМакета.Параметры.РасшифровкаПодписиВыполнилРаботыУслуги = ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(ВыборкаДокументы.ИсполнительПредставление); 
		ОбластьМакета.Параметры.РасшифровкаПодписиВыполнилРаботыУслуги = ВыборкаДокументы.ИсполнительПредставление;
		ОбластьМакета.Параметры.РасшифровкаПодписиПринялРаботыУслуги =  "";
		ТабДокумент.Вывести(ОбластьМакета);
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
    	
    КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПолучитьТипНоменклатуры(Номенклатура)
	ТипОперацииНоменклатуры = "";
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вт_ВариантыПроизводстваПоТехКартам.Ссылка,
		|	""Производство"" КАК ТипОперации
		|ИЗ
		|	Справочник.вт_ВариантыПроизводстваПоТехКартам КАК вт_ВариантыПроизводстваПоТехКартам
		|ГДЕ
		|	вт_ВариантыПроизводстваПоТехКартам.Владелец = &Номенклатура
		|	И НЕ вт_ВариантыПроизводстваПоТехКартам.ПометкаУдаления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВариантыКомплектацииНоменклатуры.Ссылка,
		|	""Комплектация""
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|ГДЕ
		|	ВариантыКомплектацииНоменклатуры.Владелец = &Номенклатура
		|	И НЕ ВариантыКомплектацииНоменклатуры.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТипОперации";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура); 	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда     	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Ссылка<>Неопределено Тогда 
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка) Тогда
					ТипОперацииНоменклатуры = ВыборкаДетальныеЗаписи.ТипОперации;
					Прервать;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	Возврат ТипОперацииНоменклатуры;	
КонецФункции	

Функция ПолучитьОстатокНоменклатуры(Номенклатура,Характеристика,Склад,Дата)
	ОстатокНоменклатуры = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.ВНаличииОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&Дата,
		|			Номенклатура = &Номенклатура
		|				И Характеристика = &Характеристика
		|				И Склад = &Склад) КАК ТоварыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Характеристика", Характеристика); 	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда   		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ВНаличииОстаток<>Неопределено Тогда
				ОстатокНоменклатуры = ВыборкаДетальныеЗаписи.ВНаличииОстаток;
				Прервать;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	Возврат ОстатокНоменклатуры;
КонецФункции	

Функция ПолучитьСоставКомплектаДляПроизводства(Номенклатура, КоличествоКомплекта, Склад, Дата, Пропуск = "")
	Пропуск = Пропуск + "        ";
	СоставКомплекта = Новый ТаблицаЗначений;
	СоставКомплекта.Колонки.Добавить("НоменклатураПредставление");
	СоставКомплекта.Колонки.Добавить("ХарактеристикаПредставление");
	СоставКомплекта.Колонки.Добавить("Количество");
	СоставКомплекта.Колонки.Добавить("ЕдИзм");
	СоставКомплекта.Колонки.Добавить("ТипНоменклатуры"); 
	СоставКомплекта.Колонки.Добавить("Остаток");
	СоставКомплекта.Колонки.Добавить("Пропуск");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
		|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
		|	ВариантыКомплектацииНоменклатурыТовары.Количество,
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ПРЕДСТАВЛЕНИЕ(ВариантыКомплектацииНоменклатурыТовары.Номенклатура) КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ВариантыКомплектацииНоменклатурыТовары.Характеристика) КАК ХарактеристикаПредставление
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
		|ГДЕ
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец",Номенклатура);	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Номенклатура<>Неопределено Тогда
				ТипНоменклатуры = ПолучитьТипНоменклатуры(ВыборкаДетальныеЗаписи.Номенклатура);
				Если ТипНоменклатуры = "Производство" Или ТипНоменклатуры = "Комплектация" Тогда
					СтрокаКомплекта = СоставКомплекта.Добавить();
					СтрокаКомплекта.НоменклатураПредставление    = ВыборкаДетальныеЗаписи.НоменклатураПредставление;
					СтрокаКомплекта.ХарактеристикаПредставление  = ВыборкаДетальныеЗаписи.ХарактеристикаПредставление;
					СтрокаКомплекта.Количество      = ВыборкаДетальныеЗаписи.Количество * КоличествоКомплекта;
					СтрокаКомплекта.ЕдИзм		    = ВыборкаДетальныеЗаписи.ЕдиницаИзмерения;
					СтрокаКомплекта.ТипНоменклатуры = ТипНоменклатуры;
					СтрокаКомплекта.Остаток			= ПолучитьОстатокНоменклатуры(ВыборкаДетальныеЗаписи.Номенклатура,ВыборкаДетальныеЗаписи.Характеристика,Склад,Дата);
					СтрокаКомплекта.Пропуск 	    = Пропуск;
					Если ТипНоменклатуры = "Комплектация" Тогда
						ТаблицаКомплекта = ПолучитьСоставКомплектаДляПроизводства(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Количество * КоличествоКомплекта, Склад, Дата, Пропуск);
						Для каждого ПодСтрокаКомплекта Из ТаблицаКомплекта Цикл
							СтрокаКомплекта = СоставКомплекта.Добавить();
							СтрокаКомплекта.НоменклатураПредставление    = ПодСтрокаКомплекта.НоменклатураПредставление;
							СтрокаКомплекта.ХарактеристикаПредставление  = ПодСтрокаКомплекта.ХарактеристикаПредставление;
							СтрокаКомплекта.Количество      = ПодСтрокаКомплекта.Количество;
							СтрокаКомплекта.ЕдИзм		    = ПодСтрокаКомплекта.ЕдИзм;
							СтрокаКомплекта.ТипНоменклатуры = ПодСтрокаКомплекта.ТипНоменклатуры;
							СтрокаКомплекта.Остаток			= ПодСтрокаКомплекта.Остаток;
							СтрокаКомплекта.Пропуск 	    = ПодСтрокаКомплекта.Пропуск;  	
						КонецЦикла;	
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	Возврат СоставКомплекта;
КонецФункции	

Функция ПолучитьДоступныйОстатокСырья(Номенклатура,Характеристика,Склад,Дата) Экспорт
	ОстатокНоменклатуры = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СвободныеОстаткиОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
		|	СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток КАК ВРезервеСоСкладаОстаток,
		|	СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток КАК ВРезервеПодЗаказОстаток
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(
		|			&Дата,
		|			Номенклатура = &Номенклатура
		|				И Характеристика = &Характеристика
		|				И Склад = &Склад) КАК СвободныеОстаткиОстатки";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Характеристика", Характеристика); 	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда   		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ВНаличииОстаток<>Неопределено Тогда
				ОстатокНоменклатуры = ВыборкаДетальныеЗаписи.ВНаличииОстаток;
				//Здесь по условию настройки склада вычитаем ВРезервеПодЗаказОстаток
				КонтрольОсуществляется = ВключенКонтрольПоОстаткамСУчетомРезерва(Склад,Номенклатура,Характеристика);
				Если КонтрольОсуществляется Тогда
					ОстатокНоменклатуры = ОстатокНоменклатуры - Макс(0,ВыборкаДетальныеЗаписи.ВРезервеПодЗаказОстаток); 
				КонецЕсли;	
				Прервать;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	Возврат ОстатокНоменклатуры;
КонецФункции	

Функция ПолучитьРезервПодЗаказ(Количество,Номенклатура,Характеристика,Склад,Дата) Экспорт
	ДоступныйОстаток = ПолучитьДоступныйОстатокСырья(Номенклатура,Характеристика,Склад,Дата);
	РезервПодЗаказ = Мин(ДоступныйОстаток,Количество);
	Возврат РезервПодЗаказ;
КонецФункции

Функция ВключенКонтрольПоОстаткамСУчетомРезерва(мСклад,мНоменклатура,мХарактеристика) Экспорт
	ТаблицаПараметров = Новый ТаблицаЗначений;
	ТаблицаПараметров.Колонки.Добавить("Склад",Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаПараметров.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаПараметров.Колонки.Добавить("Характеристика",Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	мСтрокаПараметров = ТаблицаПараметров.Добавить();
	мСтрокаПараметров.Склад = мСклад;
	мСтрокаПараметров.Номенклатура = мНоменклатура;
	мСтрокаПараметров.Характеристика = мХарактеристика;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВнешняяТаблицаПараметров.Склад КАК Склад,
	|	ВнешняяТаблицаПараметров.Номенклатура КАК Номенклатура,
	|	ВнешняяТаблицаПараметров.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВнешняяТаблицаПараметров
	|ИЗ
	|	&ВнешняяТаблицаПараметров КАК ВнешняяТаблицаПараметров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать, ЕСТЬNULL(НастройкаНоменклатура.Контролировать, НастройкаСклад.Контролировать)) КАК КонтрольОсуществляется
	|ИЗ
	|	ВнешняяТаблицаПараметров КАК ВнешняяТаблицаПараметров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО ВнешняяТаблицаПараметров.Склад = НастройкаХарактеристика.Склад
	|			И ВнешняяТаблицаПараметров.Номенклатура = НастройкаХарактеристика.Номенклатура
	|			И ВнешняяТаблицаПараметров.Характеристика = НастройкаХарактеристика.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО ВнешняяТаблицаПараметров.Склад = НастройкаНоменклатура.Склад
	|			И ВнешняяТаблицаПараметров.Номенклатура = НастройкаНоменклатура.Номенклатура
	|			И (НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО ВнешняяТаблицаПараметров.Склад = НастройкаСклад.Склад
	|			И (НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|			И (НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (НастройкаХарактеристика.Склад ЕСТЬ NULL)
	|			И (НастройкаНоменклатура.Склад ЕСТЬ NULL)";
	
	Запрос.УстановитьПараметр("ВнешняяТаблицаПараметров", ТаблицаПараметров);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	ТестТаблица = Результат.Выгрузить();
	КонтрольОсуществляется = Ложь;
	Пока Выборка.Следующий() Цикл
		КонтрольОсуществляется = Выборка.КонтрольОсуществляется;
	КонецЦикла;
	Возврат КонтрольОсуществляется;
КонецФункции

Функция ПечатьЗаказВпроизводствоССырьемИОстатком(МассивОбъектов) Экспорт
	 ТабДок = Новый ТабличныйДокумент;
		          
    ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
    ЗапросПоДокументам.Текст =
    "ВЫБРАТЬ
    |	Документ.Ссылка КАК Ссылка,
    |	Документ.Номер КАК Номер,
    |	Документ.Дата КАК Дата,
    |	Документ.Склад КАК Склад,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
    |	Документ.Организация КАК Организация,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ОрганизацияПредставление,
    |	Документ.Контрагент КАК Контрагент,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК КонтрагентПредставление,
    |	Документ.Партнер КАК Партнер,
    |	ПРЕДСТАВЛЕНИЕ(Документ.Партнер) КАК ПартнерПредставление,
    |	Документ.ДокументОснование КАК ДокументОснование,
    |	Документ.Организация.Префикс КАК Префикс,
    |	Документ.Товары.(
    |		НомерСтроки КАК НомерСтроки,
    |		Номенклатура КАК Номенклатура,
    |		Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
    |		Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
    |		Характеристика КАК Характеристика,
    |		ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Товары.Номенклатура.ЕдиницаИзмерения) КАК Упаковка,
    |		Количество КАК Количество,
    |		КлючСтроки КАК КлючСтроки
    |	) КАК ТаблицаТовары,
    |	Документ.ТребуемаяДата КАК ТребуемаяДата
    |ИЗ
    |	Документ.вт_ЗаказВПроизводство КАК Документ
    |ГДЕ
    |	Документ.Ссылка В(&МассивОбъектов)
    |
    |УПОРЯДОЧИТЬ ПО
    |	НомерСтроки";
    РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
    
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПотребностьВСырье";
	
	Макет = ПолучитьМакет("ПФ_MXL_ПотребностьВСырье");
	
	ОбластьШапки     = "ШапкаТаблицы";    
	ОбластьСтроки    = "Строка1";
    	
    ПервыйДокумент = Истина;
    ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
    Пока ВыборкаДокументы.Следующий() Цикл
    	
    	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
    	
    	Если Не ПервыйДокумент Тогда
    		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
    	КонецЕсли;
    	ПервыйДокумент = Ложь;
    	
    	// Вывод заголовка.
    	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
        ОбластьМакета.Параметры.ТекстЗаголовка = ВыборкаДокументы.Ссылка;
        ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, ВыборкаДокументы.Ссылка);
		ОбластьМакета.Параметры.Клиент = ВыборкаДокументы.ПартнерПредставление;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		Если ВыборкаДокументы.ТребуемаяДата <> Дата(1,1,1) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("СобратьКДате");
			ОбластьМакета.Параметры.ТребуемаяДата = Формат(ВыборкаДокументы.ТребуемаяДата,"ДЛФ=DD"); 
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		    	    	
    	// Вывод шапки отчета.
    	ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		
		ТабДокумент.Вывести(ОбластьМакета);
    	
    	// Вывод строк документа.        
        ВыборкаПоСтрокам = ВыборкаДокументы.ТаблицаТовары.Выбрать(); 
		ИтогоКоличество = 0;
		ИтогоОстаток = 0;
        Пока ВыборкаПоСтрокам.Следующий() Цикл                          
                                 		
    		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
    		ОбластьМакета.Параметры.Заполнить(ВыборкаПоСтрокам);
    		
    		ОбластьМакета.Параметры.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
    			ВыборкаПоСтрокам.НоменклатураПредставление,
    			ВыборкаПоСтрокам.ХарактеристикаПредставление
    		);
			
			ТипОперацииНоменклатуры = ПолучитьТипНоменклатуры(ВыборкаПоСтрокам.Номенклатура);
			//ОбластьМакета.Параметры.ТипОперации	= ТипОперацииНоменклатуры; 
			//ТекОстаток = ПолучитьОстатокНоменклатуры(ВыборкаПоСтрокам.Номенклатура,ВыборкаПоСтрокам.Характеристика,ВыборкаДокументы.Склад, ВыборкаДокументы.Дата); 
			ТекОстаток = ПолучитьОстатокНоменклатуры(ВыборкаПоСтрокам.Номенклатура,ВыборкаПоСтрокам.Характеристика,ВыборкаДокументы.Склад, ТекущаяДата()); 
			ОбластьМакета.Параметры.Остаток	= ТекОстаток;
			ОбластьМакета.Параметры.Потребность = ?(ТекОстаток < ВыборкаПоСтрокам.Количество, ТекОстаток - ВыборкаПоСтрокам.Количество, 0); 
			
			ИтогоКоличество = ИтогоКоличество + ВыборкаПоСтрокам.Количество;
			ИтогоОстаток = ИтогоОстаток + ТекОстаток;
			
    		ТабДокумент.Вывести(ОбластьМакета);  
			
			
				//СоставКомплекта = ПолучитьСоставСырьяДляПроизводства(ВыборкаПоСтрокам.Номенклатура, ВыборкаПоСтрокам.КлючСтроки,ВыборкаПоСтрокам.Количество, ВыборкаДокументы.Склад, ВыборкаДокументы.Дата,ВыборкаДокументы.Ссылка);
				СоставКомплекта = ПолучитьСоставСырьяДляПроизводства(ВыборкаПоСтрокам.Номенклатура, ВыборкаПоСтрокам.КлючСтроки,ВыборкаПоСтрокам.Количество, ВыборкаДокументы.Склад, ТекущаяДата(),ВыборкаДокументы.Ссылка);
				Для каждого Комплект Из СоставКомплекта Цикл
					ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
					ОбластьМакета.Параметры.НоменклатураПредставление = Комплект.Пропуск + НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
						Комплект.НоменклатураПредставление,
						Комплект.ХарактеристикаПредставление
					);
					ОбластьМакета.Параметры.Количество	= Комплект.Количество;
					ОбластьМакета.Параметры.Упаковка	= Комплект.ЕдИзм;

//					ОбластьМакета.Параметры.ТипОперации	= Комплект.ТипНоменклатуры; 
					ОбластьМакета.Параметры.Остаток		= Комплект.Остаток;	
					ОбластьМакета.Параметры.Потребность = ?(Комплект.Остаток < Комплект.Количество, Комплект.Остаток -  Комплект.Количество, 0); 
					ТабДокумент.Вывести(ОбластьМакета);
					ИтогоКоличество = ИтогоКоличество + Комплект.Количество;
					ИтогоОстаток = ИтогоОстаток + Комплект.Остаток;
				КонецЦикла;	
			
        	           
		КонецЦикла; 
		//Вывод Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итог");
		ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьМакета.Параметры.ИтогоОстаток = ИтогоОстаток;
        ТабДокумент.Вывести(ОбластьМакета);

    	
    	// Вывод подписей.
    	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
    	ОбластьМакета.Параметры.ОтветственныйПредставление = "/                                        /";
    	ТабДокумент.Вывести(ОбластьМакета);
    	
    	//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
    	
    КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции	

Функция ПолучитьСоставСырьяДляПроизводства(Номенклатура,КлючНоменклатуры, КоличествоКомплекта, Склад, Дата, СсылкаДокумента)
	Пропуск = "        ";

	СоставКомплекта = Новый ТаблицаЗначений;
	СоставКомплекта.Колонки.Добавить("НоменклатураПредставление");
	СоставКомплекта.Колонки.Добавить("ХарактеристикаПредставление");
	СоставКомплекта.Колонки.Добавить("Количество");
	СоставКомплекта.Колонки.Добавить("ЕдИзм");
	СоставКомплекта.Колонки.Добавить("ТипНоменклатуры"); 
	СоставКомплекта.Колонки.Добавить("Остаток");
	СоставКомплекта.Колонки.Добавить("Пропуск");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПРЕДСТАВЛЕНИЕ(вт_ЗаказВПроизводствоСырье.Номенклатура) КАК НоменклатураПредставление,
	               |	ПРЕДСТАВЛЕНИЕ(вт_ЗаказВПроизводствоСырье.Характеристика) КАК ХарактеристикаПредставление,
	               |	вт_ЗаказВПроизводствоСырье.Номенклатура КАК Номенклатура,
	               |	вт_ЗаказВПроизводствоСырье.Характеристика КАК Характеристика,
	               |	вт_ЗаказВПроизводствоСырье.Количество КАК Количество,
	               |	вт_ЗаказВПроизводствоСырье.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	               |ИЗ
	               |	Документ.вт_ЗаказВПроизводство.Сырье КАК вт_ЗаказВПроизводствоСырье
	               |ГДЕ
	               |	вт_ЗаказВПроизводствоСырье.Ссылка = &Ссылка
	               |	И вт_ЗаказВПроизводствоСырье.КлючСвязиСтроки = &КлючСвязиСтроки";
	Запрос.УстановитьПараметр("КлючСвязиСтроки",КлючНоменклатуры);	
	Запрос.УстановитьПараметр("Ссылка",СсылкаДокумента);	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Номенклатура<>Неопределено Тогда
				ТипНоменклатуры = ПолучитьТипНоменклатуры(ВыборкаДетальныеЗаписи.Номенклатура);
				
				СтрокаКомплекта = СоставКомплекта.Добавить();
				СтрокаКомплекта.НоменклатураПредставление    = ВыборкаДетальныеЗаписи.НоменклатураПредставление;
				СтрокаКомплекта.ХарактеристикаПредставление  = ВыборкаДетальныеЗаписи.ХарактеристикаПредставление;
				СтрокаКомплекта.Количество      = ВыборкаДетальныеЗаписи.Количество; //* КоличествоКомплекта;
				СтрокаКомплекта.ЕдИзм		    = ВыборкаДетальныеЗаписи.ЕдиницаИзмерения;
				СтрокаКомплекта.ТипНоменклатуры = ТипНоменклатуры;
				//СтрокаКомплекта.Остаток			= ПолучитьОстатокНоменклатуры(ВыборкаДетальныеЗаписи.Номенклатура,ВыборкаДетальныеЗаписи.Характеристика,Склад,Дата);
				СтрокаКомплекта.Остаток			= ПолучитьОстатокНоменклатуры(ВыборкаДетальныеЗаписи.Номенклатура,ВыборкаДетальныеЗаписи.Характеристика,Склад,ТекущаяДата());
				СтрокаКомплекта.Пропуск 	    = Пропуск;
				Если ТипНоменклатуры = "Комплектация" Тогда
					ТаблицаКомплекта = ПолучитьСоставКомплектаДляПроизводства(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Количество * КоличествоКомплекта, Склад, Дата, Пропуск);
					Для каждого ПодСтрокаКомплекта Из ТаблицаКомплекта Цикл
						СтрокаКомплекта = СоставКомплекта.Добавить();
						СтрокаКомплекта.НоменклатураПредставление    = ПодСтрокаКомплекта.НоменклатураПредставление;
						СтрокаКомплекта.ХарактеристикаПредставление  = ПодСтрокаКомплекта.ХарактеристикаПредставление;
						СтрокаКомплекта.Количество      = ПодСтрокаКомплекта.Количество;
						СтрокаКомплекта.ЕдИзм		    = ПодСтрокаКомплекта.ЕдИзм;
						СтрокаКомплекта.ТипНоменклатуры = ПодСтрокаКомплекта.ТипНоменклатуры;
						СтрокаКомплекта.Остаток			= ПодСтрокаКомплекта.Остаток;
						СтрокаКомплекта.Пропуск 	    = ПодСтрокаКомплекта.Пропуск + Пропуск;  	
					КонецЦикла;	
				ИначеЕсли ТипНоменклатуры = "Производство" Тогда					
					ТаблицаКомплекта = ПолучитьСоставСырьяПоТехКарте(ВыборкаДетальныеЗаписи.Номенклатура,ВыборкаДетальныеЗаписи.Характеристика, Склад, Дата, Пропуск);
					Для каждого ПодСтрокаКомплекта Из ТаблицаКомплекта Цикл
						СтрокаКомплекта = СоставКомплекта.Добавить();
						СтрокаКомплекта.НоменклатураПредставление    = ПодСтрокаКомплекта.НоменклатураПредставление;
						СтрокаКомплекта.ХарактеристикаПредставление  = ПодСтрокаКомплекта.ХарактеристикаПредставление;
						СтрокаКомплекта.Количество      = ПодСтрокаКомплекта.Количество * ВыборкаДетальныеЗаписи.Количество;
						СтрокаКомплекта.ЕдИзм		    = ПодСтрокаКомплекта.ЕдИзм;
						СтрокаКомплекта.ТипНоменклатуры = ПодСтрокаКомплекта.ТипНоменклатуры;
						СтрокаКомплекта.Остаток			= ПодСтрокаКомплекта.Остаток;
						СтрокаКомплекта.Пропуск 	    = ПодСтрокаКомплекта.Пропуск + Пропуск;  	
					КонецЦикла;						
				КонецЕсли;	    				
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	Возврат СоставКомплекта;
	
КонецФункции	

Функция ПолучитьСоставСырьяПоТехКарте(пГотоваяПродукция,пХарактеристикаПродукции,Склад, Дата, Пропуск)
	СоставКомплекта = Новый ТаблицаЗначений;
	СоставКомплекта.Колонки.Добавить("Номенклатура");
	СоставКомплекта.Колонки.Добавить("Характеристика");
	СоставКомплекта.Колонки.Добавить("НоменклатураПредставление");
	СоставКомплекта.Колонки.Добавить("ХарактеристикаПредставление");
	СоставКомплекта.Колонки.Добавить("Количество");
	СоставКомплекта.Колонки.Добавить("ЕдИзм");
	СоставКомплекта.Колонки.Добавить("ТипНоменклатуры"); 
	СоставКомплекта.Колонки.Добавить("Остаток");
	СоставКомплекта.Колонки.Добавить("Пропуск");
	
	мТехКарта = вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(пГотоваяПродукция, пХарактеристикаПродукции);
	Если мТехКарта.Ссылка = Справочники.вт_ВариантыПроизводстваПоТехКартам.ПустаяСсылка() Тогда
		Возврат СоставКомплекта;
	КонецЕсли;	
	мТехКартаОбъект = мТехКарта.Ссылка.ПолучитьОбъект();
	Для Каждого ПодСтрокаКомплекта Из мТехКартаОбъект.Состав Цикл
		СтрокаКомплекта = СоставКомплекта.Добавить();
		СтрокаКомплекта.Номенклатура = ПодСтрокаКомплекта.Сырье;
		СтрокаКомплекта.Характеристика = ПодСтрокаКомплекта.Характеристика;
		СтрокаКомплекта.НоменклатураПредставление    = СокрЛП(ПодСтрокаКомплекта.Сырье);
		СтрокаКомплекта.ХарактеристикаПредставление  = СокрЛП(ПодСтрокаКомплекта.Характеристика);
		СтрокаКомплекта.Количество      = ПодСтрокаКомплекта.Количество;
		СтрокаКомплекта.ЕдИзм		    = ПодСтрокаКомплекта.Сырье.ЕдиницаИзмерения;
		СтрокаКомплекта.ТипНоменклатуры = ПолучитьТипНоменклатуры(ПодСтрокаКомплекта.Сырье);
		СтрокаКомплекта.Остаток			= ПолучитьОстатокНоменклатуры(ПодСтрокаКомплекта.Сырье,ПодСтрокаКомплекта.Характеристика,Склад,Дата);
		СтрокаКомплекта.Пропуск 	    = Пропуск; 
		мТехКарта2 = вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(ПодСтрокаКомплекта.Сырье, ПодСтрокаКомплекта.Характеристика);
		Если мТехКарта2.Ссылка <> Справочники.вт_ВариантыПроизводстваПоТехКартам.ПустаяСсылка() Тогда
			ТаблицаКомплекта2 = ПолучитьСоставСырьяПоТехКарте(ПодСтрокаКомплекта.Сырье,ПодСтрокаКомплекта.Характеристика,Склад, Дата, СтрокаКомплекта.Пропуск);
			Для Каждого СтрокаКомплекта2 Из ТаблицаКомплекта2 Цикл
				СтрокаКомплекта = СоставКомплекта.Добавить();
				СтрокаКомплекта.Номенклатура = СтрокаКомплекта2.Номенклатура;
				СтрокаКомплекта.Характеристика = СтрокаКомплекта2.Характеристика;				
				СтрокаКомплекта.НоменклатураПредставление    = СтрокаКомплекта2.НоменклатураПредставление;
				СтрокаКомплекта.ХарактеристикаПредставление  = СтрокаКомплекта2.ХарактеристикаПредставление;
				СтрокаКомплекта.Количество      = СтрокаКомплекта2.Количество;
				СтрокаКомплекта.ЕдИзм		    = СтрокаКомплекта2.ЕдИзм;
				СтрокаКомплекта.ТипНоменклатуры =  ПолучитьТипНоменклатуры(СтрокаКомплекта2.Номенклатура);
				СтрокаКомплекта.Остаток			= ПолучитьОстатокНоменклатуры(СтрокаКомплекта2.Номенклатура,СтрокаКомплекта2.Характеристика,Склад,Дата);
				СтрокаКомплекта.Пропуск 	    = Пропуск + СтрокаКомплекта2.Пропуск; 
			КонецЦикла;
		КонецЕсли;		
	КонецЦикла;	
	Возврат СоставКомплекта;

КонецФункции	