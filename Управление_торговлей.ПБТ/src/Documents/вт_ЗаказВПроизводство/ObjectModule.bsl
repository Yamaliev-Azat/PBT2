Процедура ЗаполнитьТабличнуюЧастьТовары()
	
	    ЗАпрос = Новый Запрос("ВЫБРАТЬ
	                          |	СУММА(ЗаказКлиентаТовары.Количество * ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Количество, 1)) КАК Количество,
	                          |	ВЫБОР
	                          |		КОГДА ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Номенклатура, 1) <> 1
	                          |			ТОГДА ВариантыКомплектацииНоменклатурыТовары.Номенклатура
	                          |		ИНАЧЕ ЗаказКлиентаТовары.Номенклатура
	                          |	КОНЕЦ КАК Номенклатура
	                          |ИЗ
	                          |	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	                          |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	                          |		ПО (ЗаказКлиентаТовары.Номенклатура = ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец
	                          |				И ВариантыКомплектацииНоменклатурыТовары.Номенклатура.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
	                          |ГДЕ
	                          |	ЗаказКлиентаТовары.Ссылка = &Ссылка
	                          |	И ЗаказКлиентаТовары.Номенклатура.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	                          |
	                          |СГРУППИРОВАТЬ ПО
	                          |	ВЫБОР
	                          |		КОГДА ЕСТЬNULL(ВариантыКомплектацииНоменклатурыТовары.Номенклатура, 1) <> 1
	                          |			ТОГДА ВариантыКомплектацииНоменклатурыТовары.Номенклатура
	                          |		ИНАЧЕ ЗаказКлиентаТовары.Номенклатура
	                          |	КОНЕЦ");
							  
							  
		Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
		
		ЭтотОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
					
КонецПроцедуры	

Функция  ПолучитьВариантПроизводстваПродукции(Номенклатура) 
	Возврат вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(Номенклатура).Ссылка;
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		Контрагент = ДанныеЗаполнения.Контрагент;
		Организация = ДанныеЗаполнения.Организация;
		Партнер = ДанныеЗаполнения.Партнер;
		Склад = ДанныеЗаполнения.Склад;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		ТребуемаяДата = ?(ЗначениеЗаполнено(ДокументОснование.ЖелаемаяДатаОтгрузки),ДокументОснование.ЖелаемаяДатаОтгрузки,ДокументОснование.ДатаОтгрузки)-60*60*24;
		//ТоварВПроизводство = ПолучитьТоварВПроизводство(ДанныеЗаполнения.Товары.Выгрузить());
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			Если НЕ ЕстьВариантКомплектации(ТекСтрокаТовары.Номенклатура) И НЕ ЕстьВариантыПроизводства(ТекСтрокаТовары.Номенклатура) ТОгда
				Сообщ = Новый СообщениеПользователю;
				Сообщ.Текст = "Для номенклатуры "+Строка(ТекСтрокаТовары.Номенклатура)+" нет ни варианта комплектации, ни варианта производства";
				Сообщ.Сообщить();
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.КлючСтроки = Новый УникальныйИдентификатор;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ЕдИзмВес = ТекСтрокаТовары.Упаковка;
			
			//brava
			НоваяСтрока.КоличествоУпаковок = ТекСтрокаТовары.КоличествоУпаковок;
			Если ЗначениеЗаполнено(НоваяСтрока.ЕдИзмВес) Тогда  
				//НоваяСтрока.ВесЗаЕдиницу = НоваяСтрока.ЕдИзмВес.Числитель;
			Иначе
				НоваяСтрока.ЕдИзмВес = НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
			КонецЕсли; 
			
			НоваяСтрока.Характеристика = ТекСтрокаТовары.Характеристика;
			НоваяСтрока.ВариантПроизводства = ПолучитьВариантПроизводстваПродукции(НоваяСтрока.Номенклатура);
		КонецЦикла; 
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.вт_ПланПроизводства") Тогда
		Организация = ДанныеЗаполнения.Организация;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.КлючСтроки = Новый УникальныйИдентификатор;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Количество = ТекСтрокаТовары.ВПроизводство; 
			НоваяСтрока.ВариантПроизводства = ПолучитьВариантПроизводстваПродукции(НоваяСтрока.Номенклатура);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.вт_ЗаказВПроизводство") Тогда
		ЗаполнитьПоЗаказуВПроизводство(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда  //brava 01/04/2021
		//это нужно для заполнения из обработки ОбеспечениеПотребностей
		ТребуемаяДата = ТекущаяДатаСеанса(); //пока так
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);		
	КонецЕсли;
	
	ЭтотОбъект.Статус = перечисления.вт_СтатусыПроизводства.Ожидание;
	Автор = ПараметрыСеанса.ТекущийПользователь;  
КонецПроцедуры	

Процедура ЗаполнитьДокументПоОтбору(Знач ДанныеЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ДанныеЗаполнения.Свойство("Товары") Тогда
		ЗаполнитьТоварыПоТаблице(ДанныеЗаполнения.Товары);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыПоТаблице(ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаДанныхЗаполнения Из ДанныеЗаполнения Цикл
		
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанныхЗаполнения);
		
		НоваяСтрока.КлючСтроки = Новый УникальныйИдентификатор;
		//НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
		//НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
		НоваяСтрока.ЕдИзмВес = НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
		//НоваяСтрока.Характеристика = ТекСтрокаТовары.Характеристика;
		НоваяСтрока.ВариантПроизводства = ПолучитьВариантПроизводстваПродукции(НоваяСтрока.Номенклатура);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаказуВПроизводство(ДанныеЗаполнения)
	ВремяПроизводстваЗаказаСек = 0;
	
	ЭтотОбъект.ДокументОснование 		 = ДанныеЗаполнения.ДокументОснование;
	ЭтотОбъект.ЗаказВПроизводство = ДанныеЗаполнения;
	ЭтотОбъект.Склад = ДанныеЗаполнения.Склад;

	//Заполняем план производства из заказ производства
	ЭтотОбъект.Организация   = ДанныеЗаполнения.Организация; 
	ЭтотОбъект.ТребуемаяДата = ДанныеЗаполнения.ТребуемаяДата;
	ЭтотОбъект.Партнер       = ДанныеЗаполнения.Партнер;
	ЭтотОбъект.Контрагент	 = ДанныеЗаполнения.Контрагент;
	ЭтотОбъект.Автор		 = ПараметрыСеанса.ТекущийПользователь;
	
	Для Каждого СтрокаСырьеЗаказаоснования из ДанныеЗаполнения.Сырье Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаСырьеЗаказаоснования.ВариантПроизводства) Тогда
			Если НЕ ЕстьВариантыПроизводства(СтрокаСырьеЗаказаоснования.Номенклатура) ТОгда
				Продолжить;
			Иначе
				ВариантПроизводстваПрод = вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(СтрокаСырьеЗаказаоснования.Номенклатура,СтрокаСырьеЗаказаоснования.Характеристика).Ссылка;
			КонецЕсли;
		ИНаче
			ВариантПроизводстваПрод = СтрокаСырьеЗаказаоснования.ВариантПроизводства;
		КонецЕсли;
		
		НовСтрока = ЭтотОбъект.Товары.Добавить();
		НовСтрока.Номенклатура 		  = СтрокаСырьеЗаказаоснования.Номенклатура;
		НовСтрока.Характеристика 	  = СтрокаСырьеЗаказаоснования.Характеристика;
		НовСтрока.Количество 		  = СтрокаСырьеЗаказаоснования.Количество;
		НовСтрока.ВариантПроизводства = ВариантПроизводстваПрод;
		НовСтрока.Цена 				  = СтрокаСырьеЗаказаоснования.Цена;
		НовСтрока.Сумма 			  = СтрокаСырьеЗаказаоснования.Сумма;
		
		НовСтрока.КлючСтроки = СтрокаСырьеЗаказаоснования.КлючСвязиСтроки;
		
		
		ВариантПроизводстваПрод = СтрокаСырьеЗаказаоснования.ВариантПроизводства;
		для Каждого СтрокаСырьеВарианта из ВариантПроизводстваПрод.Состав Цикл
			СтрокаСырье = ЭтотОбъект.Сырье.Добавить();
			СтрокаСырье.КлючСвязиСтроки = НовСтрока.КлючСтроки;
			
			СтрокаСырье.Номенклатура 		= СтрокаСырьеВарианта.Сырье;
			СтрокаСырье.Характеристика 	  	= СтрокаСырьеВарианта.Характеристика;
			
			СтрокаСырье.Количество 		  	= СтрокаСырьеЗаказаоснования.Количество * НовСтрока.Количество / ВариантПроизводстваПрод.Количество;
			СтрокаСырье.Цена 				= СтрокаСырьеЗаказаоснования.Цена;
			СтрокаСырье.Сумма 			  	= СтрокаСырье.Цена * СтрокаСырье.Количество;
			
			СтрокаСырье.ВариантПроизводства = СтрокаСырьеЗаказаоснования.ВариантПроизводства;
			Если НЕ ЗначениеЗаполнено(СтрокаСырье.ВариантПроизводства) И ЕстьВариантыПроизводства(СтрокаСырье.Номенклатура) тогда
				 СтрокаСырье.ВариантПроизводства = вт_ОбщийМодульПроизводства.ПолучитьВариантПроизводстваПродукции(СтрокаСЫрье.Номенклатура, СтрокаСЫрье.Характеристика).Ссылка;
			КонецЕсли;	
			
		КонецЦикла;	
		
		//Считаем сколько времени нужно на производство этого изделия согласно техкарте
		ВремяПроизвСек = 0;
		Если ВариантПроизводстваПрод.ВремяПроизводстваСек>0 тогда
			 ВремяПроизвСек =  ВариантПроизводстваПрод.ВремяПроизводстваСек;
		ИначеЕсли ВариантПроизводстваПрод.ВремяПроизводстваЧас > 0  тогда
			 ВремяПроизвСек =  ВариантПроизводстваПрод.ВремяПроизводстваЧас*60*60; //в сек
		КонецЕсли;
		 
		ВремяПроизвСек =  НовСтрока.Количество * (ВремяПроизвСек / ВариантПроизводстваПрод.Количество); //Приводим к тому количетву, которое нужно произвести
		
		ВремяПроизводстваЗаказаСек = ВремяПроизводстваЗаказаСек + ВремяПроизвСек;
		
	КонецЦикла;

	ЭтотОбъект.ТребуемаяДата = ДанныеЗаполнения.ТребуемаяДата - ВремяПроизводстваЗаказаСек;
КонецПроцедуры	

Процедура ОбработкаПроведения(Отказ, Режим)
	
		// регистр втЗаказВПроизводство Приход
	Движения.вт_ЗаказВПроизводство.Записывать = Истина;
	Для Каждого ТекСтрокаПродукция Из Товары Цикл
		Движение = Движения.вт_ЗаказВПроизводство.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Склад = Склад;
		Движение.ЗаказПроизводства = Ссылка;
		Движение.Номенклатура = ТекСтрокаПродукция.Номенклатура;
		Движение.Характеристика = ТекСтрокаПродукция.Характеристика;
		Движение.ТребуемаяДата = ТребуемаяДата;
		Движение.Количество = ТекСтрокаПродукция.Количество;
		
	КонецЦикла;
	
	
	Если ЗначениеЗаполнено(ДокументОснование) ТОгда
		ДатаЗаписи = ТекущаяДата();
		

			Движения.вт_СтатусыОснованийЗаказовВПроизводство.Записывать=Истина;

			ДвижСтатусы = Движения.вт_СтатусыОснованийЗаказовВПроизводство;
			
			СтрокаНЗ = ДвижСтатусы.Добавить(); //НЗ.Добавить();
			СтрокаНЗ.Период = ЭтотОбъект.Дата;
			СтрокаНЗ.Статус = перечисления.вт_СтатусыПроизводства.Ожидание;
			СтрокаНЗ.ЗаказВПроизводство = ЭтотОбъект.Ссылка;
			СтрокаНЗ.Основание = ДокументОснование;
	КонецЕсли;

	////////////////////////////////////
	//Планирование операций
	////////////////////////////////////
	Движения.вт_ОперацииВыпускаПродукции.Записывать=Истина;
	Движения.вт_ОперацииВыпускаСырье.Записывать    = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вт_ЗаказВПроизводствоТовары.Ссылка.Дата КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	вт_ЗаказВПроизводствоТовары.Ссылка.Организация КАК Организация,
		|	вт_ЗаказВПроизводствоТовары.Ссылка КАК ЗаказПроизводства,
		|	вт_ЗаказВПроизводствоОперацииПроизводства.КлючСвязиСтроки КАК КлючСвязиСтроки,
		|	вт_ЗаказВПроизводствоОперацииПроизводства.КодСтроки КАК КодСтроки,
		|	вт_ЗаказВПроизводствоТовары.Номенклатура КАК Номенклатура,
		|	вт_ЗаказВПроизводствоТовары.Характеристика КАК Характеристика,
		|	вт_ЗаказВПроизводствоОперацииПроизводства.Операция КАК Операция
		|ПОМЕСТИТЬ ВТ_ДАННЫЕ
		|ИЗ
		|	Документ.вт_ЗаказВПроизводство.ОперацииПроизводства КАК вт_ЗаказВПроизводствоОперацииПроизводства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ЗаказВПроизводство.Товары КАК вт_ЗаказВПроизводствоТовары
		|		ПО вт_ЗаказВПроизводствоОперацииПроизводства.Ссылка = вт_ЗаказВПроизводствоТовары.Ссылка
		|			И вт_ЗаказВПроизводствоОперацииПроизводства.КлючСвязиСтроки = вт_ЗаказВПроизводствоТовары.КлючСтроки
		|ГДЕ
		|	вт_ЗаказВПроизводствоОперацииПроизводства.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДАННЫЕ.ВидДвижения КАК ВидДвижения,
		|	ВТ_ДАННЫЕ.Организация КАК Организация,
		|	ВТ_ДАННЫЕ.Период КАК Период,
		|	ВТ_ДАННЫЕ.ЗаказПроизводства КАК ЗаказПроизводства,
		|	ВТ_ДАННЫЕ.Операция КАК Операция,
		|	ВТ_ДАННЫЕ.Номенклатура КАК Номенклатура,
		|	ВТ_ДАННЫЕ.Характеристика КАК Характеристика,
		|	вт_ЗаказВПроизводствоРасходСырьяНаОперации.Номенклатура КАК НоменклатураСырье,
		|	вт_ЗаказВПроизводствоРасходСырьяНаОперации.Характеристика КАК ХарактеристикаСырье,
		|	ЕСТЬNULL(вт_ЗаказВПроизводствоРасходСырьяНаОперации.Количество, 0) КАК Количество
		|ИЗ
		|	ВТ_ДАННЫЕ КАК ВТ_ДАННЫЕ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вт_ЗаказВПроизводство.РасходСырьяНаОперации КАК вт_ЗаказВПроизводствоРасходСырьяНаОперации
		|		ПО ВТ_ДАННЫЕ.КлючСвязиСтроки = вт_ЗаказВПроизводствоРасходСырьяНаОперации.КлючСвязиСтроки
		|			И ВТ_ДАННЫЕ.КодСтроки = вт_ЗаказВПроизводствоРасходСырьяНаОперации.КодСтрокиОперации
		|ГДЕ
		|	ЕСТЬNULL(вт_ЗаказВПроизводствоРасходСырьяНаОперации.Количество, 0) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДАННЫЕ.ВидДвижения КАК ВидДвижения,
		|	ВТ_ДАННЫЕ.ЗаказПроизводства КАК ЗаказПроизводства,
		|	ВТ_ДАННЫЕ.Номенклатура КАК Номенклатура,
		|	ВТ_ДАННЫЕ.Операция КАК Операция,
		|	ВТ_ДАННЫЕ.Организация КАК Организация,
		|	ВТ_ДАННЫЕ.Период КАК Период,
		|	ВТ_ДАННЫЕ.Характеристика КАК Характеристика,
		|	1 КАК Количество
		|ИЗ
		|	ВТ_ДАННЫЕ КАК ВТ_ДАННЫЕ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	тзнОперацииСырье = РезультатЗапроса[1].Выгрузить();
	Движения.вт_ОперацииВыпускаСырье.Загрузить(тзнОперацииСырье);
	
	
	тзнОперации = РезультатЗапроса[2].Выгрузить();
	Движения.вт_ОперацииВыпускаПродукции.Загрузить(тзнОперации);
	
	////////////////////////////////////
	//Статус заказа в производство
	////////////////////////////////////
	
	Движения.вт_СтатусыЗаказовВПроизводство.Записывать=Истина;
	СтрокаНЗ = Движения.вт_СтатусыЗаказовВПроизводство.Добавить();
	СтрокаНЗ.ЗаказВПроизводство = Ссылка;
	СтрокаНЗ.Период = Дата;
	СтрокаНЗ.Статус =  Перечисления.вт_СтатусыПроизводства.Ожидание ;

	////////////////////////////////////
	//Резервирование
	////////////////////////////////////
	Если РезервироватьМатериалы Тогда 		
		Движения.СвободныеОстатки.Записывать = Истина;
		ДвижСвО = Движения.СвободныеОстатки;		
		Для каждого СтрокаСырья Из Сырье Цикл
			Если СтрокаСырья.Резерв > 0 Тогда
				КонтрольВключен = Документы.вт_ЗаказВПроизводство.ВключенКонтрольПоОстаткамСУчетомРезерва(Склад,
				СтрокаСырья.Номенклатура,СтрокаСырья.Характеристика);
				Если Не КонтрольВключен Тогда			
					СтрокаСвО = ДвижСвО.Добавить();
					СтрокаСвО.Период = Дата;				
					СтрокаСвО.Номенклатура = СтрокаСырья.Номенклатура;
					СтрокаСвО.Характеристика = СтрокаСырья.Характеристика;
					СтрокаСвО.Склад = Склад;
					СтрокаСвО.ВидДвижения = ВидДвиженияНакопления.Расход;
					СтрокаСвО.ВНаличии = СтрокаСырья.Резерв;
				КонецЕсли;
				СтрокаСвО = ДвижСвО.Добавить();
				СтрокаСвО.Период = Дата;				
				СтрокаСвО.Номенклатура = СтрокаСырья.Номенклатура;
				СтрокаСвО.Характеристика = СтрокаСырья.Характеристика;
				СтрокаСвО.Склад = Склад; 				
				СтрокаСвО.ВидДвижения = ВидДвиженияНакопления.Приход;
				СтрокаСвО.ВРезервеПодЗаказ = СтрокаСырья.Резерв;				
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли; 
		
КонецПроцедуры

Функция ПолучитьТоварВПроизводство(ТабТовары)
	СкладыДляПроизводства = Новый Массив;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вт_СкладыДляПроизводства.СкладДляПроизводства
		|ИЗ
		|	РегистрСведений.вт_СкладыДляПроизводства КАК вт_СкладыДляПроизводства"; 	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда 
		СкладыДляПроизводства = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("СкладДляПроизводства");
	КонецЕсли;	
		
	ТоварВПроизводство = Новый ТаблицаЗначений;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Количество
		|ПОМЕСТИТЬ Вт_Товары
		|ИЗ
		|	&ТабТовары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_Товары.Номенклатура,
		|	Вт_Товары.Количество - ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0) КАК Количество
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Вт_Товары КАК Вт_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад В (&СкладыДляПроизводства)) КАК ТоварыНаСкладахОстатки
		|		ПО Вт_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Номенклатура,
		|	вт.Количество
		|ИЗ
		|	вт КАК вт
		|ГДЕ
		|	вт.Количество > 0";
		
	Запрос.УстановитьПараметр("ТабТовары", ТабТовары);
	Запрос.УстановитьПараметр("СкладыДляПроизводства", СкладыДляПроизводства);
	
	РезультатЗапроса = Запрос.Выполнить();  		
	Если Не РезультатЗапроса.Пустой() Тогда 
		ТоварВПроизводство = РезультатЗапроса.Выгрузить();		
	КонецЕсли;
	Возврат ТоварВПроизводство;
КонецФункции	


&НаСервере
Функция ЕстьВариантКомплектации(пНоменклатура) Экспорт
	РезультатОтвета = Ложь;
	ВыборкаВариантов = Справочники.ВариантыКомплектацииНоменклатуры.Выбрать(,пНоменклатура);
	Пока ВыборкаВариантов.Следующий() Цикл
		 РезультатОтвета = РезультатОтвета ИЛИ НЕ ВыборкаВариантов.ПометкаУдаления; //Нас интересует что бы был хотя бы один вариант прозводства не помеченный на удаление
	КонецЦикла;
	 
	Возврат РезультатОтвета;

КонецФункции

&НаСервере
Функция ЕстьВариантыПроизводства(пНоменклатура) Экспорт
	РезультатОтвета = Ложь;
	ВыборкаВариантов = Справочники.вт_ВариантыПроизводстваПоТехКартам.Выбрать(,пНоменклатура);
	Пока ВыборкаВариантов.Следующий() Цикл
		 РезультатОтвета = РезультатОтвета ИЛИ НЕ ВыборкаВариантов.ПометкаУдаления; //Нас интересует что бы был хотя бы один вариант прозводства не помеченный на удаление
	КонецЦикла;
	 
	Возврат РезультатОтвета;
КонецФункции

Процедура ПередЗаписью(Отказ,РежимЗаписи,РежимПроведения)
	
	Если РезервироватьМатериалы Тогда
		РезервДокумента = ПолучитьРезервДокумента();
		Для Каждого мСтрока Из Сырье Цикл
			
			РезервДоступный = Документы.вт_ЗаказВПроизводство.ПолучитьДоступныйОстатокСырья(		
			мСтрока.Номенклатура,
			мСтрока.Характеристика,
			Склад,
			Дата+1);
			
			РезервБыл = РезервДокумента.НайтиСтроки(Новый Структура("Номенклатура,Характеристика,Склад",
			мСтрока.Номенклатура,
			мСтрока.Характеристика,
			Склад,));
			
			Если РезервБыл.Количество() > 0 Тогда
				ЗарезервированоДокументом = РезервБыл[0].ВРезервеПодЗаказ;
			Иначе 	
				ЗарезервированоДокументом = 0;
			КонецЕсли;			
				
			НаЧтоМенять = МИН(РезервДоступный + ЗарезервированоДокументом, мСтрока.Количество);
			Если НаЧтоМенять < ЗарезервированоДокументом Тогда
				мСтрока.Резерв = МИН(ЗарезервированоДокументом,мСтрока.Количество);
			Иначе
				мСтрока.Резерв = НаЧтоМенять;
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		Для Каждого мСтрока Из Сырье Цикл
			мСтрока.Резерв = 0;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьРезервДокумента()
	//ДвижСвобОстатки = мОбъект.Движения.СвободныеОстатки;
	//ДвижСвобОстатки.Прочитать();
	//таблДвиж = ДвижСвобОстатки.Выгрузить(,"Номенклатура,Характеристика,Склад,ВРезервеПодЗаказ");
	//таблДвиж.Свернуть("Номенклатура,Характеристика,Склад","ВРезервеПодЗаказ");
    //Возврат таблДвиж;
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	СвободныеОстаткиОбороты.Номенклатура КАК Номенклатура,
	|	СвободныеОстаткиОбороты.Характеристика КАК Характеристика,
	|	СвободныеОстаткиОбороты.Склад КАК Склад,
	|	СвободныеОстаткиОбороты.ВРезервеПодЗаказПриход КАК ВРезервеПодЗаказ	
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Обороты(, , Регистратор, ) КАК СвободныеОстаткиОбороты
	|ГДЕ
	|	СвободныеОстаткиОбороты.Регистратор = &Регистратор";
	
	Запрос.УстановитьПараметр("Регистратор",ЭтотОбъект.Ссылка);
	ТЗРезерв = Запрос.Выполнить().Выгрузить();
	ТЗРезерв.Свернуть("Номенклатура, Характеристика, Склад", "ВРезервеПодЗаказ");
	Возврат ТЗРезерв; 	
КонецФункции

