
&НаКлиенте
Процедура ПечатьРазногласий(Команда)
	ТабДок = ПечатьРазногласийНаСервере();
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Функция ПечатьРазногласийНаСервере()
	Возврат Документы.ТребованияККачествуЗакупаемогоТовара.ПечатьРусский(Объект, Истина);
КонецФункции

&НаСервере
Функция ПриложениеНаСервере()
	Возврат Документы.ТребованияККачествуЗакупаемогоТовара.ПечатьПриложения(Объект);
КонецФункции

&НаКлиенте
Процедура Приложение(Команда)
	ТабДок = ПриложениеНаСервере();
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Первоначальное заполнение объекта.
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.Статус = Перечисления.СтатусЗаявки.Новый; 
		
		Объект.Актуально = Истина; 
		Объект.ОтветственныйОКК = Справочники.Пользователи.НайтиПоКоду("Богатова Галина");//0018162
		Объект.История.Очистить(); 
		
		Объект.Инициатор = Пользователи.ТекущийПользователь(); 
		
		//ЗаполнитьПервоначальныеЗначения();
		//Форма.ПриПолученииДанныхНаСервере(Форма.РеквизитФормыВЗначение("Объект"));
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов() Экспорт
	
	Если РольДоступна("Требования_ПолныеПрава") Или РольДоступна("ЦИР") Тогда
		Элементы.Показатели.Колонки.Периодичность.Доступность = Истина;
		Элементы.РаботаЦИРПоРазногласиямЗавершена.Доступность = Истина;
	Иначе
		Элементы.РаботаЦИРПоРазногласиямЗавершена.Доступность = Ложь;
	КонецЕсли;
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("РаботаОККПоРазногласиямЗавершена");
	МассивЭлементов.Добавить("Актуально");
	
	Если РольДоступна("Требования_ПолныеПрава") Тогда
		ДоступныПолныеПрава = Истина;
	Иначе
		ДоступныПолныеПрава = ЛОжь;
	КонецЕсли;
	
	//ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, МассивЭлементов, "Доступность", ДоступныПолныеПрава);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Доступность", ДоступныПолныеПрава);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура АллергеныПередОкончаниемРедактированияНаСервере(Данные)
	
	Данные.Ответственный = Пользователи.ТекущийПользователь();
	Данные.ДатаДобавления = ТекущаяДатаСеанса();
	
КонецПроцедуры

&НаКлиенте
Процедура АллергеныПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	АллергеныПередОкончаниемРедактированияНаСервере(Элементы.Аллергены.ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаАнглийскомНаСервере()
	
	Для каждого Стр Из Объект.Показатели Цикл
		Если ЗначениеЗаполнено(Стр.ЗначениеПоказателяКонечные) Тогда
			Стр.ЗначениеПоказателяАнглийский = Переводы.ПеревестиЯндексом(Стр.ЗначениеПоказателяКонечные);
		Иначе
			Стр.ЗначениеПоказателяАнглийский = Переводы.ПеревестиЯндексом(Стр.ЗначениеПоказателяОтНасНачальные);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Стр.ТЧ_ПоказателиОтНасАнглийский) Тогда
	    Стр.ЗначениеПоказателяАнглийский = Переводы.ПеревестиЯндексом(Стр.ЗначениеПоказателяОтНасНачальные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаАнглийском(Команда)
	ЗаполнитьНаАнглийскомНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТЧ_ПоказателиПоказательПриИзмененииНаСервере(Идент)
	
	Данные = Объект.Показатели.НайтиПоИдентификатору(Идент);
	
	Если ЗначениеЗаполнено(Данные.Показатель) Тогда
		Данные.ВидИсследования = Данные.Показатель.ВидИсследования;
		Данные.ЕдиницаИзмерения = Данные.Показатель.ЕдиницаИзмерения;
		
		Если Данные.Показатель.ТипЗначения = 0 Тогда
			Данные.ЗначениеПоказателяОтНасНачальные = 0;
			Данные.ЗначениеПоказателяОтНасНачальные = 0;
			Данные.ЗначениеПоказателяОтПоставщикаНачальные = 0;
			Данные.ЗначениеПоказателяКонечные = 0;
		Иначе	
			Данные.ЗначениеПоказателяОтНасНачальные = "";
			Данные.ЗначениеПоказателяОтНасНачальные = "";
			Данные.ЗначениеПоказателяОтПоставщикаНачальные = "";
			Данные.ЗначениеПоказателяКонечные = "";
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ПоказателиПоказательПриИзменении(Элемент)
	
	ТекСтр = Элементы.Показатели.ТекущаяСтрока;
	//ТекСтр = ДанныеФормыВЗначение(, Тип("СтрокаТабличнойЧасти"))
	//ТекСтр = Объект.Показатели.НайтиПоИдентификатору(Элементы.Показатели.ТекущаяСтрока);
	ТЧ_ПоказателиПоказательПриИзмененииНаСервере(ТекСтр);
	
КонецПроцедуры

&НаСервере
Процедура ТЧ_ПоказателиЗначениеПоказателяОтНасНачальныеПриИзмененииНаСервере(Идент)
	
	Стр = Объект.Показатели.НайтиПоИдентификатору(Идент);
	Стр.ЗначениеПоказателяКонечные = Стр.ЗначениеПоказателяОтНасНачальные;
	Стр.ЗначениеПоказателяОтПоставщикаНачальные = Стр.ЗначениеПоказателяОтНасНачальные;
	Стр.ЗначениеПоказателяАнглийский = Переводы.ПеревестиЯндексом(Стр.ЗначениеПоказателяКонечные);
	Стр.ОтНасАнглийский = Переводы.ПеревестиЯндексом(Стр.ЗначениеПоказателяОтНасНачальные);	

КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ПоказателиЗначениеПоказателяОтНасНачальныеПриИзменении(Элемент)
	
	ТекСтр = Элементы.Показатели.ТекущаяСтрока;
	ТЧ_ПоказателиЗначениеПоказателяОтНасНачальныеПриИзмененииНаСервере(ТекСтр);
	
КонецПроцедуры
