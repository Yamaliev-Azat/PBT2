Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) 
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров")
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг")
		 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровНаСклад")
		 Тогда
		 ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения,"Организация, Партнер,Контрагент,Договор,Склад");
		 для каждого СтрокаТовараИст из  ДанныеЗаполнения.Товары Цикл
			  СтрокаТовара = ЭтотОбъект.Товары.Добавить();
			  ЗаполнитьЗначенияСвойств(СтрокаТовара,СтрокаТовараИст,"Номенклатура,Характеристика,Количество, Сумма"); 
			  Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
				  СтрокаТовара.Сумма = СтрокаТовараИст.СуммаСНДС; 
			  КонецЕсли;
			  
		  КонецЦикла;
		  ДокументОснование = ДанныеЗаполнения;
		  Комментарий = "#на основании#"+Строка(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры	

Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр СвободныеОстатки Приход
	//Движения.СвободныеОстатки.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.СвободныеОстатки.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
	//	Движение.Характеристика = ТекСтрокаТовары.Характеристика;
	//	Движение.Склад = Склад;
	//	Движение.ВНаличии = ТекСтрокаТовары.Количество;
	//КонецЦикла;



	//// регистр ТоварыНаСкладах Приход
	//Движения.ТоварыНаСкладах.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.ТоварыНаСкладах.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
	//	Движение.Характеристика = ТекСтрокаТовары.Характеристика;
	//	Движение.Склад = Склад;
	//	Движение.ВНаличии = ТекСтрокаТовары.Количество;
	//КонецЦикла;

	// регистр вт_ДавальческоеСырьеПолученное Приход
	Движения.вт_ДавальческоеСырьеПолученное.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.вт_ДавальческоеСырьеПолученное.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Партнер = Партнер;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Характеристика = ТекСтрокаТовары.Характеристика;
		Движение.Количество = ТекСтрокаТовары.Количество;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
	КонецЦикла;

	ДвиженияПоРеглРегистрам();
	
КонецПроцедуры


Функция ПолучитьПервуюСтатьюДоходов()
	Выборка=ПланыВидовХарактеристик.СтатьиДоходов.Выбрать();
	Если Выборка.Следующий() ТОгда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ПланыВидовХарактеристик.СтатьиДоходов.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьПервоеПодразделение()
	
	Выборка = Справочники.СтруктураПредприятия.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.СтруктураПредприятия.ПустаяСсылка();
	
КонецФункции	

Функция ПолучитьВидЗапасовДавальца(пОрганизация,пКонтрагент,пДоговор)
	
 Запрос = Новый Запрос("ВЫБРАТЬ
                       |	ВидыЗапасов.Ссылка
                       |ИЗ
                       |	Справочник.ВидыЗапасов КАК ВидыЗапасов
                       |ГДЕ
                       |	ВидыЗапасов.Организация = &Организация
                       |	И ВидыЗапасов.ТипЗапасов = &ТипЗапасов
                       |	И ВидыЗапасов.Контрагент = &Контрагент
                       |	И ВидыЗапасов.Договор = &Договор");	
 Запрос.УстановитьПараметр("Организация",пОрганизация);
 Запрос.УстановитьПараметр("ТипЗапасов",перечисления.ТипыЗапасов.МатериалДавальца);
 Запрос.УстановитьПараметр("Контрагент",пКонтрагент);
 Запрос.УстановитьПараметр("Договор",пДоговор);
 Выборка = Запрос.Выполнить().Выбрать();
 Если Выборка.Следующий() Тогда
	 Возврат Выборка.Ссылка;
 КонецЕсли;	 
 
 НовыйВидЗапасов = Справочники.ВидыЗапасов.СоздатьЭлемент();
 
 НовыйВидЗапасов.Организация = пОрганизация;
 НовыйВидЗапасов.ТипЗапасов = перечисления.ТипыЗапасов.МатериалДавальца;
 НовыйВидЗапасов.НалогообложениеНДС = перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию;
 НовыйВидЗапасов.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
 НовыйВидЗапасов.СпособПередачиТоваров = Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссию;
 НовыйВидЗапасов.Предназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа;
 НовыйВидЗапасов.Контрагент     = пКонтрагент;
 НовыйВидЗапасов.Договор        = пДоговор;
 
 НовыйВидЗапасов.Записать();
 
 Возврат НовыйВидЗапасов.Ссылка;
 
КонецФункции

Процедура ДвиженияПоРеглРегистрам()
	//Возьмем движения по регистрам, аналогичные оприходование товаров
	
	ДокОприходование = Документы.ОприходованиеИзлишковТоваров.СоздатьДокумент();
	ДокОприходование.Дата = Дата;
	ДокОприходование.Склад = Склад;
	ДокОприходование.Организация =  Организация;
	ДокОприходование.Подразделение = ПолучитьПервоеПодразделение();
	ДокОприходование.СтатьяДоходов = ПолучитьПервуюСтатьюДоходов();
	
	ТаблТовары = ЭтотОбъект.Товары.Выгрузить();
	ТаблТовары.Свернуть("Номенклатура,Характеристика","Количество");
	ТаблТовары.Колонки.Добавить("Цена");
	ТаблТовары.Колонки.Добавить("Сумма");
	ТаблТовары.Колонки.Добавить("ВидЗапасов");
	
	ТаблТовары.ЗаполнитьЗначения(1,"Цена");
	ТаблТовары.ЗаполнитьЗначения(1,"Сумма");
//	ТаблТовары.ЗаполнитьЗначения(ПолучитьВидЗапасовДавальца(Организация,Контрагент,Договор),"ВидЗапасов");
	
	ДокОприходование.Товары.Загрузить(ТаблТовары);
	
	ДокОприходование.Записать(РежимЗаписиДокумента.Проведение);
	
	ДвижДокСборка = ДокОприходование.Движения;
	
	МД_ДокСборка = ДокОприходование.метаданные().Движения;
	МД_ЭтотОбъект = ЭтотОбъект.метаданные().Движения;
	МД_Массив = Новый Массив;
	Для каждого МД_СтрЭтотОбъект из МД_ЭтотОбъект цикл
		Для каждого МД_СтрДокСборка из МД_ДокСборка цикл
			Если МД_СтрДокСборка.Имя = МД_СтрЭтотОбъект.Имя тогда
				МД_Массив.Добавить(МД_СтрЭтотОбъект.Имя);
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	ДвижСебестоимость = новый ТаблицаЗначений;
	Для каждого ЭлементМД_Массив из МД_Массив цикл
		
		ДвижСебестоимость = ДвижДокСборка[ЭлементМД_Массив].выгрузить();
		ДвижСебестоимость.Колонки.Удалить("Регистратор");
		
			Движения[ЭлементМД_Массив].Записывать = Истина;
			Движения[ЭлементМД_Массив].Загрузить(ДвижСебестоимость);
			
			//Для каждого СтрокаДвижСебестоимость Из ДвижСебестоимость Цикл
			//	НоваяСтрокаДвижСебестоимость = Движения[ЭлементМД_Массив].Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрокаДвижСебестоимость, СтрокаДвижСебестоимость);
			//КонецЦикла;
		
	КонецЦикла;
	
	Попытка  
		ДокОприходование.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Исключение
	КонецПопытки;	
	ДокОприходование.УстановитьПометкуУдаления(Истина);
	
	УдалитьДанныеДокументов(ДокОприходование.Ссылка);
	
	ДокОприходование.ОбменДанными.Загрузка=истина;
	ДокОприходование.Удалить();	
	
КонецПроцедуры	


Процедура УдалитьДанныеДокументов(ДокСсылка)
	НЗ = РегистрыСведений.РеестрДокументов.СоздатьНаборЗаписей();
	НЗ.Отбор.Ссылка.Установить(ДокСсылка);
	НЗ.Прочитать();
	НЗ.Очистить();
	НЗ.Записать(Истина);	
КонецПроцедуры
