
&НаСервереБезКонтекста
Процедура НоменклатураНачалоВыбораНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//НоменклатураНачалоВыбораНаСервере();
	ПараметрыОткрытияФормы = Новый Структура("Уникальность, Окно, НавигационнаяСсылка, Владелец", Ложь);
	
	ОповещениеОЗакрытие = Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораНоменклатуры", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура("ВидИсследования, Лаборатория, Дата", Объект.ВидИсследования, Объект.Лаборатория, Объект.Дата);
	
	ОткрытьФорму("Документ.ПротоколАнализа.Форма.ФормаВыбораНоменклатуры", ПараметрыФормы,
	ПараметрыОткрытияФормы.Владелец, ПараметрыОткрытияФормы.Уникальность,
	ПараметрыОткрытияФормы.Окно, ПараметрыОткрытияФормы.НавигационнаяСсылка, ОповещениеОЗакрытие);
	
КонецПроцедуры

//&НаКлиенте
&НаСервере
Процедура ПослеЗакрытияФормыВыбораНоменклатуры(СтрукПараметров, ДополнительныеПараметры) Экспорт
	
	Если СтрукПараметров = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	Если СтрукПараметров.Свойство("Номенклатура") Тогда
		Объект.Номенклатура = СтрукПараметров.Номенклатура;
		Объект.Образец = СтрукПараметров.Образец;
		Объект.КодПродукта = СтрукПараметров.Образец.КодПродукта;
		Объект.ДокументПоступления = СтрукПараметров.Образец.ДокументПоступления;
	КонецЕсли; 
	
	Если НЕ Объект.ВидИсследования.Пустая() Тогда
		ЗаполнитьТаблицуПоказателей();
	КонецЕсли; 	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоказателей()
	
	Если Объект.Заявка Тогда 
		
		Объект.ТЧ_Показатели.Очистить();
		Объект.ТЧ_ГОСТ.Очистить();
		Объект.ТЧ_ГОСТ_погрешность.Очистить();
		
		Если НЕ ЗначениеЗаполнено(Объект.ДокументПоступления) Тогда
			Возврат;
		КонецЕсли;	
		//находим выбранные показатели в самом акте отбора
		СтрОбразцов = Объект.ДокументПоступления.ТЧ_Образцы.Найти(Объект.Номенклатура, "Номенклатура");		
		Если СтрОбразцов = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		
		//находим строку из видов исследований
		Отбор1 = Новый Структура();
		Отбор1.Вставить("НомерСтрокиТЧОбразцы", СтрОбразцов.НомерСтроки);
		Отбор1.Вставить("ВидИсследования", Объект.ВидИсследования);
		
		СтрокиВИ = Объект.ДокументПоступления.ТЧ_ВидыИсследований.НайтиСтроки(Отбор1);		
		Если СтрокиВИ.Количество()=0 Тогда
			Возврат;
		КонецЕсли;	
		СтрокаВИ = СтрокиВИ[0];
		//находим строку из Показатели
		Отбор1 = Новый Структура();
		Отбор1.Вставить("ИдентификаторСтрокиТЧИсследований", СтрокаВИ.ИдентификаторСтроки);
		//Отбор1.Вставить("ВидИсследования",ВидИсследования);
		Отбор1.Вставить("Выбор", Истина);
		
		СтрокиПок = Объект.ДокументПоступления.Показатели.НайтиСтроки(Отбор1);		
		Если СтрокиПок.Количество()=0 Тогда
			Возврат;
		КонецЕсли;
		
		лТЗНормативы = Лаборатория_Сервер.гл_ПолучитьТаблицуНормативов(Объект.Номенклатура, Объект.ВидИсследования,,Объект.Дата, Объект.Поставщик);
		
		Для каждого Стр Из СтрокиПок Цикл
			лСтрокаТЧПоказатели = Объект.ТЧ_Показатели.Добавить();
			ЗаполнитьЗначенияСвойств(лСтрокаТЧПоказатели, Стр,,"НомерСтроки");
			
			
			лСтрокаТЧПоказатели.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			
			//заполняем данными из норматива
			лСтрокаТЗНормативы = лТЗНормативы.Найти(лСтрокаТЧПоказатели.Показатель, "Показатель");
			Если НЕ лСтрокаТЗНормативы = Неопределено Тогда
				//лСтрокаТЧПоказатели.Значение = ?(лСтрокаТЗНормативы.Показатель.ТипЗначения = 0, 0, "");//лСтрокаТЧПоказатели.Показатель.ТипЗначения.ПривестиЗначение(лСтрокаТЧПоказатели.Значение);			
				лСтрокаТЧПоказатели.Значение = лСтрокаТЗНормативы.Значение; 
				лСтрокаТЧПоказатели.ЕдиницаИзмерения = лСтрокаТЗНормативы.ЕдиницаИзмерения;
				лСтрокаТЧПоказатели.ЗначениеПоТУ = лСтрокаТЗНормативы.Значение; 
				лСтрокаТЧПоказатели.ВариантСравнения = лСтрокаТЗНормативы.ВариантСравнения; 
				лСтрокаТЧПоказатели.Интервал = лСтрокаТЗНормативы.Интервал;	
			Иначе
				лСтрокаТЧПоказатели.Значение = "";
			КонецЕсли; 
		КонецЦикла;
	Иначе
		
		//Если Вопрос("Заполнить таблицу показателей?" + Символы.ПС + "Перед заполнением таблица будет очищена.", РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Да, "Учет образцов") = КодВозвратаДиалога.Да Тогда 
			Объект.ТЧ_Показатели.Очистить();
			Объект.ТЧ_ГОСТ.Очистить();
			Объект.ТЧ_ГОСТ_погрешность.Очистить();
			//Заполнение табличной части
			лТЗНормативы = Лаборатория_Сервер.гл_ПолучитьТаблицуНормативов(Объект.Номенклатура, Объект.ВидИсследования,,Объект.Дата, Объект.Поставщик);	
			лПредПоказатель = "";
			Для каждого лСтрокаТЗНормативы Из лТЗНормативы Цикл
				Если НЕ лСтрокаТЗНормативы.Показатель = лПредПоказатель Тогда
					лСтрокаТЧПоказатели = Объект.ТЧ_Показатели.Добавить();
					лСтрокаТЧПоказатели.Показатель = лСтрокаТЗНормативы.Показатель;
					//Если лСтрокаТЗНормативы.Показатель.ТипЗначения = 1 Тогда
					//     лСтрокаТЧПоказатели.Показатель.ТипЗначения.ПривестиЗначение("");			
					//Иначе	
					//     лСтрокаТЧПоказатели.Показатель.ТипЗначения.ПривестиЗначение(0);			
					//КонецЕсли; 
					лСтрокаТЧПоказатели.Значение = ?(лСтрокаТЗНормативы.Показатель.ТипЗначения = 0, 0, "");//
					//лСтрокаТЧПоказатели.Значение = лСтрокаТЗНормативы.Значение; 
					лСтрокаТЧПоказатели.ЕдиницаИзмерения = лСтрокаТЗНормативы.ЕдиницаИзмерения;
					//Если Объект.ВидИсследования = Справочники.ВидыИсследований.Органолептика Тогда
					//	лСтрокаТЧПоказатели.Статус = Перечисления.СтатусРезультатаИсследований.соответствует; 
					//КонецЕсли;
					лПредПоказатель = лСтрокаТЗНормативы.Показатель;
					
					лСтрокаТЧПоказатели.ИдентификаторСтроки = Новый УникальныйИдентификатор; 
					лСтрокаТЧПоказатели.ЗначениеПоТУ = лСтрокаТЗНормативы.Значение; 
					
					лСтрокаТЧПоказатели.ВариантСравнения = лСтрокаТЗНормативы.ВариантСравнения; 
					лСтрокаТЧПоказатели.Интервал = лСтрокаТЗНормативы.Интервал; 
					
					Показатель = лСтрокаТЧПоказатели.Показатель;
					Для каждого СтрГост Из Показатель.МетодыИсследований Цикл
						лСтрокаТЧГОСТ = Объект.ТЧ_ГОСТ_погрешность.Добавить();
						лСтрокаТЧГОСТ.ИдентификаторСтрокиТЧ_Показатели = лСтрокаТЧПоказатели.ИдентификаторСтроки;
						лСтрокаТЧГОСТ.ГОСТ = СтрГост.МетодИсследования;
						лСтрокаТЧГОСТ.Погрешность = СтрГост.Погрешность;
						лСтрокаТЧГОСТ.Использовать = (Показатель.МетодыИсследований.Количество() = 1);
						
						Если лСтрокаТЧГОСТ.Использовать Тогда
							//лСтрокаТЧПоказатели.Погрешность = Лаборатория_Сервер.РассчитатьПогрешность(лСтрокаТЧГОСТ.Погрешность, лСтрокаТЧПоказатели.Значение);
						КонецЕсли;					
					КонецЦикла; 
					//brava 0013820
				КонецЕсли; 
				//лСтрокаТЧГОСТ = ТЧ_ГОСТ.Добавить();
				//лСтрокаТЧГОСТ.НомерСтрокиТЧ_Показатели = лСтрокаТЧПоказатели.НомерСтроки;
				//лСтрокаТЧГОСТ.ГОСТ = лСтрокаТЗНормативы.ГОСТ;
			КонецЦикла; 
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ПоказателиЗначениеПриИзменении(Элемент)
	
	//лСтрокаТЧПоказатели = Элементы.ТЧ_Показатели.ТекущиеДанные;

	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("ИдентификаторСтрокиТЧ_Показатели", лСтрокаТЧПоказатели.ИдентификаторСтроки);
	//ПараметрыОтбора.Вставить("Использовать", Истина);
	//
	//СтрокиГОСТ = Объект.ТЧ_ГОСТ_погрешность.НайтиСтроки(ПараметрыОтбора);
	//Если СтрокиГОСТ.Количество()>0 Тогда
	//	лСтрокаТЧГОСТ = СтрокиГОСТ[0];
	//	лСтрокаТЧПоказатели.Погрешность = Лаборатория_Сервер.РассчитатьПогрешность(лСтрокаТЧГОСТ.Погрешность, лСтрокаТЧПоказатели.Значение);
	//КонецЕсли; 
	//
	////0022744
	////Если лСтрокаТЧПоказатели.Значение = "Не аналогично эталону" Тогда
	////	лСтрокаТЧПоказатели.Статус = Перечисления.СтатусРезультатаИсследований.несоответствует;
	////КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ПоказателиЗначениеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	//Элемент.СписокВыбора.Очистить();
	//
	//Если Объект.ВидИсследования = ПредопределенноеЗначение("Справочник.ВидыИсследований.Органолептика") Тогда
	//	Элемент.СписокВыбора.Добавить("Соответствует");
	//	Элемент.СписокВыбора.Добавить("Не аналогично эталону");
	//	Элемент.СписокВыбора.Добавить("Не обнаружены");
	//ИначеЕсли Объект.ВидИсследования = ПредопределенноеЗначение("Справочник.ВидыИсследований.ФизикоХимическиеИсследования") Тогда
	//	Элемент.СписокВыбора.Добавить("Не обнаружены");	
	//ИначеЕсли Объект.ВидИсследования = ПредопределенноеЗначение("Справочник.ВидыИсследований.ФункциональныеСвойства") Тогда    
	//	Элемент.СписокВыбора.Добавить("Соответствует");
	//	ТекСтрока = Элементы.ТЧ_Показатели.ТекущиеДанные;
	//	Элемент.СписокВыбора.Добавить(ТекСтрока.ЗначениеПоТУ);
	//КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	УстановитьСтатус();
	
	//Если Объект.СтатусРезультатаИсследований = ПредопределенноеЗначение("Перечисление.СтатусРезультатаИсследований.несоответствует") Тогда
	//	
	//	лТекстВопроса = "";
	//	//лТекстВопроса = "Обнаружены несоответствия нормативным данным по следующим показателям:";
	//	//Для каждого лЭлементСпискаНесоответствий Из Объект.лСписокПоказателейНесоответствия Цикл
	//	//	лТекстВопроса = лТекстВопроса + Символы.ПС + " - " + лЭлементСпискаНесоответствий.Значение;
	//	//КонецЦикла; 
	//	лТекстВопроса = лТекстВопроса + Символы.ПС + "Установить образцу статус ""Брак""?";
	//	Если Вопрос(лТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, "Учет образцов") = КодВозвратаДиалога.Да Тогда 	
	//		//СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.брак;
	//		Объект.СтатусРезультатаИсследований = ПредопределенноеЗначение("Перечисление.СтатусРезультатаИсследований.несоответствует");
	//	КонецЕсли;
	//	
	//КонецЕсли; 
	
	//brava 0011744
	//не даем провести такой протокол
	//Если СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.ТребуетсяДополнительноеИсследование 
	//	ИЛИ СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.ТребуетсяВыводСотрудникаЦПБ Тогда  //0023547
	//	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	//		Отказ = Истина;
	//		Сообщить("Протокол с таким статусом нельзя проводить!");
	//	КонецЕсли; 
	//КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатус()
	
	Документы.ПротоколАнализа.УстановитьСтатус(Объект);	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
		// Первоначальное заполнение объекта.
	Если Параметры.Ключ.Пустая() Тогда
		
		//Объект.Организация = Справочники.Организации.НайтиПоКоду("000000011"); 
		Объект.Пользователь = Пользователи.ТекущийПользователь(); 
		Объект.Дата = ТекущаяДатаСеанса(); 
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СоответствуетНаСервере()
	Для каждого Стр Из Объект.ТЧ_Показатели Цикл
		Стр.Значение = "Соответствует";
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура Соответствует(Команда)
	СоответствуетНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостью()

	//Если Объект.ВидИсследования = ПредопределенноеЗначение("Справочник.ВидыИсследований.Органолептика") Тогда
	//	Элементы.ТЧ_Показатели.КоманднаяПанель.ПодчиненныеЭлементы.ТЧ_ПоказателиСоответствует.Доступность = Истина;	
	//Иначе
	//	Элементы.ТЧ_Показатели.КоманднаяПанель.ПодчиненныеЭлементы.ТЧ_ПоказателиСоответствует.Доступность = Ложь;
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидИсследованияПриИзменении(Элемент)
	УправлениеВидимостью();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеВидимостью();
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ПоказателиЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = Ложь;
	//ДанныеВыбора = Новый СписокЗначений;
	//
	////Если Объект.ВидИсследования = ПредопределенноеЗначение("Справочник.ВидыИсследований.Органолептика") Тогда
	//	ДанныеВыбора.Добавить("Соответствует");
	//	ДанныеВыбора.Добавить("Не аналогично эталону");
	//	ДанныеВыбора.Добавить("Не обнаружены");
	//ИначеЕсли Объект.ВидИсследования = ПредопределенноеЗначение("Справочник.ВидыИсследований.ФизикоХимическиеИсследования") Тогда
	//	ДанныеВыбора.Добавить("Не обнаружены");	
	//ИначеЕсли Объект.ВидИсследования = ПредопределенноеЗначение("Справочник.ВидыИсследований.ФункциональныеСвойства") Тогда    
	//	ДанныеВыбора.Добавить("Соответствует");
	//	ТекСтрока = Элементы.ТЧ_Показатели.ТекущиеДанные;
	//	ДанныеВыбора.Добавить(ТекСтрока.ЗначениеПоТУ);
	//КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ПоказателиЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.ТЧ_Показатели.ТекущиеДанные;
	ТекущаяСтрока.Значение = ВыбранноеЗначение;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Объект.СтатусРезультатаИсследований=ПредопределенноеЗначение("Перечисление.СтатусРезультатаИсследований.несоответствует") Тогда
		СоздатьКРПоПротоколу();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СоздатьКРПоПротоколу()
	Документы.ПротоколАнализа.СоздатьКРПоПротоколу(Объект.Ссылка);
КонецПроцедуры