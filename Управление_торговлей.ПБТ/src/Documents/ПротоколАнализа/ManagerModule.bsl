Функция ПечатьТалона(Объект, лТабДок) Экспорт
	
	лМакет = Объект.ПолучитьМакет("Талон");
	
	лОбластьШапка = лМакет.ПолучитьОбласть("Шапка");
	лТипНоменклатуры = Лаборатория_Сервер.гл_ПолучитьТипНоменклатуры(Объект.Номенклатура);
	
	Если лТипНоменклатуры = "Сырье" Тогда 
		//ПЕЧАТЬ ТАЛОНА  НА СЫРЬЕ
		лОбластьШапка.Параметры.Склад = "Склад сырья";
		лОбластьШапка.Параметры.ЗаголовокНаименование = "Наменование сырья";
	ИначеЕсли лТипНоменклатуры = "ГотоваяПродукция" Тогда 
		//ПЕЧАТЬ ТАЛОНА НА ГП
		лОбластьШапка.Параметры.Склад = "Склад готовой продукции";
		лОбластьШапка.Параметры.ЗаголовокНаименование = "Наименование продукции";
	КонецЕсли;
	
	лТабДок.Вывести(лОбластьШапка);
	
	лОбластьСтрока = лМакет.ПолучитьОбласть("Строка");
	лОбластьСтрока.Параметры.Заполнить(Объект);
	лОбластьСтрока.Параметры.Наименование = Объект.Номенклатура.НаименованиеПолное;
	лТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	лТабДок.Вывести(лОбластьСтрока);
	
	Возврат лТабДок;
	
КонецФункции

Функция ПечатьПротокола(Объект, лТабДок) Экспорт
	
	Если Не РольДоступна("ЗаведующийЛабораторией") Тогда 
		Сообщить("Документ может распечатывать только заведующий лабораторией!");
		Возврат "";
	КонецЕсли; 
	
	лМакет = ПолучитьМакет("Протокол15");
	
	лОбластьШапка = лМакет.ПолучитьОбласть("Шапка");
	лОбластьШапка.Параметры.Заполнить(Объект);
	лОбластьШапка.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Объект.Номер);
	лОбластьШапка.Параметры.Дата = Формат(Объект.Дата, "ДФ=dd.MM.yyyy");
	
	Если ЗначениеЗаполнено(Объект.Заявитель) Тогда 
		лОбластьШапка.Параметры.Заявитель = Объект.Заявитель;
	Иначе	
		лОбластьШапка.Параметры.Заявитель = "ООО «Платинум Абсолют»";
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.АдресЗаявителя) Тогда 
		лОбластьШапка.Параметры.АдресЗаявителя = Объект.АдресЗаявителя;
	Иначе	
		лОбластьШапка.Параметры.АдресЗаявителя = "142305, Московская область, Чеховский район, д. Сергеево";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДатаДоставкиОбразца) Тогда 
		лОбластьШапка.Параметры.ДатаДоставкиОбразца = Формат(Объект.ДатаДоставкиОбразца, "ДФ=dd.MM.yyyy") ;
	Иначе	
		лОбластьШапка.Параметры.ДатаДоставкиОбразца = "";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ВремяДоставкиОбразца) Тогда    
		лОбластьШапка.Параметры.ВремяДоставкиОбразца = Формат(Объект.ВремяДоставкиОбразца, "ДФ=HH.mm");
	Иначе	
		лОбластьШапка.Параметры.ВремяДоставкиОбразца = "";
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Направление) Тогда 
		лОбластьШапка.Параметры.Направление = Объект.Направление;
	Иначе	
		лОбластьШапка.Параметры.Направление = "Направление на анализ № "+Объект.ДокументПоступления.Номер;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ЦельИсследования) Тогда 
		лОбластьШапка.Параметры.ЦельИсследования = Объект.ЦельИсследования;
	Иначе	
		лОбластьШапка.Параметры.ЦельИсследования = "Контроль качества";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.СопроводительныеДокументы) Тогда 
		лОбластьШапка.Параметры.СопроводительныеДокументы = "Сопроводительные документы: "+Объект.СопроводительныеДокументы;
	Иначе	
		лОбластьШапка.Параметры.СопроводительныеДокументы = "";
	КонецЕсли;
	
	лОбластьШапка.Параметры.Номенклатура = Объект.Номенклатура.НаименованиеПолное;
	лОбластьШапка.Параметры.ДатаИсследования = Формат(Объект.ДокументПоступления.Дата, "ДФ=dd.MM.yyyy");  //0016506
	
	Если ЗначениеЗаполнено(Объект.НомерЗамеса) Тогда
	   лОбластьШапка.Параметры.Дефис = "-";
   Иначе
	   лОбластьШапка.Параметры.Дефис = "";
	КонецЕсли; 
	Если Объект.Номенклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппыЛаб.Сырье Тогда
	    лОбластьШапка.Параметры.Пост = ""+Объект.Поставщик.НаименованиеПолное;
	Иначе//ГП	
		Если ТипЗнч(Объект.Производитель) = Тип("СправочникСсылка.Контрагенты") Тогда 
		    лОбластьШапка.Параметры.Пост = ""+Объект.Производитель.НаименованиеПолное;
		Иначе
			лОбластьШапка.Параметры.Пост = ""+Объект.Производитель.Наименование;
		КонецЕсли;
	КонецЕсли; 
	лТабДок.Вывести(лОбластьШапка);
	
	лОбластьСтрока = лМакет.ПолучитьОбласть("Строка");
	Для каждого Стр Из Объект.ТЧ_Показатели Цикл
		лОбластьСтрока.Параметры.Заполнить(Стр);
		
		Если НЕ ЗначениеЗаполнено(Стр.ЕдиницаИзмерения) Тогда
		    лОбластьСтрока.Параметры.ЕдиницаИзмерения = "---"
		КонецЕсли; 
		лПечЗначениеНорматива = "";
		лВидСравнения = "";
		лИнтервал = "";	
		лДопустимоеОтлонение = "";	
		лЗначениеНорматива = Лаборатория_Сервер.гл_ПолучитьЗначениеНорматива(Объект.Номенклатура, Объект.ВидИсследования, Стр.Показатель, лВидСравнения, лИнтервал,,,Объект.Дата, лДопустимоеОтлонение);	
		Если НЕ ЗначениеЗаполнено(лВидСравнения) Тогда
			лПечЗначениеНорматива = лЗначениеНорматива;
		ИначеЕсли лВидСравнения = Перечисления.ВариантыСравнения.ВИнтервале Тогда 	
			лПечЗначениеНорматива = Строка(лЗначениеНорматива) + Строка(лВидСравнения) + лИнтервал;
		ИначеЕсли лВидСравнения = Перечисления.ВариантыСравнения.Между Тогда 	
			лПечЗначениеНорматива = "от " + Строка(лИнтервал) + " до " + лЗначениеНорматива;
		Иначе
			лПечЗначениеНорматива = Строка(лВидСравнения) + " " + лЗначениеНорматива;
		КонецЕсли; 
		лОбластьСтрока.Параметры.Норма = лПечЗначениеНорматива;
		//0014687
		//лОбластьСтрока.Параметры.ДопустимоеОтклонение = лДопустимоеОтлонение;
		лСтрокаГОСТ = "";
		лРазделитель = "";
		Для Каждого лСтрокаТЧГОСТ Из Объект.ТЧ_ГОСТ Цикл 
			Если лСтрокаТЧГОСТ.НомерСтрокиТЧ_Показатели <> Стр.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			
			лСтрокаГОСТ = лСтрокаГОСТ + лРазделитель + лСтрокаТЧГОСТ.ГОСТ.Наименование;
			лРазделитель = ", ";
		КонецЦикла;	
		лОбластьСтрока.Параметры.ГОСТ = лСтрокаГОСТ;
		
		лТабДок.Вывести(лОбластьСтрока);
	КонецЦикла; 
	
	лОбластьПодвал = лМакет.ПолучитьОбласть("Подвал");
	Если ЗначениеЗаполнено(Объект.КомментарийДляПечати) Тогда
		лОбластьПодвал.Параметры.КомментарийПеч = "Комментарий: "+Объект.КомментарийДляПечати;
	КонецЕсли; 
	Если ЗначениеЗаполнено(Объект.Заключение) Тогда 
		лОбластьПодвал.Параметры.пЗаключение = "Заключение: "+Объект.Заключение;
		лОбластьПодвал.Параметры.ФИОЗаключение = "ФИО, должность лица, ответственного за заключение (подпись):" 
	Иначе	
		лОбластьПодвал.Параметры.пЗаключение = "";
	КонецЕсли;	

    лОбластьПодвал.Параметры.Заполнить(Объект);
	лТабДок.Вывести(лОбластьПодвал);
	
	Возврат лТабДок;
	
КонецФункции

Функция ПечатьАнгл(Объект, лТабДок) Экспорт   
	
	Если Не РольДоступна("ЗаведующийЛабораторией") Тогда //0015979 brava
	    Сообщить("Документ может распечатывать только заведующий лабораторией!");
		Возврат "";
	КонецЕсли; 
	
	лМакет = ПолучитьМакет("ПротоколАнгл");
	
	лОбластьШапка = лМакет.ПолучитьОбласть("Шапка");
	лОбластьШапка.Параметры.Заполнить(Объект);
	лОбластьШапка.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Объект.Номер);
	лОбластьШапка.Параметры.Дата = Формат(Объект.Дата, "ДФ=dd.MM.yyyy");
	
	//0013643 brava Убрал по инц 0023261
	//Если ВидИсследования = Справочники.ВидыИсследований.МикробиологическиеИсследования Тогда 
	//	лОбластьШапка.Параметры.Лицензия = "Лицензия №: 50.99.08.001.Л.000117.12.11 от 23.12.2011 ";
	//Иначе	
	//	лОбластьШапка.Параметры.Лицензия = "";
	//КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Заявитель) Тогда 
		лОбластьШапка.Параметры.Заявитель = Объект.Заявитель;
	Иначе	
		лОбластьШапка.Параметры.Заявитель = "Ltd. «Platinum Absolut»";
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.АдресЗаявителя) Тогда 
		лОбластьШапка.Параметры.АдресЗаявителя = Объект.АдресЗаявителя;
	Иначе	
		лОбластьШапка.Параметры.АдресЗаявителя = "142305, Moscow region, Chekhov district, d. Sergeevo";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДатаДоставкиОбразца) Тогда 
		лОбластьШапка.Параметры.ДатаДоставкиОбразца = Формат(Объект.ДатаДоставкиОбразца, "ДФ=dd.MM.yyyy") ;
	Иначе	
		лОбластьШапка.Параметры.ДатаДоставкиОбразца = "";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ВремяДоставкиОбразца) Тогда    
		лОбластьШапка.Параметры.ВремяДоставкиОбразца = Формат(Объект.ВремяДоставкиОбразца, "ДФ=HH.mm");
	Иначе	
		лОбластьШапка.Параметры.ВремяДоставкиОбразца = "";
	КонецЕсли;	
	Если ЗначениеЗаполнено(Объект.Направление) Тогда 
		лОбластьШапка.Параметры.Направление = Объект.Направление;
	Иначе	
		лОбластьШапка.Параметры.Направление = "Focus on analysis № "+Объект.ДокументПоступления.Номер;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ЦельИсследования) Тогда 
		лОбластьШапка.Параметры.ЦельИсследования = Объект.ЦельИсследования;
	Иначе	
		лОбластьШапка.Параметры.ЦельИсследования = "Quality control";
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.СопроводительныеДокументы) Тогда 
		лОбластьШапка.Параметры.СопроводительныеДокументы = "Accompanying documents: "+Объект.СопроводительныеДокументы;
	Иначе	
		лОбластьШапка.Параметры.СопроводительныеДокументы = "";
	КонецЕсли;
	//0013643
	
	лОбластьШапка.Параметры.Номенклатура = СокрЛП(?(ЗначениеЗаполнено(Объект.Номенклатура.НаименованиеПолноеНаАнглийскомЯзыке), Объект.Номенклатура.НаименованиеПолноеНаАнглийскомЯзыке, Переводы.ПеревестиЯндексом(Объект.Номенклатура.Наименование)));
	лОбластьШапка.Параметры.ДатаИсследования = Формат(Объект.ДатаПоступленияНаСклад , "ДФ=dd.MM.yyyy");
	
	Если ЗначениеЗаполнено(Объект.НомерЗамеса) Тогда
	   лОбластьШапка.Параметры.Дефис = "-";
   Иначе
	   лОбластьШапка.Параметры.Дефис = "";
	КонецЕсли; 
	Если Объект.Номенклатура.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппыЛаб.Сырье Тогда
	    лОбластьШапка.Параметры.Пост = ""+Переводы.ПеревестиЯндексом(Объект.Поставщик.НаименованиеПолное);
	Иначе//ГП	
	    лОбластьШапка.Параметры.Пост = ""+Переводы.ПеревестиЯндексом(Объект.Производитель.НаименованиеПолное);
	КонецЕсли; 
	
	лОбластьШапка.Параметры.ДокументПоступления = Объект.ДокументПоступления.Номер;
	лОбластьШапка.Параметры.ВидИсследования = Переводы.ПеревестиЯндексом(Объект.ВидИсследования);
	лОбластьШапка.Параметры.СопроводительныеДокументы = Переводы.ПеревестиЯндексом(Объект.СопроводительныеДокументы);
	
	лТабДок.Вывести(лОбластьШапка);
	
	лОбластьСтрока = лМакет.ПолучитьОбласть("Строка");
	Для каждого Стр Из Объект.ТЧ_Показатели Цикл
		лОбластьСтрока.Параметры.Заполнить(Стр);
		
		Если ЗначениеЗаполнено(Стр.Показатель.НаименованиеАнгл) Тогда
		    лОбластьСтрока.Параметры.Показатель = Стр.Показатель.НаименованиеАнгл;
		Иначе	
		    лОбластьСтрока.Параметры.Показатель = Переводы.ПеревестиЯндексом(Стр.Показатель);
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(Стр.ЕдиницаИзмерения) Тогда
		    лОбластьСтрока.Параметры.ЕдиницаИзмерения = "---"
		КонецЕсли; 
		лПечЗначениеНорматива = "";
		лВидСравнения = "";
		лИнтервал = "";	
		лДопустимоеОтлонение = "";	
		лЗначениеНорматива = Лаборатория_Сервер.гл_ПолучитьЗначениеНорматива(Объект.Номенклатура, Объект.ВидИсследования, Стр.Показатель, лВидСравнения, лИнтервал,,,Объект.Дата, лДопустимоеОтлонение);	
		
		лВидСравнения = Переводы.ПеревестиЯндексом(лВидСравнения);
		лИнтервал = Переводы.ПеревестиЯндексом(лИнтервал);
		лЗначениеНорматива = Переводы.ПеревестиЯндексом(лЗначениеНорматива);
		лОбластьСтрока.Параметры.Значение = Переводы.ПеревестиЯндексом(Стр.Значение);
		
		лЗначениеНорматива = Переводы.ПеревестиЯндексом(лЗначениеНорматива);
		Если НЕ ЗначениеЗаполнено(лВидСравнения) Тогда
			лПечЗначениеНорматива = лЗначениеНорматива;
		ИначеЕсли лВидСравнения = Перечисления.ВариантыСравнения.ВИнтервале Тогда 	
			лПечЗначениеНорматива = Строка(лЗначениеНорматива) + Строка(лВидСравнения) + лИнтервал;
		ИначеЕсли лВидСравнения = Перечисления.ВариантыСравнения.Между Тогда 	
			лПечЗначениеНорматива = "from " + Строка(лИнтервал) + " till " + лЗначениеНорматива;
		Иначе
			лПечЗначениеНорматива = Строка(лВидСравнения) + " " + лЗначениеНорматива;
		КонецЕсли; 
		лОбластьСтрока.Параметры.Норма = лПечЗначениеНорматива;
		//0014687
		//лОбластьСтрока.Параметры.ДопустимоеОтклонение = лДопустимоеОтлонение;
		лСтрокаГОСТ = "";
		лРазделитель = "";
		Для Каждого лСтрокаТЧГОСТ Из Объект.ТЧ_ГОСТ Цикл 
			Если лСтрокаТЧГОСТ.НомерСтрокиТЧ_Показатели <> Стр.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			
			лСтрокаГОСТ = лСтрокаГОСТ + лРазделитель + лСтрокаТЧГОСТ.ГОСТ.Наименование;
			лРазделитель = ", ";
		КонецЦикла;	
		лОбластьСтрока.Параметры.ГОСТ = лСтрокаГОСТ;
		
		лТабДок.Вывести(лОбластьСтрока);
	КонецЦикла; 
	
	лОбластьПодвал = лМакет.ПолучитьОбласть("Подвал");
	Если ЗначениеЗаполнено(Объект.КомментарийДляПечати) Тогда
		лОбластьПодвал.Параметры.КомментарийПеч = "Comment: "+Переводы.ПеревестиЯндексом(Объект.КомментарийДляПечати);
	КонецЕсли; 
	//0013643
	Если ЗначениеЗаполнено(Объект.Заключение) Тогда 
		лОбластьПодвал.Параметры.пЗаключение = "Conclusion: "+Переводы.ПеревестиЯндексом(Объект.Заключение);
		лОбластьПодвал.Параметры.ФИОЗаключение = "Name, position of the person responsible for the conclusion (signature):" 
	Иначе	
		лОбластьПодвал.Параметры.пЗаключение = "";
	КонецЕсли;	
	//0013643

    лОбластьПодвал.Параметры.Заполнить(Объект);
	
	лОбластьПодвал.Параметры.Пользователь = Переводы.ПеревестиЯндексом(Объект.Пользователь);

	лТабДок.Вывести(лОбластьПодвал);
	
	Возврат  лТабДок;
	
КонецФункции

Процедура УстановитьСтатус(Объект) Экспорт
	
	лСписокПоказателейНесоответствия = "";
	
	ДокОб = ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.ПротоколАнализа"));
	//ТЧ_Показатели = РеквизитФормыВЗначение(Объект.ТЧ_Показатели, Тип("ТаблицаЗначений"));
	Если НЕ ДокОб.ТЧ_Показатели.Найти(Перечисления.СтатусРезультатаИсследований.ТребуетсяДополнительноеИсследование, "Статус") = Неопределено Тогда
		//brava 0011744
		//если хотя бы в одной строке есть статус "Требуется дополнительное исследование", то именно такой статус и надо ставить
		ДокОб.СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.ТребуетсяДополнительноеИсследование;
	Иначе
		//будет работать как раньше
		//Если ЛабораторияКлиент.гл_ОбразецСоответствуетНормативам(Ссылка, лСписокПоказателейНесоответствия, ТЧ_Показатели) Тогда //ТЧ_Показатели.Выгрузить()
		Если Лаборатория_Сервер.гл_ОбразецСоответствуетНормативам(ДокОб, лСписокПоказателейНесоответствия, ДокОб.ТЧ_Показатели) Тогда 
			ДокОб.СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.соответствует;
		Иначе	
			ДокОб.СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.Несоответствует;
			//Если РольДоступна("СотрудникОтделаКачества") Тогда    // И Ссылка.ПолучитьФорму().Открыта() - выпадала ошибка при первой записи документа
			//	лТекстВопроса = "Обнаружены несоответствия нормативным данным по следующим показателям:";
			//	Для каждого лЭлементСпискаНесоответствий Из лСписокПоказателейНесоответствия Цикл
			//		лТекстВопроса = лТекстВопроса + Символы.ПС + " - " + лЭлементСпискаНесоответствий.Значение;
			//	КонецЦикла; 
			//	лТекстВопроса = лТекстВопроса + Символы.ПС + "Установить образцу статус ""Брак""?";
			//	Если Вопрос(лТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, "Учет образцов") = КодВозвратаДиалога.Да Тогда 	
			//		СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.брак;
			//	КонецЕсли;
			//КонецЕсли;
			
		КонецЕсли;
		
		//brava 10/09/2018 0023213
		Если НЕ ДокОб.ТЧ_Показатели.Найти(Перечисления.СтатусРезультатаИсследований.несоответствует, "Статус") = Неопределено Тогда
			ДокОб.СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.Несоответствует;
		КонецЕсли;
		Если НЕ ДокОб.ТЧ_Показатели.Найти(Перечисления.СтатусРезультатаИсследований.брак, "Статус") = Неопределено Тогда
			ДокОб.СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.брак;
		КонецЕсли; 			
	КонецЕсли;
	
	//0023547
	//При формировании протокола по Заявке в случае, если отсутствуют нормативы (программе не с чем сравнивать) необходимо, чтобы при Записи протокола всплывало окно "Требуется вывод сотрудника ЦПБ
	Если ДокОб.Заявка Тогда
		Для каждого ТекСтрокаТЧ_Показатели Из ДокОб.ТЧ_Показатели Цикл
			Если Не ЗначениеЗаполнено(ТекСтрокаТЧ_Показатели.ЗначениеПоТУ) И Не ЗначениеЗаполнено(ТекСтрокаТЧ_Показатели.Статус) Тогда
				ДокОб.СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.ТребуетсяВыводСотрудникаЦПБ;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли;
	
	//0023320
	//
	//Если СтатусРезультатаИсследований = Перечисления.СтатусРезультатаИсследований.несоответствует Тогда
	//	//в новом всегда будем задавать этот вопрос.
	//	//а в существующем только при смене статуса на этот
	//	Если ЭтоНовый() Или Ссылка.СтатусРезультатаИсследований<>СтатусРезультатаИсследований Тогда
	//		Ответ = Вопрос("Вы действительно хотите присвоить статус <Не соответствует>?", РежимДиалогаВопрос.ДаНет);
	//		Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
	//			Отказ = Истина;
	//			Возврат;
	//		КонецЕсли;  
	//	КонецЕсли; 
	//КонецЕсли; 	
	
	ЗначениеВДанныеФормы(ДокОб, Объект);
	
КонецПроцедуры

Функция СоздатьКРПоПротоколу(Ссылка) Экспорт
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат "";
	КонецЕсли; 
	
	//пытаемся найти существующий документ УК 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КартаРазрешения.Ссылка
	|ИЗ
	|	Документ.КартаРазрешения КАК КартаРазрешения
	|ГДЕ
	|	КартаРазрешения.Протокол = &ПротоколАнализа";
	
	Запрос.УстановитьПараметр("ПротоколАнализа", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
	ДокКР = Документы.КартаРазрешения.СоздатьДокумент();
	
	ДокКР.Заполнить(Ссылка);
	ДокКР.Дата = ТекущаяДатаСеанса();
	
	ДокКР.Пользователь = Пользователи.ТекущийПользователь();
	ДокКР.Статус = Перечисления.СтатусыКартРазрешения.ВРаботе;
	ДокКР.ВидКартыРазрешения = Перечисления.ВидыКартРазрешения.Обычная;
	
	Попытка
		ДокКР.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Возврат ДокКР.Ссылка;
	
КонецФункции
 