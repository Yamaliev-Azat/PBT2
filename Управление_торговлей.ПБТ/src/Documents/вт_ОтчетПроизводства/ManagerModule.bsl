#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция определяет реквизиты выбранного документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВнутреннееПотреблениеТоваров - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - реквизиты внутреннего потребления товаров
//
Функция ПолучитьРеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.вт_ОтчетПроизводства КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",
		Дата,
		Организация,
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции // ПолучитьРеквизитыДокумента()

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, пМоментВремени) Экспорт

	Запрос = Новый Запрос;
	
	Реквизиты = ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);

	// Формирование текста запроса.
	
	//Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ДанныеДокумента.Дата КАК Период,
	//|	ДанныеДокумента.Ссылка КАК Ссылка,
	//|	ДанныеДокумента.Организация КАК Организация,
	//|	ДанныеДокумента.Склад КАК Склад,
	//|	ДанныеДокумента.СкладБрак КАК СкладБрак,
	//|	ДанныеДокумента.Подразделение КАК Подразделение,
	//|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
	//|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
	//|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	//|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов
	//|ИЗ
	//|	Документ.вт_ОтчетПроизводства КАК ДанныеДокумента
	//|ГДЕ
	//|	ДанныеДокумента.Ссылка = &Ссылка";
	//Реквизиты = Запрос.Выполнить().Выбрать();
	//Реквизиты.Следующий();

//	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Константы.ВалютаУправленческогоУчета.Получить(), Неопределено, Реквизиты.Период);

	Запрос.УстановитьПараметр("Период",                                  Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",                                   Реквизиты.Склад);
	Запрос.УстановитьПараметр("СкладБрак",                               Реквизиты.СкладБрак);
	Запрос.УстановитьПараметр("ТипЗапасов",                              Реквизиты.ТипЗапасовИзШапки);
	Запрос.УстановитьПараметр("Организация",                             Реквизиты.Организация);
//	Запрос.УстановитьПараметр("СтатьяДоходов",                           Реквизиты.СтатьяДоходов);
//	Запрос.УстановитьПараметр("АналитикаДоходов",                        Реквизиты.АналитикаДоходов);
	Запрос.УстановитьПараметр("Подразделение",                           Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                   Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	Запрос.УстановитьПараметр("ДокументОснование",                       Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ПоОснованию",                             ЗначениеЗаполнено(Реквизиты.ДокументОснование));
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",         Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("Валюта",                                  Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",          Константы.ВалютаРегламентированногоУчета.Получить());
	//Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	//Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",
	//                          ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",
	//						                              Новый Структура("Склад",Реквизиты.Склад)));

	Запрос.Текст = " 
	//0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Склад КАК Склад,
	|   &ДокументОснование КАК ДокументОснование, 
	|   ТаблицаТовары.вт_Заказ КАК ВТ_ЗАКАЗ
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.Количество > 0 
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	//|	ТаблицаТовары.Ссылка КАК Ссылка,
	//|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	//|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	//|	ТаблицаТовары.Характеристика КАК Характеристика,
	//|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	//|	ТаблицаТовары.БракКолВо КАК Количество,
	//|	ТаблицаТовары.Цена*ТаблицаТовары.БракКолВо КАК Сумма,
	//|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	//|	&СкладБрак КАК Склад,
	//|   ТаблицаТовары.вт_Заказ КАК ВТ_ЗАКАЗ
	//|ИЗ
	//|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	//|ГДЕ
	//|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.БракКолВо > 0 
	//|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.МатериалОтхода КАК Номенклатура,
	|	ТаблицаТовары.МатериалОтхода.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.ОбъемОтхода КАК Количество,
	|	ТаблицаТовары.Цена*ТаблицаТовары.ОбъемОтхода КАК Сумма,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&СкладБрак КАК Склад,
	|   &ДокументОснование КАК ДокументОснование,
	|   ТаблицаТовары.вт_Заказ КАК ВТ_ЗАКАЗ
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.ОбъемОтхода > 0 
	|	;	
	|////////////////////////////////////////////////////////////////////////////////
	//1 ТаблицаТоварыКОформлениюИзлишковНедостач
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&ДокументОснование КАК ДокументОснование,
	|	ТаблицаТовары.Количество КАК КОформлениюАктов
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И ТаблицаТовары.Количество <> 0
	|	И &ПоОснованию
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//2 ТаблицаПрочиеДоходы
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|//	&СтатьяДоходов КАК СтатьяДоходов,
	|//	&АналитикаДоходов КАК АналитикаДоходов,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//3 ТаблицаТоварыНаСкладах, ТаблицаСвободныеОстатки 
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество КАК ВНаличии,
	|   СерииТоваров.Серия КАК Серия
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.вт_ОтчетПроизводства.Серии КАК СерииТоваров ПО
	|	  СерииТоваров.Ссылка = ТаблицаТовары.Ссылка И СерииТоваров.Номенклатура = ТаблицаТовары.Номенклатура И  СерииТоваров.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка	И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&СкладБрак КАК Склад,
	|	ТаблицаТовары.МатериалОтхода,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ТаблицаТовары.ОбъемОтхода КАК ВНаличии,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.ОбъемОтхода <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&СкладБрак,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.БракКолВо,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.вт_ПроизводствоСырье КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.БракКолВо > 0
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&СкладБрак,
	|	вт_БракДробленка.Дробленка,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	вт_БракДробленка.Количество,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)КАК Серия
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.вт_БракДробленка КАК вт_БракДробленка
	|ГДЕ
	|	вт_БракДробленка.Ссылка = &Ссылка
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Склад КАК Склад,
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Номенклатура,
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Характеристика,
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Количество,
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Серия КАК Серия
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.вт_ПроизводствоСырье КАК вт_ОтчетПроизводствавт_ПроизводствоСырье
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары ПО ТаблицаТовары.сСЫЛКА=вт_ОтчетПроизводствавт_ПроизводствоСырье.Ссылка
	|		и ТаблицаТовары.нОМЕНКЛАТУРА = вт_ОтчетПроизводствавт_ПроизводствоСырье.ГотоваяПродукция 
	|		И ( (вт_ОтчетПроизводствавт_ПроизводствоСырье.КлючСвязиСтроки = ТаблицаТовары.КодСтроки 
	|			И вт_ОтчетПроизводствавт_ПроизводствоСырье.КлючСвязиСтроки>0 И ТаблицаТовары.КодСтроки>0)
	|			ИЛИ  вт_ОтчетПроизводствавт_ПроизводствоСырье.КлючСвязиСтроки=0
	|		  )	
	|ГДЕ
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Ссылка = &Ссылка	
	| 	
	|;";
	
	Запрос.Текст = 
	    Запрос.Текст
		//+ ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
		+ ТекстЗапросаТаблицаТоварыОрганизаций()
		//+ ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос)
		//+ ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл() 
		//+ ТекстЗапросаТаблицаДвиженияСерийТоваров() 
		+ 
		 ТекстЗапросаВтЗаказВПроизводство()
		+ ТекстЗапросаВтВыпускПродукции()
		+ ТекстЗапросаВтСырьеВыпускаПродукции()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизаций();
	                
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций",                 			Результат[4].Выгрузить());
	
	ТаблицыДляДвижений.Вставить("ТаблицаВТЗаказыВПроизводство",							Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаВТВыпускПродукции",								Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаВТСырьеВыпускаПродукции",						Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизацийПоследовательность",	Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизаций",						Результат[9].Выгрузить());
		
	ТаблицыДляДвижений.Вставить("ТаблицаОтходов",				 	вт_ПолучитьТаблицуОтходов(ДокументСсылка));
	ТаблицыДляДвижений.Вставить("ТаблицаБрака",				 		вт_ПолучитьТаблицуБрака(ДокументСсылка));
	ТаблицыДляДвижений.Вставить("ТаблицаВыпускПоСменам", 			вт_ПолучитьТаблицуВыпускаПоСменам(ДокументСсылка));

КонецПроцедуры

//++ Переопределение проведения себестоимости  
Функция вт_ПолучитьТаблицуБрака(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	вт_ОтчетПроизводстваТовары.Ссылка.Дата КАК Период,
	             |	вт_ОтчетПроизводстваТовары.Номенклатура КАК ГотоваяПродукция,
	             |	вт_ОтчетПроизводстваТовары.Характеристика КАК ХарактеристикаГотовойПродукции,
	             |	ВЫБОР
	             |		КОГДА вт_ОтчетПроизводстваТовары.НоменклатураБрака = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	             |			ТОГДА вт_ОтчетПроизводстваТовары.Номенклатура
	             |		ИНАЧЕ вт_ОтчетПроизводстваТовары.НоменклатураБрака
	             |	КОНЕЦ КАК НоменклатураБрака,
	             |	вт_ОтчетПроизводстваТовары.КоличествоПлан КАК КоличествоВыпуска,
	             |	вт_ОтчетПроизводстваТовары.БракКолВо КАК Количество
	             |ИЗ
	             |	Документ.вт_ОтчетПроизводства.Товары КАК вт_ОтчетПроизводстваТовары
	             |ГДЕ
	             |	вт_ОтчетПроизводстваТовары.Ссылка = &Ссылка
	             |	И вт_ОтчетПроизводстваТовары.БракКолВо > 0";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Возврат Запрос.Выполнить().Выгрузить();
	
	
КонецФункции

Функция вт_ПолучитьТаблицуОтходов(ДокументСсылка)
	ТаблицаОтходов = Новый ТаблицаЗначений; 
	ТаблицаОтходов.Колонки.Добавить("ГотоваяПродукция");
	ТаблицаОтходов.Колонки.Добавить("ХарактеристикаГотовойПродукции");
	ТаблицаОтходов.Колонки.Добавить("НоменклатураОтходов");
	//++ 07.06.2019
	ТаблицаОтходов.Колонки.Добавить("ХарактеристикаОтходов");
	//--
	ТаблицаОтходов.Колонки.Добавить("Количество");
	ТаблицаОтходов.Колонки.Добавить("КоличествоВыпуска");
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	вт_ОтчетПроизводствавт_БракДробленка.Ссылка.Дата КАК Период,
	             |	вт_ОтчетПроизводствавт_БракДробленка.ГотоваяПродукция КАК ГотоваяПродукция,
	             |	НЕОПРЕДЕЛЕНО КАК ХарактеристикаГотовойПродукции,
	             |	вт_ОтчетПроизводствавт_БракДробленка.Дробленка КАК НоменклатураОтходов,
	             |	вт_ОтчетПроизводствавт_БракДробленка.Количество КАК Количество,
	             |	вт_ОтчетПроизводстваТовары.КоличествоПлан КАК КоличествоВыпуска,
	             |	вт_ОтчетПроизводствавт_БракДробленка.Характеристика КАК ХарактеристикаОтходов
	             |ИЗ
	             |	Документ.вт_ОтчетПроизводства.вт_БракДробленка КАК вт_ОтчетПроизводствавт_БракДробленка
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.вт_ОтчетПроизводства.Товары КАК вт_ОтчетПроизводстваТовары
	             |		ПО вт_ОтчетПроизводствавт_БракДробленка.Ссылка = вт_ОтчетПроизводстваТовары.Ссылка
	             |			И вт_ОтчетПроизводствавт_БракДробленка.ГотоваяПродукция = вт_ОтчетПроизводстваТовары.Номенклатура
	             |			И вт_ОтчетПроизводствавт_БракДробленка.КлючСвязиСтроки = вт_ОтчетПроизводстваТовары.КодСтроки
	             |ГДЕ
	             |	вт_ОтчетПроизводстваТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	ТаблицаОтходов = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаОтходов;
	
КонецФункции

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

Функция ПараметрыУказанияСерий(Объект) Экспорт
//++ Функция раскомментирована 11.06.2019	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.вт_ОтчетПроизводства";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Истина);
	
//	ЗакупкаУПоставщикаПоРеглУчету = (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	
	//Если ЗакупкаУПоставщикаПоРеглУчету Тогда
	//	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	//	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	//	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости    = Истина;
	//Иначе
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = 
						(ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры И Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата, Истина))
						Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		//ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		//++ 11.06.2019
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = Истина;
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Истина;
		//--
		ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости    = Ложь;
		ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	//КонецЕсли;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.СписаниеМатериаловНаЗатраты);
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПроизводствоПродукции);
	//ПараметрыУказанияСерий.ПоляСвязи.Добавить("Склад");
	//ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	//ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	//ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Соглашение");
	//ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("ПоступлениеПоЗаказам");
	//ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_ЗаказПоставщику");
	//ПараметрыУказанияСерий.ОперацияДокумента = Объект.ХозяйственнаяОперация;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата                         КАК Период,
	|	ДанныеШапки.Номер                        КАК Номер,
	|	ДанныеШапки.Ссылка                       КАК Ссылка,
	|	ДанныеШапки.Организация                  КАК Организация,
	|	ДанныеШапки.Подразделение                КАК Подразделение,
	|	ДанныеШапки.Подразделение.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|	НЕОПРЕДЕЛЕНО	 						 КАК Сделка,
	|	 ЛОЖЬ									 КАК ОбособленныйУчетТоваровПоСделке,
	|	ЛОЖЬ					                  КАК ЗаказНаСборку,
	|	ДанныеШапки.Дата             			КАК ДатаРаспоряжения,
	|	ДанныеШапки.Склад                        КАК Склад,
	|	ДанныеШапки.СкладБрак					КАК СкладБрак,	
	|	//ДанныеШапки.Номенклатура                 КАК Номенклатура,
	|	//ДанныеШапки.Характеристика               КАК Характеристика,
	|	//ДанныеШапки.Назначение                   КАК Назначение,
	|	//ДанныеШапки.Серия                        КАК Серия,
	|	//ДанныеШапки.Статус                       КАК Статус,
	|	НЕОПРЕДЕЛЕНО        КАК СборкаПодДеятельность,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗАпасов.ПУстаяссылка)                   КАК ВидЗапасовИзШапки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасовИзШапки,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И ДанныеШапки.Дата >= ДанныеШапки.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ОрдернаяСхемаПриОтгрузке,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И ДанныеШапки.Дата >= ДанныеШапки.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ОрдернаяСхемаПриПоступлении,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	//(ВЫБОР ДанныеШапки.НоменклатураОсновногоКомпонента
	|	//	КОГДА ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка) ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ) КАК УказанОсновнойКомпонент,
	|	//ДанныеШапки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеШапки.Ответственный          КАК Ответственный,
	|	ДанныеШапки.Комментарий            КАК Комментарий,
	|	ДанныеШапки.ПометкаУдаления        КАК ПометкаУдаления,
	|	ДанныеШапки.Проведен               КАК Проведен,
	|	ДанныеШапки.ДокументОснование		КАК ДокументОснование
	|ИЗ
	|	Документ.вт_ОтчетПроизводства КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
//	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено);

	Запрос.УстановитьПараметр("Склад",                          Реквизиты.Склад);
	Запрос.УстановитьПараметр("Склад",                          Реквизиты.СкладБрак);

	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
//	Запрос.УстановитьПараметр("Статус",                         Реквизиты.Статус);
	Запрос.УстановитьПараметр("ДатаРаспоряжения",               Реквизиты.ДатаРаспоряжения);
//	Запрос.УстановитьПараметр("Серия",                          Реквизиты.Серия);
	Запрос.УстановитьПараметр("Организация",                    Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",                  Реквизиты.Подразделение);
	//Запрос.УстановитьПараметр("ЗаказНаСборку",                  Реквизиты.ЗаказНаСборку);
	//Запрос.УстановитьПараметр("СборкаПоЗаказу",                 ЗначениеЗаполнено(Реквизиты.ЗаказНаСборку));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",          Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриОтгрузке",       Реквизиты.ОрдернаяСхемаПриОтгрузке);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриПоступлении",    Реквизиты.ОрдернаяСхемаПриПоступлении);
	//Запрос.УстановитьПараметр("ВидЗапасовИзШапки",              Реквизиты.ВидЗапасовИзШапки);
	Запрос.УстановитьПараметр("ТипЗапасовИзШапки",              Реквизиты.ТипЗапасовИзШапки);
	//Запрос.УстановитьПараметр("СборкаПодДеятельность",          Реквизиты.СборкаПодДеятельность);
	//Запрос.УстановитьПараметр("УказанОсновнойКомпонент",        Реквизиты.УказанОсновнойКомпонент);
	//Запрос.УстановитьПараметр("УказанОсновнойКомпонент",        Реквизиты.УказанОсновнойКомпонент);
	//Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));

	//Запрос.УстановитьПараметр("Назначение",                     Реквизиты.Назначение);
	//Запрос.УстановитьПараметр("Номенклатура",                   Реквизиты.Номенклатура);
	//Запрос.УстановитьПараметр("Характеристика",                 Реквизиты.Характеристика);
	//Запрос.УстановитьПараметр("НаправлениеДеятельности",        Реквизиты.НаправлениеДеятельности);
	//Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением", НакладнаяЯвляетсяРаспоряжением);
	
	Запрос.УстановитьПараметр("Номер",                          Реквизиты.Номер);
	//Запрос.УстановитьПараметр("НомерНаПечать",                  ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Ответственный",                  Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",        ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.вт_ОтчетПроизводства"));
	Запрос.УстановитьПараметр("Комментарий",                    Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("ПометкаУдаления",                Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен",                       Реквизиты.Проведен);
	//Запрос.УстановитьПараметр("ИспользуетсяНазначение",         ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
	//УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
	Возврат Реквизиты;

КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов     КАК ВидЗапасов
	|   //,
	|	//ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов 
	|		И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика 
	|		//И ТаблицаТовары.НомерГТД = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	(ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|   //,
	|	//ТаблицаТовары.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()

Функция ТекстЗапросаТаблицаТоварыОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	//ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|   ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияОтгрузки,
	|	Истина КАК Первичное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиАналитики.Характеристика
	|			И (ТаблицаТовары.Склад = КлючиАналитики.МестоХранения)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Номенклатура,
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Характеристика,
	|   СправочникТоварСобственный.Ссылка,
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Количество,
	|	КлючиАналитики.КлючАналитики,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров) КАК ХозяйственнаяОперация,
	|   СправочникТоварСобственный.Ссылка КАК КорВидЗапасов,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	Ложь КАК Первичное 
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.вт_ПроизводствоСырье КАК вт_ОтчетПроизводствавт_ПроизводствоСырье
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникТоварСобственный ПО СправочникТоварСобственный.Наименование=""Собственный товар""
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО вт_ОтчетПроизводствавт_ПроизводствоСырье.Номенклатура = КлючиАналитики.Номенклатура
	|			И (&Склад = КлючиАналитики.МестоХранения)	
	|ГДЕ
	|	вт_ОтчетПроизводствавт_ПроизводствоСырье.Ссылка = &Ссылка
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|
	|ВЫБРАТЬ
	|	вт_БракДробленка.НомерСтроки, 
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период,
	|	&Организация КАК Организация,
	|	&СкладБрак,
	|	вт_БракДробленка.Дробленка,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|   СправочникТоварСобственный.Ссылка,
	|	вт_БракДробленка.Количество,
	|	КлючиАналитики.КлючАналитики,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|   ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,      
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияОтгрузки,
	|	Истина КАК Первичное
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.вт_БракДробленка КАК вт_БракДробленка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникТоварСобственный ПО СправочникТоварСобственный.Наименование=""Собственный товар""
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО вт_БракДробленка.Дробленка = КлючиАналитики.Номенклатура
	|			И (&СкладБрак = КлючиАналитики.МестоХранения)	
	|ГДЕ
	|	вт_БракДробленка.Ссылка = &Ссылка	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыОрганизаций()

Функция ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период 						КАК Период,
	|	ТаблицаТовары.Номенклатура 		КАК Номенклатура,
	|	ТаблицаТовары.Характеристика 	КАК Характеристика,
	|	&Ссылка 						КАК Регистратор
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.Сумма КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ((ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СтоимостьРегл,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура, 
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиАналитики.Характеристика
	|			И (ТаблицаТовары.Склад = КлючиАналитики.МестоХранения)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ТоварыПроизводствоСырье.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Организация,
	|	КлючиАналитики.КлючАналитики,
	|	СправочникТоварСобственный.Ссылка,
	|	ПартииТоваровОрганизацийОстатки.АналитикаУчетаПартий,
	|	ПартииТоваровОрганизацийОстатки.ДокументПоступления,
	|	ТоварыПроизводствоСырье.Количество,
	|	ПартииТоваровОрганизацийОстатки.СтоимостьОстаток,
	|	ПартииТоваровОрганизацийОстатки.СтоимостьБезНДСОстаток,
	|	ПартииТоваровОрганизацийОстатки.СтоимостьРеглОстаток,
	|	ТоварыПроизводствоСырье.Номенклатура,
	|ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров)
	|ИЗ
	|Документ.вт_ОтчетПроизводства.вт_ПроизводствоСырье КАК ТоварыПроизводствоСырье
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТоварыПроизводствоСырье.Номенклатура = КлючиАналитики.Номенклатура
	|			И (&Склад = КлючиАналитики.МестоХранения)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникТоварСобственный
	|		ПО (СправочникТоварСобственный.Наименование = ""Собственный товар"")
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&Период, ) КАК ПартииТоваровОрганизацийОстатки
	|		ПО (ТоварыПроизводствоСырье.Номенклатура = ПартииТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура
	|			И СправочникТоварСобственный.Ссылка = ПартииТоваровОрганизацийОстатки.ВидЗапасов
	|				И ТоварыПроизводствоСырье.Ссылка.Организация = ПартииТоваровОрганизацийОстатки.Организация)
	|ГДЕ
	|	ТоварыПроизводствоСырье.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|
	|ВЫБРАТЬ     //Формирование остатка по дробленке, которая получается в результате брака
	|	вт_БракДробленка.номерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Организация,
	|	КлючиАналитики.КлючАналитики,
	|	СправочникТоварСобственный.Ссылка,
	|	вт_БракДробленка.АналитикаУчетаПартий,
	|	&Ссылка,
    |	вт_БракДробленка.Количество,
	|	ВЫБОР КОГДА ПартииТоваровОрганизацийОстатки.КоличествоОстаток>0 ТОГДА
  	|	 вт_БракДробленка.Количество * ПартииТоваровОрганизацийОстатки.СтоимостьОстаток/ПартииТоваровОрганизацийОстатки.КоличествоОстаток
	|	ИНАЧЕ 0 КОНЕЦ,
	|	ВЫБОР КОГДА ПартииТоваровОрганизацийОстатки.КоличествоОстаток>0 ТОГДА
	|		вт_БракДробленка.Количество * ПартииТоваровОрганизацийОстатки.СтоимостьБезНДСОстаток/ПартииТоваровОрганизацийОстатки.КоличествоОстаток
	|	ИНАЧЕ 0 КОНЕЦ,
	|	ВЫБОР КОГДА ПартииТоваровОрганизацийОстатки.КоличествоОстаток>0 ТОГДА
	|		вт_БракДробленка.Количество * ПартииТоваровОрганизацийОстатки.СтоимостьРеглОстаток/ПартииТоваровОрганизацийОстатки.КоличествоОстаток
	|	ИНАЧЕ 0 КОНЕЦ,
	|	вт_БракДробленка.Дробленка,
	|ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров)
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.вт_БракДробленка КАК вт_БракДробленка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО вт_БракДробленка.Дробленка = КлючиАналитики.Номенклатура
	|			И (&СкладБрак = КлючиАналитики.МестоХранения)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникТоварСобственный
	|		ПО (СправочникТоварСобственный.Наименование = ""Собственный товар"")
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&Период, ) КАК ПартииТоваровОрганизацийОстатки
	|		ПО (вт_БракДробленка.ГотоваяПродукция = ПартииТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура //Остаток определяем по готовой продукции, что бы из него получить стоимость
	|			И СправочникТоварСобственный.Ссылка = ПартииТоваровОрганизацийОстатки.ВидЗапасов
	|				И вт_БракДробленка.Ссылка.Организация = ПартииТоваровОрганизацийОстатки.Организация)
	|ГДЕ
	|	вт_БракДробленка.Ссылка = &Ссылка	
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";

	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыОрганизаций()

Функция ТекстЗапросаВтЗаказВПроизводство()
	текстЗапроса = "ВЫБРАТЬ
	               |	&Период КАК Период,
	               |	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	               |	вт_ЗаказВПроизводствоОстатки.Организация,
	               |	вт_ЗаказВПроизводствоОстатки.Склад,
	               |	вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства,
	               |	вт_ЗаказВПроизводствоОстатки.Номенклатура,
	               |	вт_ЗаказВПроизводствоОстатки.Характеристика,
	               |	вт_ЗаказВПроизводствоОстатки.ТребуемаяДата,
	               |	вт_ЗаказВПроизводствоОстатки.КоличествоОстаток КАК Количество
				   |ИЗ
	               |	РегистрНакопления.вт_ЗаказВПроизводство.Остатки(КОНЕЦПЕРИОДА(&Период, ДЕНЬ), ) КАК вт_ЗаказВПроизводствоОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаТовары КАК ТаблицаТовары
	               |		ПО (вт_ЗаказВПроизводствоОстатки.Организация = &Организация)
	               |			И (вт_ЗаказВПроизводствоОстатки.Склад = &Склад)
	               |			И (ТаблицаТовары.Номенклатура = вт_ЗаказВПроизводствоОстатки.Номенклатура)
	               |			И (ТаблицаТовары.ДокументОснование = вт_ЗаказВПроизводствоОстатки.ЗаказПроизводства)
				   |;
				   |/////////////////////////////////////////////////////////////////////////////
				   |";
						  
						  
	Возврат текстЗапроса;					  
КонецФункции

Функция  вт_ПолучитьТаблицуВыпускаПоСменам(ДокументСсылка)
	   Запрос=Новый Запрос("ВЫБРАТЬ
	                       |	вт_ОтчетПроизводстваТовары.Характеристика КАК ХарактеристикаНоменклатуры,
	                       |	вт_ОтчетПроизводстваТовары.Ссылка.СменаБригада КАК СменаБригада,
	                       |	вт_ОтчетПроизводстваТовары.Номенклатура,
	                       |	СУММА(вт_ОтчетПроизводстваТовары.БракКолВо) КАК КоличествоБрак,
	                       |	СУММА(вт_ОтчетПроизводстваТовары.КоличествоПлан) КАК КоличествоВсего,
	                       |	вт_ОтчетПроизводстваТовары.Ссылка.Дата КАК Период,
	                       |	вт_ОтчетПроизводстваТовары.Ссылка.Организация
	                       |ИЗ
	                       |	Документ.вт_ОтчетПроизводства.Товары КАК вт_ОтчетПроизводстваТовары
	                       |ГДЕ
	                       |	вт_ОтчетПроизводстваТовары.Ссылка = &Ссылка
	                       |	И вт_ОтчетПроизводстваТовары.Ссылка.СменаБригада <> значение(Справочник.вт_РабочиеСмены.пустаяСсылка)
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	вт_ОтчетПроизводстваТовары.Характеристика,
	                       |	вт_ОтчетПроизводстваТовары.Ссылка.СменаБригада,
	                       |	вт_ОтчетПроизводстваТовары.Номенклатура,
	                       |	вт_ОтчетПроизводстваТовары.Ссылка.Дата,
	                       |	вт_ОтчетПроизводстваТовары.Ссылка.Организация");
						   
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Возврат ЗАпрос.Выполнить().Выгрузить();
	
						   
КонецФункции	

Функция ТекстЗапросаВтВыпускПродукции()
	текстЗапроса = "ВЫБРАТЬ
	               |	&Период КАК Период,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	               |	вт_ОтчетПроизводстваТовары.Ссылка.Организация КАК Организация,
	               |	вт_ОтчетПроизводстваТовары.Номенклатура КАК Номенклатура,
	               |	вт_ОтчетПроизводстваТовары.Характеристика КАК Характеристика,
	               |	вт_ОтчетПроизводстваТовары.Характеристика КАК ХарактеристикаНоменклатуры,
	               |	вт_ОтчетПроизводстваТовары.ВариантПроизводства КАК ВариантПроизводства,
	               |	СУММА(вт_ОтчетПроизводстваТовары.КоличествоПлан) КАК Количество,
	               |	СУММА(вт_ОтчетПроизводстваТовары.ВремяПроизводстваШтФакт) КАК ВремяФактСек,
				   |	СУММА(вт_ОтчетПроизводстваТовары.ВесОбщий) КАК Вес
	               |ИЗ
	               |	Документ.вт_ОтчетПроизводства.Товары КАК вт_ОтчетПроизводстваТовары
	               |ГДЕ
	               |	вт_ОтчетПроизводстваТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_ОтчетПроизводстваТовары.Номенклатура,
	               |	вт_ОтчетПроизводстваТовары.Характеристика,
	               |	вт_ОтчетПроизводстваТовары.ВариантПроизводства,
	               |	вт_ОтчетПроизводстваТовары.Ссылка.Организация,
	               |	вт_ОтчетПроизводстваТовары.Характеристика,
	               |	вт_ОтчетПроизводстваТовары.ВремяПроизводстваШтФакт;"; 
						  
	Возврат текстЗапроса;					  
КонецФункции

Функция ТекстЗапросаВтСырьеВыпускаПродукции()
	текстЗапроса = "ВЫБРАТЬ
	               |	&Период КАК Период,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Ссылка.Организация,
				   |	вт_ОтчетПроизводстваТовары.Номенклатура КАК ГотоваяПродукция,
				   |	вт_ОтчетПроизводстваТовары.Характеристика,
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Номенклатура КАК Номенклатура,
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Характеристика КАК ХарактеристикаНоменклатуры,
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Серия,
	               |	ЕСТЬNULL(вт_ОтчетПроизводстваТовары.ВариантПроизводства, ЗНАЧЕНИЕ(Справочник.вт_ВариантыПроизводстваПоТехКартам.ПустаяСсылка)) КАК ВариантПроизводства,
	               |	СУММА(вт_ОтчетПроизводствавт_ПроизводствоСырье.Количество) КАК Количество
	               |ИЗ
	               |	Документ.вт_ОтчетПроизводства.вт_ПроизводствоСырье КАК вт_ОтчетПроизводствавт_ПроизводствоСырье
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вт_ОтчетПроизводства.Товары КАК вт_ОтчетПроизводстваТовары
	               |		ПО вт_ОтчетПроизводствавт_ПроизводствоСырье.Ссылка = вт_ОтчетПроизводстваТовары.Ссылка
	               |			И вт_ОтчетПроизводствавт_ПроизводствоСырье.ГотоваяПродукция = вт_ОтчетПроизводстваТовары.Номенклатура
	               |			И вт_ОтчетПроизводствавт_ПроизводствоСырье.КлючСвязиСтроки = вт_ОтчетПроизводстваТовары.КодСтроки
	               |ГДЕ
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вт_ОтчетПроизводстваТовары.Номенклатура,
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Номенклатура,
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Ссылка.Организация,
	               |	вт_ОтчетПроизводстваТовары.ВариантПроизводства,
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Характеристика,
				   |	вт_ОтчетПроизводстваТовары.Характеристика,
	               |	вт_ОтчетПроизводствавт_ПроизводствоСырье.Серия;"; 

	Возврат текстЗапроса;					  
КонецФункции

Функция ТекстЗапросаТаблицаТоварыВБракОрганизаций()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	//ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Количество,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиАналитики.Характеристика
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|	ТаблицаТовары.БракКолВо КАК Количество,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.вт_ПроизводствоСырье КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.БракКолВо > 0;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаТоварыВБракОрганизаций()

Функция ТекстЗапросаТаблицаПартииТоваровОрганизацийДляБрака()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	КлючиАналитики.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.Сумма КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ((ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СтоимостьРегл,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура, 
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиАналитики.Характеристика
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";

	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаПартииТоваровОрганизацийДляБрака()

Процедура ИнициализироватьДанныеДокументаДляБрака(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.СкладБрак КАК Склад,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов
	|ИЗ
	|	Документ.вт_ОтчетПроизводства КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	//ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты);
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Константы.ВалютаУправленческогоУчета.Получить(), Неопределено, Реквизиты.Период);

	Запрос.УстановитьПараметр("Период",                                  Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",                                   Реквизиты.Склад);
	Запрос.УстановитьПараметр("ТипЗапасов",                              Реквизиты.ТипЗапасов);
	Запрос.УстановитьПараметр("Организация",                             Реквизиты.Организация);
	//Запрос.УстановитьПараметр("СтатьяДоходов",                           Реквизиты.СтатьяДоходов);
	//Запрос.УстановитьПараметр("АналитикаДоходов",                        Реквизиты.АналитикаДоходов);
	Запрос.УстановитьПараметр("Подразделение",                           Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                   Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	Запрос.УстановитьПараметр("ДокументОснование",                       Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ПоОснованию",                             ЗначениеЗаполнено(Реквизиты.ДокументОснование));
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",         Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("Валюта",                                  Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",          Константы.ВалютаРегламентированногоУчета.Получить());
	//Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	//Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",
	//                          ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач",
	//						                              Новый Структура("Склад",Реквизиты.Склад)));

	Запрос.Текст = " 
	//0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.БракКолВо КАК Количество,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Склад КАК Склад,
	|   ТаблицаТовары.вт_Заказ КАК ВТ_ЗАКАЗ
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.БракКолВо>0
	|
	|ОБЪЕДИНИТЬ ВСЕ 
	|//++ Для учета на браке отходных материадов //--
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.МатериалОтхода КАК Номенклатура,
	|	ТаблицаТовары.МатериалОтхода.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.ОбъемОтхода КАК Количество,
	|	ТаблицаТовары.ОбъемОтхода * ТаблицаТовары.Сумма/ТаблицаТовары.КоличествоПлан КАК Сумма,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Склад КАК Склад,
	|   ТаблицаТовары.вт_Заказ КАК ВТ_ЗАКАЗ 	
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.ОбъемОтхода>0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//1 ТаблицаТоварыКОформлениюИзлишковНедостач
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&ДокументОснование КАК ДокументОснование,
	|	ТаблицаТовары.БракКолВо КАК КОформлениюАктов
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка И ТаблицаТовары.БракКолВо>0
	|	И &ПоОснованию
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|////////////////////////////////////////////////////////////////////////////////
	//3 ТаблицаТоварыНаСкладах, ТаблицаСвободныеОстатки 
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.БракКолВо КАК ВНаличии
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	//++ И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач) //--
	|	И ТаблицаТовары.БракКолВо>0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.МатериалОтхода,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ТаблицаТовары.ОбъемОтхода КАК ВНаличии
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.ОбъемОтхода>0
	|
	|	;";
	
	Запрос.Текст = Запрос.Текст
		+ ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций()
		+ ТекстЗапросаТаблицаТоварыВБракОрганизаций()
		//+ ТекстЗапросаТаблицаСебестоимостьТоваровБрака()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизацийПоследовательность()
		+ ТекстЗапросаТаблицаПартииТоваровОрганизацийДляБрака();
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	// Результат[0] - ВтТаблицаТовары
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОформлениюИзлишковНедостач", 			Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах",                   			Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСвободныеОстатки",                  			Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДатыПоступленияТоваровОрганизаций", 			Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций",                 			Результат[5].Выгрузить());
	//ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьТоваров",              			Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизацийПоследовательность",	Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПартииТоваровОрганизаций",						Результат[7].Выгрузить());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Печать

Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияЗаказов(КомандыОтчетов);

КонецПроцедуры	

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОбОприходованииТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктОбОприходованииТоваров",
				"Акт об оприходовании товаров",
				ПечатьАктаОбОприходованииТоваров(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;

КонецПроцедуры

Функция ПечатьАктаОбОприходованииТоваров(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Склад КАК Склад,
	|	Документ.Подразделение КАК Подразделение,
	|	Документ.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	Документ.Организация.Префикс КАК Префикс,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ДокументОснование КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(Документ.ДокументОснование) КАК ОснованиеПредставление,
	|	Документ.ДокументОснование.Номер КАК НомерОснования,
	|	Документ.ДокументОснование.Дата КАК ДатаОснования
	|ИЗ
	|	Документ.вт_ОтчетПроизводства КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|   Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	" + ?(ВыводитьДопКолонку, "ТаблицаТовары.Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";

	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента = НСтр("ru='Акт об оприходовании товаров'");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_вт_ОтчетПроизводства_АктОбОприходованиеИзлишковТоваров";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.вт_ОтчетПроизводства.ПФ_MXL_АктОбОприходованиеИзлишковТоваров");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьОснование  = Макет.ПолучитьОбласть("Основание");

	ОбластьНомераШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодовШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьТоварШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	ОбластьДанныеШапка = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");

	Если Не ВыводитьДопКолонку Тогда

		Макет.Область("Товар").ШиринаКолонки = Макет.Область("Товар").ШиринаКолонки
				+ Макет.Область("КолонкаКодов").ШиринаКолонки;

	КонецЕсли;

	ОбластьНомераСтрока = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодовСтрока  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьТоварСтрока  = Макет.ПолучитьОбласть("Строка|Товар");
	ОбластьДанныхСтрока = Макет.ПолучитьОбласть("Строка|Данные");

	ОбластьНомераПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
	ОбластьКодовПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	ОбластьТоварПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
	ОбластьДанныхПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");

	ОбластьПодписи       = Макет.ПолучитьОбласть("Подписи");
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоТабличнымЧастям = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		// Выводим шапку накладной.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ОбластьЗаголовок.Параметры.СкладПредставление = СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаДокументы.СкладПредставление);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);

		Если ЗначениеЗаполнено(ВыборкаДокументы.ДокументОснование) Тогда
			РеквизитыОснования = Новый Структура("Номер, Дата, Префикс", ВыборкаДокументы.НомерОснования, ВыборкаДокументы.ДатаОснования);
			ПредставлениеОснования 	= ВыборкаДокументы.ДокументОснование.ПолучитьОбъект().Метаданные().Синоним;				
			ОбластьОснование.Параметры.ОснованиеПредставление = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыОснования, ПредставлениеОснования);
			ТабДокумент.Вывести(ОбластьОснование);
		КонецЕсли;
		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьНомераШапка);

		Если ВыводитьДопКолонку Тогда

			ОбластьКодовШапка.Параметры.ДопКолонка = ДопКолонка;
			ТабДокумент.Присоединить(ОбластьКодовШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварШапка);

		ТабДокумент.Присоединить(ОбластьДанныеШапка);

		СуммаВсего = 0;
		ВсегоНаименований = 0;

		// Вывод строк.
		ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаДокументы.Ссылка));
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			ОбластьНомераСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Вывести(ОбластьНомераСтрока);

			Если ВыводитьДопКолонку Тогда

				ОбластьКодовСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварСтрока.Параметры.Номенклатура = ВыборкаПоСтрокам.Номенклатура;
			ОбластьТоварСтрока.Параметры.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокам.НоменклатураПредставление,
				ВыборкаПоСтрокам.ХарактеристикаПредставление
			);
			
			ТабДокумент.Присоединить(ОбластьТоварСтрока);
			
			// Данные о ценах, количестве.
			ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			ТабДокумент.Присоединить(ОбластьДанныхСтрока);

			СуммаВсего = СуммаВсего + ВыборкаПоСтрокам.Сумма;
			ВсегоНаименований = ВсегоНаименований + 1;

		КонецЦикла;

		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьНомераПодвалТаблицы);
		Если ВыводитьДопКолонку Тогда
			ТабДокумент.Присоединить(ОбластьКодовПодвалТаблицы);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварПодвалТаблицы);
		ТабДокумент.Присоединить(ОбластьДанныхПодвалТаблицы);

		// Вывод Суммы прописью.
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаВсего, ВалютаУпр);
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %СуммаВсего% %ВалютаУпр%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%СуммаВсего%", Формат(СуммаВсего, "ЧЦ=15; ЧДЦ=2"));
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВалютаУпр%", Строка(ВалютаУпр));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;

		ТабДокумент.Вывести(ОбластьСуммаПрописью);

		// Вывод подписей.
		ОбластьПодписи.Параметры.Ответственный = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.Ответственный);
		ОбластьПодписи.Параметры.Кладовщик = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.Кладовщик);		
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;

КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(ОприходованиеИзлишковТоваров.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОприходованиеИзлишковТоваров.Склад) КАК СкладПредставление,
	|	"""" КАК ПомещениеПредставление,
	|	ОприходованиеИзлишковТоваров.Ссылка КАК Ссылка,
	|	ОприходованиеИзлишковТоваров.Дата КАК Дата,
	|	ОприходованиеИзлишковТоваров.Номер КАК Номер,
	|	ЛОЖЬ КАК СкладыВТЧ,
	|	NULL КАК ВидОперации,
	|	ОприходованиеИзлишковТоваров.Склад.ИспользоватьАдресноеХранениеСправочно КАК ИспользуетсяСправочноеХранение,
	|	ОприходованиеИзлишковТоваров.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК НарушенаОрдернаяСхема
	|ИЗ
	|	Документ.вт_ОтчетПроизводства КАК ОприходованиеИзлишковТоваров
	|ГДЕ
	|	ОприходованиеИзлишковТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	РазмещениеОсновнаяЯчейка.Ячейка.Код КАК ОсновнаяЯчейкаПредставление,
	|	РазмещениеОстальныеЯчейки.Ячейка.Код КАК ЯчейкаПредставление,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	"""" КАК ПредставлениеСерии,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка
	|ИЗ
	|	Документ.вт_ОтчетПроизводства.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И (НЕ ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|	И ТаблицаТовары.Ссылка.Склад.ИспользоватьАдресноеХранениеСправочно
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПорядокОбхода,
	|	ОсновнаяЯчейкаПредставление,
	|	ПредставлениеНоменклатуры,
	|	ПредставлениеХарактеристики,
	|	ПорядокОбходаДополнительнаяЯчейка,
	|	ЯчейкаПредставление
	|ИТОГИ ПО
	|	Ссылка,
	|	РабочийУчасток,
	|	ОсновнаяЯчейка,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Упаковка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецЕсли


// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Склад КАК Склад,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Склад КАК Склад,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад КАК Склад,
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Назначение КАК Назначение,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад КАК Склад,
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Назначение КАК Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА &ТолькоСерииДляСебестоимости
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|				И &ПланированиеОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И НЕ(Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|						И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке)
	|				И &ФактОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКлиенту
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Склад = СерииДляЗапроса.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

