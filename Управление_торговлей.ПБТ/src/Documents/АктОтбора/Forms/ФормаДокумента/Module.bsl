
&НаКлиенте
Процедура ТЧ_ОбразцыПриАктивизацииСтроки(Элемент)
	
	Данные = Элементы.ТЧ_Образцы.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;  
	//устанавливаем идентификатор если он пустой
	Если НЕ ЗначениеЗаполнено(Данные.ИдентификаторСтрОбразцы) Тогда 
		Данные.ИдентификаторСтрОбразцы = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	//устанавливаем отбор в подчиненных табличных частях
	Элементы.ТЧ_ВидыИсследований.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторСтрокиТЧОбразцы", Данные.ИдентификаторСтрОбразцы);
	
	ДанныеВИ = Элементы.ТЧ_ВидыИсследований.ТекущиеДанные;
	Если НЕ ДанныеВИ = Неопределено Тогда
		Элементы.Показатели.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторСтрокиТЧИсследований", ДанныеВИ.ИдентификаторСтроки);
	КонецЕсли;  
		
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ОбразцыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	//Данные = Элементы.ТЧ_Образцы.ТекущиеДанные;
	//Если НоваяСтрока Тогда 
	//	Данные.ИдентификаторСтрОбразцы = Новый УникальныйИдентификатор;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ВидыИсследованийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	//Данные = Элементы.ТЧ_Образцы.ТекущиеДанные;
	//ТекДанные = Элементы.ТЧ_ВидыИсследований.ТекущиеДанные;
	//Если НоваяСтрока Тогда
	//	ТекДанные.ИдентификаторСтрокиТЧОбразцы = Данные.ИдентификаторСтрОбразцы;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ОбразцыПередУдалением(Элемент, Отказ)
	Данные = Элементы.ТЧ_Образцы.ТекущиеДанные;
	Отбор = Новый Структура("ИдентификаторСтрокиТЧОбразцы",Данные.ИдентификаторСтрОбразцы);
	Масс = Объект.ТЧ_ВидыИсследований.НайтиСтроки(Отбор);
	Для каждого Строка из Масс Цикл
		Объект.ТЧ_ВидыИсследований.Удалить(Строка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ВидыИсследованийПриАктивизацииСтроки(Элемент)
	
	ДанныеВИ = Элементы.ТЧ_ВидыИсследований.ТекущиеДанные;
	Если ДанныеВИ = Неопределено Тогда
		Возврат;
	КонецЕсли;  
	//устанавливаем идентификатор если он пустой
	Если НЕ ЗначениеЗаполнено(ДанныеВИ.ИдентификаторСтроки) Тогда 
		ДанныеВИ.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		
		Данные = Элементы.ТЧ_Образцы.ТекущиеДанные;
		ДанныеВИ.ИдентификаторСтрокиТЧОбразцы = Данные.ИдентификаторСтрОбразцы;
	КонецЕсли;
	
	//устанавливаем отбор в подчиненных табличных частях
	Элементы.Показатели.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторСтрокиТЧИсследований", ДанныеВИ.ИдентификаторСтроки);

КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ВидыИсследованийПередУдалением(Элемент, Отказ)
	
	ДанныеВИ = Элементы.ТЧ_Образцы.ТекущиеДанные;
	Отбор = Новый Структура("ИдентификаторСтрокиТЧИсследований",ДанныеВИ.ИдентификаторСтроки);
	Масс = Объект.Показатели.НайтиСтроки(Отбор);
	Для каждого Строка из Масс Цикл
		Объект.Показатели.Удалить(Строка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиПриАктивизацииСтроки(Элемент)
	
	ДанныеВИ = Элементы.ТЧ_ВидыИсследований.ТекущиеДанные;
	Если ДанныеВИ = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДанныеПок = Элементы.Показатели.ТекущиеДанные;
	Если ДанныеПок = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//устанавливаем идентификатор ВИ если он пустой
	Если НЕ ЗначениеЗаполнено(ДанныеПок.ИдентификаторСтрокиТЧИсследований) Тогда 
		ДанныеПок.ИдентификаторСтрокиТЧИсследований = ДанныеВИ.ИдентификаторСтроки;
		ДанныеПок.ВидИсследования = ДанныеВИ.ВидИсследования;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Первоначальное заполнение объекта.
	Если Параметры.Ключ.Пустая() Тогда
		
		//Объект.Организация = Справочники.Организации.НайтиПоРеквизиту("ИНН", ""); 
		Объект.ДатаСоздания = ТекущаяДатаСеанса();
		
		Объект.Пользователь = Пользователи.ТекущийПользователь(); 
		Для каждого СтрВИ Из Объект.ТЧ_ВидыИсследований Цикл
		    СтрВИ.Образец = "";
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ОбразцыПартияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//СерияНачалоВыбораНаСервере(Элемент);
	НачалоВыбораСерии();
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСерии()

	ТекСтрока = Элементы.ТЧ_Образцы.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура("Номенклатура, Серия, Склад, ИдентификаторСтроки", Объект.Номенклатура, ТекСтрока.Серия, ,ТекСтрока.ПолучитьИдентификатор());
	ОповещениеОЗакрытие = Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораСерии", ЭтотОбъект);
	ПараметрыОткрытияФормы = Новый Структура("Уникальность, Окно, НавигационнаяСсылка, Владелец", Ложь);
	
	ОткрытьФорму("Документ.МаршрутныйЛист.Форма.ФормаВыбораСерии", ПараметрыФормы,
	ПараметрыОткрытияФормы.Владелец, ПараметрыОткрытияФормы.Уникальность,
	ПараметрыОткрытияФормы.Окно, ПараметрыОткрытияФормы.НавигационнаяСсылка, ОповещениеОЗакрытие);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗакрытияФормыВыбораСерии(СтрукПараметров, ДополнительныеПараметры)
	
	Если НЕ СтрукПараметров = неопределено Тогда
		Если СтрукПараметров.Свойство("ИдентификаторСтроки") Тогда
			ТекущаяСтрока = Объект.ТЧ_Образцы.НайтиПоИдентификатору(СтрукПараметров.ИдентификаторСтроки);
			Если СтрукПараметров.Свойство("Серия") Тогда
				ТекущаяСтрока.Серия = СтрукПараметров.Серия;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если Не ЗначениеЗаполнено(Объект.ПервыйПровел) Тогда
			ЗаполнитьПервогоПровел();
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПервогоПровел()
	Объект.ПервыйПровел = Пользователи.ТекущийПользователь();
КонецПроцедуры

&НаКлиенте
Процедура ТЧ_ОбразцыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	// Вставить содержимое обработчика.
КонецПроцедуры
 


