
&НаКлиенте
&ИзменениеИКонтроль("РасхожденияПриАктивизацииЯчейки")
Процедура Р1_РасхожденияПриАктивизацииЯчейки(Элемент)

	СтрокаТаблицы = Элементы.Расхождения.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Элемент.ТекущийЭлемент <> Неопределено
		И Элемент.ТекущийЭлемент = Элементы.РасхожденияВариантОтражения Тогда

		СписокВыбора = Элементы.РасхожденияВариантОтражения.СписокВыбора;
		СписокВыбора.Очистить();

		Если СтрокаТаблицы.КоличествоУпаковок > 0 Тогда
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах"));
			Если СтрокаТаблицы.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач Тогда
				#Удаление
				СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализациюУчестьПриИнвентаризации"));
				#КонецУдаления
				#Вставка
				СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализациюУменьшитьСкладскиеОстатки"));
				#КонецВставки
			ИначеЕсли СтрокаТаблицы.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
				СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьВыручку"));
			Иначе
				СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализациюУменьшитьСкладскиеОстатки"));
			КонецЕсли;
		ИначеЕсли СтрокаТаблицы.КоличествоУпаковок < 0 Тогда
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы"));
			Если СтрокаТаблицы.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач Тогда
				#Удаление
				СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУчестьПриИнвентаризации"));
				#КонецУдаления
				#Вставка
				СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУвеличитьСкладскиеОстатки"));
				#КонецВставки
			ИначеЕсли СтрокаТаблицы.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
				СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьВыручку"));
			Иначе
				СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУвеличитьСкладскиеОстатки"));
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры


// в корректировке реализации ставилось учесть при инвентаризации
// поставил отразить на складе. сысла делать инвентаризацию после каждой корректировки поступления реализации нету
&НаКлиенте
&ИзменениеИКонтроль("УстановитьВариантыОтражения")
Процедура Р1_УстановитьВариантыОтражения(ИмяТЧ)

	ЕстьУвеличениеКоличестваПоОрдерномуСкладу = Ложь;
	ЕстьУвеличениеКоличестваБезИнвентаризации = Ложь;
	ЕстьУменьшениеКоличестваПоОрдерномуСкладу = Ложь;
	ЕстьУменьшениеКоличестваБезИнвентаризации = Ложь;
	ЕстьУвеличениеВыручки = Ложь;
	ЕстьУменьшениеВыручки = Ложь;

	Для Каждого СтрокаТЧ Из Объект[ИмяТЧ] Цикл

		Если (СтрокаТЧ.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар")
			Или СтрокаТЧ.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара")
			Или СтрокаТЧ.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа")) Тогда

			Если (СтрокаТЧ.КоличествоУпаковок > 0 И Объект.ВидКорректировки <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратНедопоставленногоТовара")) Тогда
				Если СтрокаТЧ.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач Тогда
					ЕстьУвеличениеКоличестваПоОрдерномуСкладу = Истина;
				ИначеЕсли СтрокаТЧ.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
					ЕстьУвеличениеВыручки = Истина;
				Иначе
					ЕстьУвеличениеКоличестваБезИнвентаризации = Истина;
				КонецЕсли;	
			ИначеЕсли (СтрокаТЧ.КоличествоУпаковок < 0 Или Объект.ВидКорректировки = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратНедопоставленногоТовара")) Тогда	
				Если СтрокаТЧ.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач Тогда
					ЕстьУменьшениеКоличестваПоОрдерномуСкладу = Истина;
				ИначеЕсли СтрокаТЧ.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
					ЕстьУменьшениеВыручки = Истина;
				Иначе
					ЕстьУменьшениеКоличестваБезИнвентаризации = Истина;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	

	КонецЦикла;

	Если ЕстьУвеличениеКоличестваПоОрдерномуСкладу
		ИЛИ ЕстьУвеличениеКоличестваБезИнвентаризации
		ИЛИ ЕстьУменьшениеКоличестваПоОрдерномуСкладу
		ИЛИ ЕстьУменьшениеКоличестваБезИнвентаризации
		ИЛИ ЕстьУвеличениеВыручки
		ИЛИ ЕстьУменьшениеВыручки Тогда

		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяТЧ", ИмяТЧ);
		ДополнительныеПараметры.Вставить("СписокВариантовДляВыбора", Новый Массив);
		ДополнительныеПараметры.Вставить("ИмяСвойстваДляРезультатаВыбора", Неопределено);

		ДополнительныеПараметры.Вставить("ВариантОтраженияУвеличениеКоличестваПоОрдерномуСкладу", Неопределено);
		ДополнительныеПараметры.Вставить("ВариантОтраженияУвеличениеКоличестваБезИнвентаризации", Неопределено);
		ДополнительныеПараметры.Вставить("ВариантОтраженияУменьшениеКоличестваПоОрдерномуСкладу", Неопределено);
		ДополнительныеПараметры.Вставить("ВариантОтраженияУменьшениеКоличестваБезИнвентаризации", Неопределено);
		ДополнительныеПараметры.Вставить("ВариантОтраженияУвеличениеВыручки", Неопределено);
		ДополнительныеПараметры.Вставить("ВариантОтраженияУменьшениеВыручки", Неопределено);

		Если ЕстьУвеличениеКоличестваПоОрдерномуСкладу Тогда

			СписокВариантовОтражения = Новый СписокЗначений;
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах"));
			#Удаление
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализациюУчестьПриИнвентаризации"));
			#КонецУдаления
			#Вставка
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализациюУменьшитьСкладскиеОстатки"));
			#КонецВставки
			
			ДополнительныеПараметры.СписокВариантовДляВыбора.Добавить(Новый Структура("ИмяСвойстваДляРезультатаВыбора, СписокВариантовОтражения", "ВариантОтраженияУвеличениеКоличестваПоОрдерномуСкладу", СписокВариантовОтражения));

		КонецЕсли;
		Если ЕстьУвеличениеКоличестваБезИнвентаризации Тогда
			СписокВариантовОтражения = Новый СписокЗначений;
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах"));
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьРеализациюУменьшитьСкладскиеОстатки"));

			ДополнительныеПараметры.СписокВариантовДляВыбора.Добавить(Новый Структура("ИмяСвойстваДляРезультатаВыбора, СписокВариантовОтражения", "ВариантОтраженияУвеличениеКоличестваБезИнвентаризации", СписокВариантовОтражения));

		КонецЕсли;
		Если ЕстьУвеличениеВыручки Тогда
			СписокВариантовОтражения = Новый СписокЗначений;
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.ОтразитьНаПрочихДоходах"));
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УвеличитьВыручку"));

			ДополнительныеПараметры.СписокВариантовДляВыбора.Добавить(Новый Структура("ИмяСвойстваДляРезультатаВыбора, СписокВариантовОтражения", "ВариантОтраженияУвеличениеВыручки", СписокВариантовОтражения));

		КонецЕсли;
		Если ЕстьУменьшениеКоличестваПоОрдерномуСкладу Тогда
			СписокВариантовОтражения = Новый СписокЗначений;
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы"));
			#Удаление
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУчестьПриИнвентаризации"));
			#КонецУдаления
			#Вставка
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУвеличитьСкладскиеОстатки"));
			#КонецВставки

			ДополнительныеПараметры.СписокВариантовДляВыбора.Добавить(Новый Структура("ИмяСвойстваДляРезультатаВыбора, СписокВариантовОтражения", "ВариантОтраженияУменьшениеКоличестваПоОрдерномуСкладу", СписокВариантовОтражения));

		КонецЕсли;
		Если ЕстьУменьшениеКоличестваБезИнвентаризации Тогда
			СписокВариантовОтражения = Новый СписокЗначений;
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы"));
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУвеличитьСкладскиеОстатки"));

			ДополнительныеПараметры.СписокВариантовДляВыбора.Добавить(Новый Структура("ИмяСвойстваДляРезультатаВыбора, СписокВариантовОтражения", "ВариантОтраженияУменьшениеКоличестваБезИнвентаризации", СписокВариантовОтражения));

		КонецЕсли;
		Если ЕстьУменьшениеВыручки Тогда
			СписокВариантовОтражения = Новый СписокЗначений;
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.СписатьНаРасходы"));
			СписокВариантовОтражения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьВыручку"));

			ДополнительныеПараметры.СписокВариантовДляВыбора.Добавить(Новый Структура("ИмяСвойстваДляРезультатаВыбора, СписокВариантовОтражения", "ВариантОтраженияУменьшениеВыручки", СписокВариантовОтражения));

		КонецЕсли;

		ВыбратьИнтерактивноВариантыОтраженияКорректировокРеализацийФрагмент( ДополнительныеПараметры);

	Иначе

		ПоказатьПредупреждение(,НСтр("ru = 'Нет строк, в которых доступно изменение варианта отражения.'"));

	КонецЕсли;

	Возврат;
КонецПроцедуры
