

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)
	
	//ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьСвойстваОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
	    Возврат;
	КонецЕсли; 	
	
	ЗаполнитьПоРазбивкеПоДням(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьПоРазбивкеПоДням(Основание) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли; 
	
	ДокументОснование = Основание;
	Организация = Основание.Организация;
	Продукция.Очистить();
	
	Комментарий = Основание.Комментарий; 
	ИмяРеквизита = "Колич"+ДеньНедели(Дата); 
	Если Основание.Метаданные().ТабличныеЧасти.Продукция.Реквизиты.Найти(ИмяРеквизита) = Неопределено Тогда
		//ПоказатьОповещениеПользователя("Надо выбрать рабочий день!");
		Возврат;
	КонецЕсли; 
	
	//СвФас = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("000000006");
	Для каждого Стр Из Основание.Продукция Цикл
		Если ЗначениеЗаполнено(Стр[ИмяРеквизита]) Тогда
			НовСтр = Продукция.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Стр);
			НовСтр.КоличествоПлановое = Стр[ИмяРеквизита];
			НовСтр.ЕдиницаИзмерения = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
			
			//ЗаполнитьСпецификациюВСтроках
			//НовСтр.Рецепт = РасчетРецептур.ПолучитьТекущийРецепт(НовСтр.Номенклатура, НовСтр.ХарактеристикаНоменклатуры);  //0014261 brava
			//НовСтр.Линия = Стр.Линия;
			//НовСтр.Примечание = Стр.КомментарийСтр;
			
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Для каждого СтрПРод Из Продукция Цикл
		Если НЕ ЗначениеЗаполнено(СтрПРод.Линия) Тогда
			Сообщить("В строке "+СтрПРод.НомерСтроки+" не выбрана линия!");
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//0020032
	Если НЕ УжеБылПроведен Тогда
	    УжеБылПроведен = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПечатьОчередностиЗамесов() Экспорт //0025055
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.СменноеЗадание.ПолучитьМакет("Макет");
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Область);
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Заполнить(ЭтотОбъект);
	ТабДок.Вывести(Шапка);
	// Продукция
	Область = Макет.ПолучитьОбласть("ПродукцияШапка");
	ТабДок.Вывести(Область);
	
	ОбластьПромывка = Макет.ПолучитьОбласть("Промывка");

	
	ПовторятьПриПечатиСтроки = ТабДок.Область(ТабДок.ВысотаТаблицы-1, , ТабДок.ВысотаТаблицы,);
	ТабДок.ПовторятьПриПечатиСтроки = ПовторятьПриПечатиСтроки;

	ОбластьПродукция = Макет.ПолучитьОбласть("Продукция");
	
	
	ТЗ = Продукция.Выгрузить();
	ТЗ.Сортировать("Линия, ПорядокПроизводства");
	
	ТекЛиния = "";
	ПрошЦвет = 100;
	Для Каждого ТекСтрокаПродукция Из ТЗ Цикл
		ОбластьПродукция.Параметры.Заполнить(ТекСтрокаПродукция);
		
		ТабДок.Вывести(ОбластьПродукция);
		
		Если НЕ ТекЛиния = ТекСтрокаПродукция.Линия Тогда
			ТекЛиния = ТекСтрокаПродукция.Линия;
			//прошлый цвет при смене линии надо не учитывать
			ПрошЦвет = 100;
		КонецЕсли; 
		
	КонецЦикла;
	
	ТабДок.АвтоМасштаб = истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
	
КонецПроцедуры