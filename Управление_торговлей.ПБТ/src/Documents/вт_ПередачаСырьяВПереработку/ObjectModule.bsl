
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр вт_ДавальческоеСырьеПереданное Приход
	Движения.вт_ДавальческоеСырьеПереданное.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.вт_ДавальческоеСырьеПереданное.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Партнер = Партнер;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Характеристика = ТекСтрокаТовары.Характеристика;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

	//////регистр свободные остатки
	Движения.СвободныеОстатки.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.СвободныеОстатки.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Характеристика = ТекСтрокаТовары.Характеристика;
		Движение.Склад = Склад;
		Движение.ВРезервеСоСклада = ТекСтрокаТовары.Количество;
	КонецЦикла;

	//////регистр свободные остатки
	//Движения.ТоварыКОтгрузке.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.ТоварыКОтгрузке.Добавить();
	//	Движение.Регистратор = Ссылка;
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//	Движение.Период = Дата;
	//	Движение.Склад = Склад;
	//	Движение.Получатель = ЭтотОбъект.Партнер;
	//	
	//	Движение.ДокументОтгрузки = Ссылка;
	//	Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
	//	Движение.Характеристика = ТекСтрокаТовары.Характеристика;

	//	Движение.ВРезерве = ТекСтрокаТовары.Количество;
	//КонецЦикла;
	
	// регистр ТоварыНаСкладах Расход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.Регистратор 	= Ссылка;
		Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
		Движение.Период 		= Дата;
		Движение.Номенклатура 	= ТекСтрокаТовары.Номенклатура;
		Движение.Характеристика = ТекСтрокаТовары.Характеристика;
		Движение.Склад 			= Склад;
		Движение.ВНаличии 		= ТекСтрокаТовары.Количество;
		Движение.Серия 			= ТекСтрокаТовары.Серия;
	КонецЦикла;

//	ДвиженияПоРеглРегистрам();
	


КонецПроцедуры

Функция ПолучитьПервуюСтатьюРасходов()
	Выборка=ПланыВидовХарактеристик.СтатьиРасходов.Выбрать();
	Если Выборка.Следующий() ТОгда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ПланыВидовХарактеристик.СтатьиДоходов.ПустаяСсылка();
	
КонецФункции

Процедура ДвиженияПоРеглРегистрам()
	//Возьмем движения по регистрам, аналогичные оприходование товаров
    //Возвращаем сырье обратно на склад
	
	ДокСписание = Документы.СписаниеНедостачТоваров.СоздатьДокумент();
	ДокСписание.Дата = Дата;
	ДокСписание.Склад = Склад;
	ДокСписание.Организация =  Организация;
	ДокСписание.СтатьяРасходов = ПолучитьПервуюСтатьюРасходов();
	
	
	ТаблТовары = ЭтотОбъект.Товары.Выгрузить();
	ТаблТовары.Свернуть("Номенклатура,Характеристика","Количество");
	
	ДокСписание.Товары.Загрузить(ТаблТовары);
	
	ДокСписание.Записать(РежимЗаписиДокумента.Проведение);
	
	ДвижДокСборка = ДокСписание.Движения;
	
	МД_ДокСборка = ДокСписание.метаданные().Движения;
	МД_ЭтотОбъект = ЭтотОбъект.метаданные().Движения;
	МД_Массив = Новый Массив;
	Для каждого МД_СтрЭтотОбъект из МД_ЭтотОбъект цикл
		Для каждого МД_СтрДокСборка из МД_ДокСборка цикл
			Если МД_СтрДокСборка.Имя = МД_СтрЭтотОбъект.Имя тогда
				МД_Массив.Добавить(МД_СтрЭтотОбъект.Имя);
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
	ДвижСебестоимость = новый ТаблицаЗначений;
	Для каждого ЭлементМД_Массив из МД_Массив цикл
		
		ДвижСебестоимость = ДвижДокСборка[ЭлементМД_Массив].выгрузить();
		ДвижСебестоимость.Колонки.Удалить("Регистратор");
		
			Движения[ЭлементМД_Массив].Записывать = Истина;
			Движения[ЭлементМД_Массив].Загрузить(ДвижСебестоимость);
			
			//Для каждого СтрокаДвижСебестоимость Из ДвижСебестоимость Цикл
			//	НоваяСтрокаДвижСебестоимость = Движения[ЭлементМД_Массив].Добавить();
			//	ЗаполнитьЗначенияСвойств(НоваяСтрокаДвижСебестоимость, СтрокаДвижСебестоимость);
			//КонецЦикла;
		
	КонецЦикла;
	
	Попытка  
		ДокСписание.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Исключение
	КонецПопытки;	
	ДокСписание.УстановитьПометкуУдаления(Истина);
	
	УдалитьДанныеДокументов(ДокСписание.Ссылка);
	
	ДокСписание.ОбменДанными.Загрузка=истина;
	ДокСписание.Удалить();	
	
КонецПроцедуры	


Процедура УдалитьДанныеДокументов(ДокСсылка)
	НЗ = РегистрыСведений.РеестрДокументов.СоздатьНаборЗаписей();
	НЗ.Отбор.Ссылка.Установить(ДокСсылка);
	НЗ.Прочитать();
	НЗ.Очистить();
	НЗ.Записать(Истина);	
КонецПроцедуры
